                                              1 ; 
                                              2 ; PROCESSOR TECHNOLOGY BASIC-5
                                              3 ; USING ZILOG OPCODES, COURTESY OF A SED FILE
                                              4 ; 
                                              5 ; SYSTEM GLOBAL EQUATES
                                              6 ; 
             0005                             7 BDOS	EQU	0005H		;ADDRESS OF JUMP TO BDOS
             0001                             8 CONIN	EQU	1		;CONSOLE IN
             0002                             9 CONOUT	EQU	2		;CONSOLE OUT
             000b                            10 CONSTS	EQU	11		;CONSOLE STATUS
             0005                            11 FPSIZ	EQU	5
             0049                            12 LINLEN	EQU	73		;# OF CHARS IN LEGAL INPUT LINE
             0003                            13 FP123	EQU	FPSIZ-2
             0006                            14 FPNIB	EQU	FP123*2
             0003                            15 DIGIT	EQU	FPNIB/2
             000d                            16 CR	EQU	15Q		;CARRIAGE RETURN
             0000                            17 NULL	EQU	0
             000a                            18 LF	EQU	12Q		;LINE FEED
             0003                            19 ESC	EQU	3Q		;CONTROL C
             0001                            20 EOF	EQU	1		;END OF FILE
             0007                            21 BELL	EQU	7		;BELL CHARACTER
             0007                            22 STESIZ	EQU	2+FPSIZ		;SYMBOL TABLE ELEMENT SIZE
             0028                            23 OPBASE	EQU	'('
             0001                            24 FTYPE	EQU	1		;CONTROL STACK FOR ENTRY TYPE
             000f                            25 FORSZ	EQU	FPSIZ*2+2+2+1	;'FOR' CONTROL STACK ENTRY SIZE
             0002                            26 GTYPE	EQU	2		;CONTROL STACK GOSUB ENTRY TYPE
             0000                            27 ETYPE	EQU	0		;CONTROL STACK UNDERFLOW TYPE
             0031                            28 UMINUS	EQU	61Q		;UNARY MINUS
                                             29 ; 
                                             30 ; STARTUP BASIC SYSTEM
                                             31 ; 
             0100                            32 	ORG	100H
                                             33 ; 
             0100 31 1f 17                   34 START:	LD	SP,CMNDSP
             0103 af                         35 	XOR	A
             0104 32 21 17                   36 	LD	(NULLCT),A		;NULL COUNT.
             0107 21 dd 18                   37 	LD	HL,BASEND		;START OF USER MEMORY
             010a 22 d9 18                   38 	LD	(BOFA),HL		;IS RIGHT AFTER THE BASIC CODE.
             010d 2a 06 00                   39 	LD	HL,(BDOS+1)		;THE ADDRESS OF BDOS IS
             0110 22 db 18                   40 	LD	(MEMTOP),HL		;THE END OF USER MEMORY.
             0113 21 30 08                   41 ST0:	LD	HL,PLS			;"PROGRAM LOADED?" MESSAGE
             0116 cd 00 0e                   42 	CALL	PRNT
             0119 cd 32 0f                   43 	CALL	INLINE
             011c 3a 62 18                   44 	LD	A,(IBUF)
                                             45 ; 
                                             46 ; OPTIONAL ENTRY POINT FOR TAPE OR DISK ROUTINES
                                             47 ; 
                                             48 ; ALLOWS DIRECT PROGRAM INPUT FROM HIGH SPEED DEVICES
                                             49 ; SEE OPERATING INSTRUCTIONS FOR PROPER IMPLEMENTATION
                                             50 ; 
             011f fe 4e                      51 STAR1:	CP	'N'
             0121 ca 41 01                   52 	JP	Z,ST1		;IF NO PROGRAM CLEAR AND INITIALIZE
             0124 fe 59                      53 	CP	'Y'
             0126 c2 13 01                   54 	JP	NZ,ST0
             0129 2a d9 18                   55 	LD	HL,(BOFA)
             012c 7e                         56 ST2:	LD	A,(HL)		;FIND END OF PROGRAM
             012d fe 01                      57 	CP	EOF
             012f ca 38 01                   58 	JP	Z,ST3
             0132 cd ae 02                   59 	CALL	ADR
             0135 c3 2c 01                   60 	JP	ST2
             0138 22 d7 18                   61 ST3:	LD	(EOFA),HL
             013b cd cc 02                   62 	CALL	CCLEAR
             013e c3 44 01                   63 	JP	ST4
             0141 cd c4 02                   64 ST1:	CALL	CSCR
             0144 3e 0c                      65 ST4:	LD	A,2*FPNIB
             0146 32 c9 18                   66 	LD	(INFES),A
                                             67 ; INITIALIZE RANDOM NUMBER
             0149 11 5e 18                   68 	LD	DE,FRAND
             014c 21 87 08                   69 	LD	HL,RANDS
             014f cd 79 0d                   70 	CALL	VCOPY		;FRAND=RANDOM NUMBER SEED
                                             71 ; 
                                             72 ; COMMAND PROCESSOR
                                             73 ; 
             0152 cd ae 0f                   74 CMND1:	CALL	CRLF2
             0155 21 2a 08                   75 	LD	HL,RDYS		;PRINT READY MESSAGE
             0158 cd 00 0e                   76 	CALL	PRNT
             015b 3e 01                      77 CMNDR:	LD	A,1		;SET DIRECT INPUT FLAG
             015d 32 23 17                   78 	LD	(DIRF),A
             0160 31 1f 17                   79 	LD	SP,CMNDSP
             0163 cd b1 0f                   80 	CALL	CRLF
             0166 cd 32 0f                   81 CMND2:	CALL	INLINE		;GET INPUT LINE FROM OPERATOR
             0169 cd 8c 07                   82 	CALL	PP		;PRE-PROCESS IT
             016c da 75 01                   83 	JP	C,CMND3
             016f cd fd 01                   84 	CALL	LINE		;LINE NUMBER...GO EDIT
             0172 c3 66 01                   85 	JP	CMND2
             0175 cd 7b 01                   86 CMND3:	CALL	CMND4
             0178 c3 5b 01                   87 	JP	CMNDR
             017b 21 62 18                   88 CMND4:	LD	HL,IBUF		;POINT TO COMMAND OR STATEMENT
             017e 22 24 17                   89 	LD	(TXA),HL
             0181 cd df 0d                   90 	CALL	GC
             0184 e6 a0                      91 	AND	240Q
             0186 fe a0                      92 	CP	240Q		;CHECK FOR COMMAND
             0188 11 a8 08                   93 	LD	DE,CMNDD
             018b ca 7b 03                   94 	JP	Z,ISTA1		;PROCESS COMMAND
             018e cd 6c 03                   95 	CALL	ISTAT		;PROCESS STATEMENT (IF ALLOWED)
             0191 cd e7 0d                   96 	CALL	GCI
             0194 fe 0d                      97 	CP	CR
             0196 c8                         98 	RET	Z
             0197 01 53 42                   99 E1:	LD	BC,'BS'
             019a c3 b2 01                  100 	JP	ERROR
                                            101 ; ERROR MESSAGE PRINTOUT
             019d 01 41 42                  102 E3:	LD	BC,'BA'
             01a0 c3 b2 01                  103 	JP	ERROR
             01a3 01 53 43                  104 E4:	LD	BC,'CS'
             01a6 c3 b2 01                  105 	JP	ERROR
             01a9 01 42 4f                  106 E5:	LD	BC,'OB'
             01ac c3 b2 01                  107 	JP	ERROR
             01af 01 4d 44                  108 E6:	LD	BC,'DM'
                                            109 ; 
             01b2 c5                        110 ERROR:	PUSH	BC
             01b3 cd b1 0f                  111 	CALL	CRLF
             01b6 c1                        112 	POP	BC
             01b7 cd 76 0f                  113 	CALL	CHOUT
             01ba 41                        114 	LD	B,C
             01bb cd 76 0f                  115 	CALL	CHOUT
             01be 21 41 08                  116 	LD	HL,ERS
             01c1 cd 00 0e                  117 ERM1:	CALL	PRNT
             01c4 3a 23 17                  118 	LD	A,(DIRF)
             01c7 b7                        119 	OR	A
             01c8 c2 52 01                  120 	JP	NZ,CMND1
             01cb 21 48 08                  121 	LD	HL,INS
             01ce cd 00 0e                  122 	CALL	PRNT
                                            123 ; FIND LINE NUMBER
             01d1 2a d9 18                  124 	LD	HL,(BOFA)
             01d4 44                        125 ERM2:	LD	B,H
             01d5 4d                        126 	LD	C,L
             01d6 5e                        127 	LD	E,(HL)
             01d7 16 00                     128 	LD	D,0
             01d9 19                        129 	ADD	HL,DE
             01da eb                        130 	EX	DE,HL
             01db 21 24 17                  131 	LD	HL,TXA
             01de cd 12 0e                  132 	CALL	DCMP
             01e1 eb                        133 	EX	DE,HL
             01e2 da d4 01                  134 	JP	C,ERM2
             01e5 03                        135 	INC	BC
             01e6 0a                        136 	LD	A,(BC)
             01e7 6f                        137 	LD	L,A
             01e8 03                        138 	INC	BC
             01e9 0a                        139 	LD	A,(BC)
             01ea 67                        140 	LD	H,A
             01eb 11 62 18                  141 	LD	DE,IBUF		;USE IBUF TO ACCUMULATE THE LINE NUMBER STRING
             01ee cd d7 0e                  142 	CALL	CNS
             01f1 3e 0d                     143 	LD	A,CR
             01f3 12                        144 	LD	(DE),A
             01f4 21 62 18                  145 	LD	HL,IBUF
             01f7 cd fb 0d                  146 	CALL	PRNTCR
             01fa c3 52 01                  147 	JP	CMND1
                                            148 ; 
                                            149 ; LINE EDITOR
                                            150 ; 
             01fd 2a d9 18                  151 LINE:	LD	HL,(BOFA)	;CHECK FOR EMPTY FILE
             0200 7e                        152 FIN:	LD	A,(HL)		;CHECK IF APPENDING LINE AT END
             0201 3d                        153 	DEC	A
             0202 ca 1c 02                  154 	JP	Z,APP
             0205 eb                        155 	EX	DE,HL
             0206 13                        156 	INC	DE
             0207 2a 60 18                  157 	LD	HL,(IBLN)	;GET INPUT LINE NUMBER
             020a eb                        158 	EX	DE,HL
             020b cd 12 0e                  159 	CALL	DCMP		;COMPARE WITH FILE LINE NUMBER
             020e 2b                        160 	DEC	HL
             020f da 31 02                  161 	JP	C,INSR		;LESS THAN
             0212 ca 31 02                  162 	JP	Z,INSR		;EQUAL
             0215 7e                        163 	LD	A,(HL)		;LENGTH OF LINE
             0216 cd ae 02                  164 	CALL	ADR		;JUMP FORWARD
             0219 c3 00 02                  165 	JP	FIN
                                            166 ; APPEND LINE AT END CASE
             021c 3a 5f 18                  167 APP:	LD	A,(IBCNT)	;DON'T APPEND NULL LINE
             021f fe 04                     168 	CP	4
             0221 c8                        169 	RET	Z
             0222 cd b3 02                  170 	CALL	FULL		;CHECK FOR ROOM IN FILE
             0225 2a d7 18                  171 	LD	HL,(EOFA)	;PLACE LINE IN FILE
             0228 cd 85 02                  172 	CALL	IMOV
             022b 36 01                     173 	LD	(HL),EOF
             022d 22 d7 18                  174 	LD	(EOFA),HL
             0230 c9                        175 	RET
                                            176 ; INSERT LINE IN FILE CASE
             0231 46                        177 INSR:	LD	B,(HL)		;OLD LINE COUNT
             0232 22 cc 18                  178 	LD	(INSA),HL	;INSERT LINE POINTER
             0235 3a 5f 18                  179 	LD	A,(IBCNT)	;NEW LINE COUNT
             0238 da 49 02                  180 	JP	C,LT		;JMP IF NEW LINE # NOT = OLD LINE NUMBER
             023b d6 04                     181 	SUB	4
             023d ca 42 02                  182 	JP	Z,LT1		;TEST IF SHOULD DELETE NULL LINE
             0240 c6 04                     183 	ADD	A,4
             0242 90                        184 LT1:	SUB	B
             0243 ca 7c 02                  185 	JP	Z,LIN1		;LINE LENGTHS EQUAL
             0246 da 68 02                  186 	JP	C,GT
                                            187 ; EXPAND FILE FOR NEW OR LARGER LINE
             0249 47                        188 LT:	LD	B,A
             024a 3a 5f 18                  189 	LD	A,(IBCNT)
             024d fe 04                     190 	CP	4		;DON'T INSERT NULL LINE
             024f c8                        191 	RET	Z
             0250 78                        192 	LD	A,B
             0251 cd b3 02                  193 	CALL	FULL
             0254 2a cc 18                  194 	LD	HL,(INSA)
             0257 cd a2 02                  195 	CALL	NMOV
             025a 2a d7 18                  196 	LD	HL,(EOFA)
             025d eb                        197 	EX	DE,HL
             025e 22 d7 18                  198 	LD	(EOFA),HL
             0261 03                        199 	INC	BC
             0262 cd 97 02                  200 	CALL	RMOV
             0265 c3 7c 02                  201 	JP	LIN1
                                            202 ; CONTRACT FILE FOR SMALLER LINE
             0268 2f                        203 GT:	CPL
             0269 3c                        204 	INC	A
             026a cd ae 02                  205 	CALL	ADR
             026d cd a2 02                  206 	CALL	NMOV
             0270 eb                        207 	EX	DE,HL
             0271 2a cc 18                  208 	LD	HL,(INSA)
             0274 c4 8c 02                  209 	CALL	NZ,LMOV
             0277 36 01                     210 	LD	(HL),EOF
             0279 22 d7 18                  211 	LD	(EOFA),HL
                                            212 ; INSERT CURRENT LINE INTO FILE
             027c 2a cc 18                  213 LIN1:	LD	HL,(INSA)
             027f 3a 5f 18                  214 	LD	A,(IBCNT)
             0282 fe 04                     215 	CP	4
             0284 c8                        216 	RET	Z
                                            217 ; INSERT CURRENT LINE AT ADDR HL
             0285 11 5f 18                  218 IMOV:	LD	DE,IBCNT
             0288 1a                        219 	LD	A,(DE)
             0289 4f                        220 	LD	C,A
             028a 06 00                     221 	LD	B,0
                                            222 ; COPY BLOCK FROM BEGINNING
                                            223 ; HL IS DEST ADDR, DE IS SOURCE ADDR, BC IS COUNT
             028c 1a                        224 LMOV:	LD	A,(DE)
             028d 77                        225 	LD	(HL),A
             028e 13                        226 	INC	DE
             028f 23                        227 	INC	HL
             0290 0b                        228 	DEC	BC
             0291 78                        229 	LD	A,B
             0292 b1                        230 	OR	C
             0293 c2 8c 02                  231 	JP	NZ,LMOV
             0296 c9                        232 	RET
                                            233 ; COPY BLOCK STARTING AT END
                                            234 ; HL IS DEST, DE IS SOURCE, BC IS COUNT
             0297 1a                        235 RMOV:	LD	A,(DE)
             0298 77                        236 	LD	(HL),A
             0299 2b                        237 	DEC	HL
             029a 1b                        238 	DEC	DE
             029b 0b                        239 	DEC	BC
             029c 78                        240 	LD	A,B
             029d b1                        241 	OR	C
             029e c2 97 02                  242 	JP	NZ,RMOV
             02a1 c9                        243 	RET
                                            244 ;     COMPUTE FILE MOVE COUNT
                                            245 ; BC GETS (EOFA) - (HL), RET Z SET MEANS ZERO COUNT
             02a2 3a d7 18                  246 NMOV:	LD	A,(EOFA)
             02a5 95                        247 	SUB	L
             02a6 4f                        248 	LD	C,A
             02a7 3a d8 18                  249 	LD	A,(EOFA+1)
             02aa 9c                        250 	SBC	A,H
             02ab 47                        251 	LD	B,A
             02ac b1                        252 	OR	C
             02ad c9                        253 	RET
                                            254 ; ADD A TO HL
             02ae 85                        255 ADR:	ADD	A,L
             02af 6f                        256 	LD	L,A
             02b0 d0                        257 	RET	NC
             02b1 24                        258 	INC	H
             02b2 c9                        259 	RET
                                            260 ; CHECK FOR FILE OVERFLOW, LEAVES NEW EOFA IN DE
                                            261 ; A HAS INCREASE IN SIZE
             02b3 2a d7 18                  262 FULL:	LD	HL,(EOFA)
             02b6 cd ae 02                  263 	CALL	ADR
             02b9 eb                        264 	EX	DE,HL
             02ba 21 db 18                  265 	LD	HL,MEMTOP
             02bd cd 12 0e                  266 	CALL	DCMP
             02c0 d2 d1 0d                  267 	JP	NC,E8
             02c3 c9                        268 	RET
                                            269 ; 
                                            270 ;    COMMANDS
                                            271 ; 
             02c4 2a d9 18                  272 CSCR:	LD	HL,(BOFA)
             02c7 36 01                     273 	LD	(HL),EOF
             02c9 22 d7 18                  274 	LD	(EOFA),HL
                                            275 ; "CLEAR"
             02cc 2a d7 18                  276 CCLEAR:	LD	HL,(EOFA)	;CLEAR FROM EOFA TO MEMTOP
             02cf 23                        277 	INC	HL
             02d0 22 ad 18                  278 	LD	(MATA),HL
             02d3 eb                        279 	EX	DE,HL
             02d4 21 db 18                  280 	LD	HL,MEMTOP		;END OF ASSIGNED MEMORY
             02d7 af                        281 CCLR1:	XOR	A
             02d8 12                        282 	LD	(DE),A
             02d9 cd 12 0e                  283 	CALL	DCMP
             02dc 13                        284 	INC	DE
             02dd c2 d7 02                  285 	JP	NZ,CCLR1
             02e0 2a db 18                  286 	LD	HL,(MEMTOP)
             02e3 22 42 18                  287 	LD	(STAA),HL
             02e6 21 89 17                  288 	LD	HL,CSTKL+CSTKSZ-1
             02e9 36 00                     289 	LD	(HL),ETYPE
             02eb 22 44 18                  290 	LD	(CSTKA),HL
             02ee 21 44 18                  291 	LD	HL,ASTKL+ASTKSZ+FPSIZ-1
             02f1 22 ab 18                  292 	LD	(ASTKA),HL
             02f4 c9                        293 	RET
                                            294 ; "NULL"
             02f5 cd bd 0e                  295 CNULL:	CALL	INTGER
             02f8 da 9d 01                  296 	JP	C,E3		;NO ARGUMENT SUPPLIED
             02fb 7d                        297 	LD	A,L
             02fc 32 21 17                  298 	LD	(NULLCT),A
             02ff c3 52 01                  299 	JP	CMND1
                                            300 ; "LIST"
             0302 cd df 0d                  301 CLIST:	CALL	GC
             0305 fe 0d                     302 	CP	CR
             0307 11 00 00                  303 	LD	DE,0
             030a ca 10 03                  304 	JP	Z,CL0		;JUMP IF NO ARGUMENT SUPPLIED
             030d cd bd 0e                  305 	CALL	INTGER		;ERROR DEFAULT IS LIST
             0310 2a d9 18                  306 CL0:	LD	HL,(BOFA)
             0313 7e                        307 CL1:	LD	A,(HL)
             0314 3d                        308 	DEC	A
             0315 c8                        309 	RET	Z
             0316 23                        310 	INC	HL
             0317 cd 12 0e                  311 	CALL	DCMP
             031a 2b                        312 	DEC	HL		;POINT TO COUNT CHAR AGAIN
             031b da 28 03                  313 	JP	C,CL2
             031e ca 28 03                  314 	JP	Z,CL2
                                            315 ; INCREMENT TO NEXT LINE
             0321 7e                        316 	LD	A,(HL)
             0322 cd ae 02                  317 	CALL	ADR
             0325 c3 13 03                  318 	JP	CL1
             0328 d5                        319 CL2:	PUSH	DE
             0329 11 62 18                  320 	LD	DE,IBUF		;AREA TO UNPREPROCESS TO
             032c cd f6 07                  321 	CALL	UPPL
             032f 23                        322 	INC	HL
             0330 e5                        323 	PUSH	HL
             0331 21 62 18                  324 	LD	HL,IBUF
             0334 cd fb 0d                  325 	CALL	PRNTCR
             0337 cd bb 0f                  326 	CALL	PCHECK
             033a cd b1 0f                  327 	CALL	CRLF
             033d e1                        328 	POP	HL
             033e d1                        329 	POP	DE
             033f c3 13 03                  330 	JP	CL1
                                            331 ; "RUN"
             0342 cd cc 02                  332 CRUN:	CALL	CCLEAR
             0345 2a d9 18                  333 	LD	HL,(BOFA)
             0348 7e                        334 	LD	A,(HL)
             0349 3d                        335 	DEC	A		;CHECK FOR NULL PROGRAM
             034a ca 52 01                  336 	JP	Z,ENDX
             034d 23                        337 	INC	HL
             034e 23                        338 	INC	HL
             034f 23                        339 	INC	HL
             0350 22 24 17                  340 	LD	(TXA),HL
             0353 22 40 18                  341 	LD	(RTXA),HL	;POINTER FOR 'READ' STATEMENT
             0356 af                        342 	XOR	A
             0357 32 23 17                  343 	LD	(DIRF),A	;CLEAR DIRECT FLAG AND FALL THROUGH TO DRIVER
             035a cd b1 0f                  344 	CALL	CRLF
                                            345 ; 
                                            346 ; INTERPRETER DRIVER
                                            347 ; 
             035d cd bb 0f                  348 ILOOP:	CALL	PCHECK
             0360 cd 6c 03                  349 	CALL	ISTAT		;INTERPRET CURRENT STATEMENT
             0363 cd 0b 0d                  350 	CALL	JOE		;TEST FOR JUNK ON END
             0366 d2 5d 03                  351 	JP	NC,ILOOP		;CONTINUE IF NOT AT END OF PROGRAM
             0369 c3 52 01                  352 	JP	ENDX		;EXECUTE END STATEMENT
                                            353 ; INTERPRET STATEMENT LOCATED BY TXA
             036c cd df 0d                  354 ISTAT:	CALL	GC		;GET FIRST NON BLANK
             036f b7                        355 	OR	A
             0370 f2 89 03                  356 	JP	P,LET		;MUST BE LET IF NOT RW
             0373 fe 91                     357 	CP	IRWLIM		;IS IT AN INITIAL RW
             0375 d2 97 01                  358 	JP	NC,E1
             0378 11 b6 08                  359 	LD	DE,STATD		;STATEMENT DISPATCH TABLE BASE
             037b cd e7 0d                  360 ISTA1:	CALL	GCI		;ADVANCE TEXT POINTER
             037e e6 1f                     361 	AND	37Q	
             0380 07                        362 	RLCA		;MULTIPLY BY TWO PREPARING FOR TABLE LOOKUP
             0381 6f                        363 	LD	L,A
             0382 26 00                     364 	LD	H,0
             0384 19                        365 	ADD	HL,DE
             0385 cd 1d 0e                  366 	CALL	LHLI
             0388 e9                        367 	JP	(HL)		;BRANCK TO STATEMENT OR COMMAND
                                            368 ; 
                                            369 ; STATEMENTS
                                            370 ; 
                                            371 ; "LET"
             0389 cd c7 0c                  372 LET:	CALL	VAR		;CHECK FOR VARIABLE
             038c da 97 01                  373 	JP	C,E1
             038f e5                        374 	PUSH	HL		;SAVE VALUE ADDRESS
             0390 06 f5                     375 	LD	B,EQRW
             0392 cd d7 0d                  376 	CALL	EATC
             0395 cd c4 06                  377 	CALL	EXPRB
             0398 d1                        378 	POP	DE		;DESTINATION ADDRESS
             0399 cd 9b 0d                  379 	CALL	POPA1		;COPY EXPR VALUE TO VARIABLE
             039c c9                        380 	RET		;******* CALL, RET???!!!****************
                                            381 ; "FOR"
             039d cd 40 0e                  382 SFOR:	CALL	DIRT
             03a0 cd c7 0c                  383 	CALL	VAR		;CONTROL VARIABLE
             03a3 da 97 01                  384 	JP	C,E1
             03a6 e5                        385 	PUSH	HL		;CONTROLVARIABLE VALUE ADDRESS
             03a7 06 f5                     386 	LD	B,EQRW
             03a9 cd d7 0d                  387 	CALL	EATC
             03ac cd c4 06                  388 	CALL	EXPRB		;INITIAL VALUE
             03af d1                        389 	POP	DE		;VARIABLE VALUE ADDRESS
             03b0 d5                        390 	PUSH	DE		;SAVE
             03b1 cd 9b 0d                  391 	CALL	POPA1		;SET INITIAL VALUE
             03b4 06 9e                     392 	LD	B,TORW		;RW FOR 'TO'
             03b6 cd d7 0d                  393 	CALL	EATC
             03b9 cd c4 06                  394 	CALL	EXPRB		;LIMIT VALUE COMPUTATION
             03bc cd df 0d                  395 	CALL	GC		;CHECK NEXT CHARACTER FOR POSSIBLE STEP EXPR
             03bf fe 9f                     396 	CP	STEPRW
             03c1 ca cd 03                  397 	JP	Z,FOR1
                                            398 ; USE STEP OF 1
             03c4 11 5d 08                  399 	LD	DE,FPONE
             03c7 cd 85 0d                  400 	CALL	PSHA1
             03ca c3 d3 03                  401 	JP	FOR2
                                            402 ; COMPUTE STEP VALUE
             03cd cd e7 0d                  403 FOR1:	CALL	GCI		;EAT THE STEP RW
             03d0 cd c4 06                  404 	CALL	EXPRB		;THE STEP VALUE
                                            405 ; HERE THE STEP AND LIMIT ARE ON THE ARG STACK
             03d3 11 fe ff                  406 FOR2:	LD	DE,-2		;PREPARE TO ALLOCATE 2 BYTES ON CONTROL STACK
             03d6 cd aa 0d                  407 	CALL	PSHCS		;RETURNS ADDRESS OF THOSE 2 BYTES IN HL
             03d9 eb                        408 	EX	DE,HL
             03da cd 0b 0d                  409 	CALL	JOE		;TEST FOR JUNK ON END
             03dd da a3 01                  410 	JP	C,E4		;NO "FOR" STATEMENT AT END OF PROGRAM
             03e0 eb                        411 	EX	DE,HL	;DE HAS LOOP TEST ADDR, HL HAS CONTROL STACK ADR
             03e1 72                        412 	LD	(HL),D		;HIGH ORDER TEXT ADDRESS BYTE
             03e2 2b                        413 	DEC	HL
             03e3 73                        414 	LD	(HL),E		;LOW ORDER TEXT ADDRESS BYTE
             03e4 11 fb ff                  415 	LD	DE,-FPSIZ		;ALLOCATE SPACE FOR LIMIT ON CONTROL STACK
             03e7 cd aa 0d                  416 	CALL	PSHCS
             03ea e5                        417 	PUSH	HL		;ADDR ON CONTROL STACK FOR LIMIT
             03eb 11 fb ff                  418 	LD	DE,-FPSIZ		;ALLOCATE SPACE FOR STEP ON CONTROL STACK
             03ee cd aa 0d                  419 	CALL	PSHCS
             03f1 cd 9a 0d                  420 	CALL	POPAS		;COPY STEP VALUE TO CONTROL STACK
             03f4 d1                        421 	POP	DE		;CONTROL STACK ADDR FOR LIMIT VLAUE
             03f5 cd 9b 0d                  422 	CALL	POPA1		;LIMIT VALUE TO CONTROL STACK
             03f8 11 fd ff                  423 	LD	DE,-3		;ALLOCATE SPACE FOR TEST ADDRESS AND CS ENTRY
             03fb cd aa 0d                  424 	CALL	PSHCS
             03fe d1                        425 	POP	DE		;CONTROL VARIABLE ADDRESS
             03ff 72                        426 	LD	(HL),D		;HIGH ORDER BYTE OF CONTROL VAR ADDR
             0400 2b                        427 	DEC	HL
             0401 73                        428 	LD	(HL),E		;LOW ORDER BYTE 
             0402 2b                        429 	DEC	HL
             0403 36 01                     430 	LD	(HL),FTYPE		;SET CONTROL STACK ENTRY TYPE FOR "FOR"
             0405 c3 69 04                  431 	JP	NEXT5		;GO FINISH OFF CAREFULLY
                                            432 ; "NEXT"
             0408 cd 40 0e                  433 NEXT:	CALL	DIRT
             040b 2a 44 18                  434 	LD	HL,(CSTKA)	;CONTROL STACK ADDRESS
             040e 7e                        435 	LD	A,(HL)		;STACK ENTRY TYPE BYTE
             040f 3d                        436 	DEC	A		;MUST BE FOR TYPE ELSE ERROR
             0410 c2 a3 01                  437 	JP	NZ,E4		;IMPROPER NEXTING ERROR
             0413 23                        438 	INC	HL		;CONTROL STACK POINTER TO CONTROL VAR ADDR
             0414 e5                        439 	PUSH	HL
             0415 cd c7 0c                  440 	CALL	VAR		;CHECK VARIABLE, IN CASE USER WANTS
             0418 da 24 04                  441 	JP	C,NEXT1		;SKIP CHECK IF VAR NOT THERE
             041b eb                        442 	EX	DE,HL
             041c e1                        443 	POP	HL		;CONTROL VARIABLE ADDRESS
             041d e5                        444 	PUSH	HL		;SAVE IT AGAIN
             041e cd 12 0e                  445 	CALL	DCMP
             0421 c2 a3 01                  446 	JP	NZ,E4		;IMPROPER NESTING IF NOT THE SAME
             0424 e1                        447 NEXT1:	POP	HL		;CONTROL VARIABLE ADDRESS
             0425 e5                        448 	PUSH	HL
             0426 e5                        449 	PUSH	HL
             0427 11 06 00                  450 	LD	DE,FPSIZ+2-1		;COMPUTE ADDRESS TO STEP VALUE
             042a 19                        451 	ADD	HL,DE
             042b e3                        452 	EX	(SP),HL	;NOW ADDRESS TO VAR IN HL
             042c cd 1d 0e                  453 	CALL	LHLI		;VARIABLE ADDRESS
             042f 44                        454 	LD	B,H		;COPY VAR ADDRESS TO BC
             0430 4d                        455 	LD	C,L
             0431 d1                        456 	POP	DE		;STEP VALUE ADDRESS
             0432 d5                        457 	PUSH	DE
             0433 cd 57 13                  458 	CALL	FADD		;DO INCREMENT
             0436 e1                        459 	POP	HL		;STEP VALUE
             0437 2b                        460 	DEC	HL		;POINT TO SIGN OF STEP VALUE
             0438 7e                        461 	LD	A,(HL)		;SIGN 0=POS, 1=NEG
             0439 11 06 00                  462 	LD	DE,FPSIZ+1
             043c 19                        463 	ADD	HL,DE		;PUTS LIMIT ADDRESS IN HL
             043d eb                        464 	EX	DE,HL
             043e e1                        465 	POP	HL		;VARIABLE ADDRESS
             043f cd 1d 0e                  466 	CALL	LHLI		;GET ADDRESS
             0442 d5                        467 	PUSH	DE		;SAVE CONTROL STACK POINTER TO GET TEXT ADDR
             0443 b7                        468 	OR	A		;SET CONDITIONS BASED ON SIGN OF STEP VALUE
             0444 ca 48 04                  469 	JP	Z,NEXT2		;REVERSE TEST ON NEGATIVE STEP VALUE
             0447 eb                        470 	EX	DE,HL
             0448 44                        471 NEXT2:	LD	B,H		;SET UP ARGS FOR COMPARE
             0449 4d                        472 	LD	C,L
             044a cd 3a 0a                  473 	CALL	RELOP		;TEST <=
             044d d1                        474 	POP	DE		;TEXT ADDRESS
             044e fa 5c 04                  475 	JP	M,NEXT3		;STILL SMALLER?
             0451 ca 5c 04                  476 	JP	Z,NEXT3		;JUMP IF WANT TO CONTINUE LOOP
                                            477 ; TERMINATE LOOP
             0454 21 03 00                  478 	LD	HL,3		;REMOVE CSTACK ENTRY
             0457 19                        479 	ADD	HL,DE
             0458 22 44 18                  480 	LD	(CSTKA),HL
             045b c9                        481 	RET
             045c 13                        482 NEXT3:	INC	DE		;TEXT ADDRESS
             045d eb                        483 	EX	DE,HL
             045e cd 1d 0e                  484 	CALL	LHLI		;GET TEXT ADDRESS IN HL
                                            485 ; ITERATE, SKIPPING NORMAL JUNK ON END TEST AT ILOOP
             0461 eb                        486 NEXT4:	EX	DE,HL	;SAVE NEW TEXT ADDRESS IN DE
             0462 cd 0b 0d                  487 	CALL	JOE
             0465 eb                        488 	EX	DE,HL
             0466 22 24 17                  489 NEXT6:	LD	(TXA),HL
             0469 21 5d 03                  490 NEXT5:	LD	HL,ILOOP
             046c e3                        491 	EX	(SP),HL
             046d c9                        492 	RET		;TO DISPATCHER SKIPPING JOE CALL THERE
                                            493 ; "IF"
             046e 06 01                     494 SIF:	LD	B,1		;SPECIFY PRINCIPAL OPERATOR IS RELATIONAL
             0470 cd c6 06                  495 	CALL	EXPB1
             0473 2a ab 18                  496 	LD	HL,(ASTKA)	;ADDRESS ON BOOLEAN VALUE ON ARG STACK
             0476 34                        497 	INC	(HL)		;SETS ZERO CONDITION IF RELATIONAL TEST TRUE
             0477 f5                        498 	PUSH	AF		;SAVE CONDITIONS TO TEST LATER
             0478 cd 9a 0d                  499 	CALL	POPAS		;REMOVE VALUE FROM ARG STACK COPY TO SELF
             047b f1                        500 	POP	AF
             047c c2 f5 04                  501 	JP	NZ,REM		;IF TEST FALSE TREAT REST OF STATEMENT AS REM
                                            502 ; TEST SUCCEEDED
             047f 06 9d                     503 	LD	B,THENRW
             0481 cd d7 0d                  504 	CALL	EATC
             0484 cd bd 0e                  505 	CALL	INTGER		;CHECK IF LINE NUMBER IS DESIRED ACTION
             0487 da 6c 03                  506 	JP	C,ISTAT
             048a c3 97 04                  507 	JP	GOTO1
                                            508 ; "GOTO"
             048d af                        509 SGOTO:	XOR	A
             048e 32 23 17                  510 	LD	(DIRF),A	;CLEAR DIRECT STATEMENT FLAG
             0491 cd bd 0e                  511 	CALL	INTGER		;RETURNS INTEGER IN HL IF LINE NUMBER PRESENT
             0494 da 97 01                  512 	JP	C,E1		;SYNTAX ERROR NO LINE NUMBER
             0497 eb                        513 GOTO1:	EX	DE,HL	;LN IN DE
             0498 cd 4b 0e                  514 	CALL	FINDLN		;RETURNS TEST ADDRESS POINTS TO COUNT VALUE
             049b 23                        515 GOTO2:	INC	HL	
             049c 23                        516 	INC	HL
             049d 23                        517 	INC	HL		;ADVANCE TEXT POINTER PAST LINE NUMBER ANDCOUNT
             049e c3 61 04                  518 	JP	NEXT4
                                            519 ; "GOSUB"
             04a1 cd 40 0e                  520 GOSUB:	CALL	DIRT
             04a4 11 fd ff                  521 	LD	DE,-3		;CREATE CONTROL STACK ENTRY
             04a7 cd aa 0d                  522 	CALL	PSHCS
             04aa e5                        523 	PUSH	HL		;SAVE STACK ADDRESS
             04ab cd bd 0e                  524 	CALL	INTGER
             04ae da 97 01                  525 	JP	C,E1
             04b1 eb                        526 	EX	DE,HL	;LINE NUMBER TO DE
             04b2 cd 0b 0d                  527 	CALL	JOE
             04b5 44                        528 	LD	B,H
             04b6 4d                        529 	LD	C,L
             04b7 e1                        530 	POP	HL		;STACK ADDRESS
             04b8 70                        531 	LD	(HL),B		;STACK RETURN ADDRESS RETURNED BY JOE
             04b9 2b                        532 	DEC	HL
             04ba 71                        533 	LD	(HL),C
             04bb 2b                        534 	DEC	HL
             04bc 36 02                     535 	LD	(HL),GTYPE		;MAKE CONTROL STACK ENTRY TYPE "GOSUB"
             04be cd 4b 0e                  536 	CALL	FINDLN
             04c1 23                        537 	INC	HL
             04c2 23                        538 	INC	HL
             04c3 23                        539 	INC	HL
             04c4 c3 66 04                  540 	JP	NEXT6
                                            541 ; "RETURN"
             04c7 cd 40 0e                  542 RETRN:	CALL	DIRT
             04ca 32 23 17                  543 	LD	(DIRF),A	;CLEARS DIRF IN ACC IS CLEAR
             04cd 2a 44 18                  544 	LD	HL,(CSTKA)
             04d0 7e                        545 RET1:	LD	A,(HL)
             04d1 b7                        546 	OR	A		;CHECK FOR STACK EMPTY
             04d2 ca a3 01                  547 	JP	Z,E4
             04d5 fe 02                     548 	CP	GTYPE		;CHECK FOR GOSUB TYPE
             04d7 ca e1 04                  549 	JP	Z,RET2
                                            550 ; REMOVE FOR TYPE ENTRY FROM STACK
             04da 11 0f 00                  551 	LD	DE,FORSZ
             04dd 19                        552 	ADD	HL,DE
             04de c3 d0 04                  553 	JP	RET1
                                            554 ; FOUND A GTYPE STACK ENTRY
             04e1 23                        555 RET2:	INC	HL
             04e2 5e                        556 	LD	E,(HL)		;LOW ORDER TEXT ADDRESS
             04e3 23                        557 	INC	HL
             04e4 56                        558 	LD	D,(HL)		;HIGH ORDER TEXT ADDRESS
             04e5 23                        559 	INC	HL		;ADDRESS OF PREVIOUS CONTROL STACK ENTRY
             04e6 22 44 18                  560 	LD	(CSTKA),HL
             04e9 eb                        561 	EX	DE,HL	;PUT TEXT ADDRESS IN HL
             04ea 7e                        562 	LD	A,(HL)		;ADDRESS POINTS TO EOF IF GOSUB WAS LAST LINE
             04eb 3d                        563 	DEC	A		;END OF FILE?
             04ec c2 61 04                  564 	JP	NZ,NEXT4
             04ef c3 52 01                  565 	JP	ENDX
                                            566 ; "DATA" AND "REM"
             04f2 cd 40 0e                  567 DATA:	CALL	DIRT		;DATA STATEMENT ILLEGAL AS DIRECT
             04f5 cd e7 0d                  568 REM:	CALL	GCI
             04f8 fe 0d                     569 	CP	CR
             04fa c2 f5 04                  570 	JP	NZ,REM
             04fd 2b                        571 	DEC	HL		;BACKUP POINTER SO NORMAL JOE WILL WORK
             04fe 22 24 17                  572 	LD	(TXA),HL
             0501 c9                        573 	RET
                                            574 ; "DIM"
             0502 cd 26 0d                  575 DIM:	CALL	NAME		;LOOK FOR VARIABLE NAME
             0505 da 97 01                  576 	JP	C,E1
             0508 79                        577 	LD	A,C		;PREPARE TURN ON 80H BIT TO SIGNIFY MATRIX
             0509 f6 80                     578 	OR	80H	
             050b 4f                        579 	LD	C,A
             050c cd 35 0d                  580 	CALL	STLK
             050f d2 af 01                  581 	JP	NC,E6		;ERROR IF NAME ALREADY EXISTS
             0512 e5                        582 	PUSH	HL		;SYMBOL TABLE ADDRESS
             0513 06 e0                     583 	LD	B,LPARRW
             0515 cd d7 0d                  584 	CALL	EATC
             0518 cd c4 06                  585 	CALL	EXPRB
             051b 06 29                     586 	LD	B,')'
             051d cd d7 0d                  587 	CALL	EATC
             0520 cd 67 0e                  588 	CALL	PFIX		;RETURN INTEGER IN DE
             0523 21 82 08                  589 	LD	HL,MATUB		;MAXIMUM SIZE FORM MATRIX
             0526 cd 12 0e                  590 	CALL	DCMP
             0529 d2 af 01                  591 	JP	NC,E6
             052c e1                        592 	POP	HL		;SYMBOL TABLE ADDRESS
             052d cd a3 0c                  593 	CALL	DIMS
             0530 cd df 0d                  594 	CALL	GC		;SEE IF MORE TO DO
             0533 fe 2c                     595 	CP	','
             0535 c0                        596 	RET	NZ
             0536 cd e7 0d                  597 	CALL	GCI		;EAT THE COMMA
             0539 c3 02 05                  598 	JP	DIM
                                            599 ; "STOP"
             053c cd 40 0e                  600 STOP:	CALL	DIRT
             053f cd ae 0f                  601 STOP1:	CALL	CRLF2
             0542 32 ce 18                  602 	LD	(BRKCHR),A
             0545 21 52 08                  603 	LD	HL,STOPS
             0548 c3 c1 01                  604 	JP	ERM1
                                            605 ; "END"
             0152                           606 ENDX	EQU	CMND1
                                            607 ; "READ"
             054b cd 40 0e                  608 READ:	CALL	DIRT
             054e 2a 24 17                  609 	LD	HL,(TXA)
             0551 e5                        610 	PUSH	HL		;SAVE TXA TEMPORARILY
             0552 2a 40 18                  611 	LD	HL,(RTXA)	;THE 'READ' TXA
             0555 22 24 17                  612 READ0:	LD	(TXA),HL
             0558 cd e7 0d                  613 	CALL	GCI
             055b fe 2c                     614 	CP	','
             055d ca 78 05                  615 	JP	Z,READ2		;PROCESS INPUT VALUE
             0560 fe 87                     616 	CP	DATARW
             0562 ca 78 05                  617 	JP	Z,READ2
             0565 3d                        618 	DEC	A
             0566 ca a5 05                  619 	JP	Z,READ4
                                            620 ; SKIP TO NEXT LINE
             0569 cd f5 04                  621 	CALL	REM		;LEAVES ADDRESS OF LAST CR IN HL
             056c 23                        622 	INC	HL
             056d 7e                        623 	LD	A,(HL)
             056e 3d                        624 	DEC	A
             056f ca a5 05                  625 	JP	Z,READ4
             0572 23                        626 	INC	HL
             0573 23                        627 	INC	HL
             0574 23                        628 	INC	HL		;HL NOW POINTS TO FIRST BYTE ON NEXT LINE
             0575 c3 55 05                  629 	JP	READ0
                                            630 ; PROCESS VALUE
             0578 cd c4 06                  631 READ2:	CALL	EXPRB
             057b cd df 0d                  632 	CALL	GC
             057e fe 2c                     633 	CP	','		;SKIP JOE TEST IF COMMA
             0580 ca 86 05                  634 	JP	Z,READ3
                                            635 ; JUNK ON END TEST
             0583 cd 0b 0d                  636 	CALL	JOE
             0586 2a 24 17                  637 READ3:	LD	HL,(TXA)
             0589 22 40 18                  638 	LD	(RTXA),HL	;SAVE NEW "READ" TEXT ADDRESS
             058c e1                        639 	POP	HL		;REAL TXA
             058d 22 24 17                  640 	LD	(TXA),HL
             0590 cd c7 0c                  641 	CALL	VAR
             0593 da 97 01                  642 	JP	C,E1
             0596 cd 9a 0d                  643 	CALL	POPAS		;PUT READ VALUE INTO VARIABLE
             0599 cd df 0d                  644 	CALL	GC
             059c fe 2c                     645 	CP	','		;CHECK FOR ANOTHER VARIABLE
             059e c0                        646 	RET	NZ
             059f cd e7 0d                  647 	CALL	GCI		;EAT THE COMMA
             05a2 c3 4b 05                  648 	JP	READ
             05a5 e1                        649 READ4:	POP	HL		;PROGRAM TXA
             05a6 22 24 17                  650 	LD	(TXA),HL
             05a9 01 44 52                  651 	LD	BC,'RD'
             05ac c3 b2 01                  652 	JP	ERROR
                                            653 ; "RESTORE"
             05af 2a d9 18                  654 RESTOR:	LD	HL,(BOFA)	;BEGINNING OF FILE POINTER
             05b2 23                        655 	INC	HL
             05b3 23                        656 	INC	HL
             05b4 23                        657 	INC	HL
             05b5 22 40 18                  658 	LD	(RTXA),HL
             05b8 c9                        659 	RET
                                            660 ; "PRINT"
             05b9 cd df 0d                  661 PRINT:	CALL	GC
             05bc fe 0d                     662 	CP	CR		;CHECK FOR STAND ALONE PRINT
             05be ca b1 0f                  663 	JP	Z,CRLF
             05c1 fe 22                     664 PRIN2:	CP	'"'
             05c3 ca 03 06                  665 	JP	Z,PSTR		;PRINT THE STRING
             05c6 fe 9c                     666 	CP	TABRW	
             05c8 ca 45 06                  667 	JP	Z,PTAB		;TABULATION
             05cb fe 25                     668 	CP	'%'
             05cd ca 10 06                  669 	JP	Z,PFORM		;SET FORMAT
             05d0 fe 0d                     670 	CP	CR
             05d2 c8                        671 	RET	Z
             05d3 fe 3b                     672 	CP	';'
             05d5 c8                        673 	RET	Z
             05d6 cd c4 06                  674 	CALL	EXPRB		;MUST BE EXPRESSION TO PRINT
             05d9 11 4a 18                  675 	LD	DE,FPSINK
             05dc cd 9b 0d                  676 	CALL	POPA1		;POP VALUE TO FPSINK
             05df 3a 1f 17                  677 	LD	A,(PHEAD)
             05e2 fe 38                     678 	CP	56
             05e4 d4 b1 0f                  679 	CALL	NC,CRLF		;DO CRLF IF PRINT HEAD IS PAST 56
             05e7 21 4a 18                  680 	LD	HL,FPSINK
             05ea cd 02 10                  681 	CALL	FPOUT
             05ed 06 20                     682 	LD	B,' '
             05ef cd 76 0f                  683 	CALL	CHOUT
             05f2 cd df 0d                  684 PR1:	CALL	GC		;GET DELIMITER
             05f5 fe 2c                     685 	CP	','
             05f7 c2 b1 0f                  686 	JP	NZ,CRLF
             05fa cd e7 0d                  687 PR0:	CALL	GCI
             05fd cd df 0d                  688 	CALL	GC
             0600 c3 c1 05                  689 	JP	PRIN2
             0603 cd e7 0d                  690 PSTR:	CALL	GCI		;GOBBLE THE QUOTE
             0606 cd 00 0e                  691 	CALL	PRNT		;PRINT UP TO DOUBLE QUOTE
             0609 23                        692 	INC	HL		;MOVE POINTER PAST DOUBLE QUOTE
             060a 22 24 17                  693 	LD	(TXA),HL
             060d c3 f2 05                  694 	JP	PR1
             0610 3e 0c                     695 PFORM:	LD	A,2*FPNIB
             0612 32 c9 18                  696 	LD	(INFES),A
             0615 cd e7 0d                  697 	CALL	GCI		;GOBBLE PREVIOUS CHAR
             0618 cd e7 0d                  698 PFRM1:	CALL	GCI
             061b 21 c9 18                  699 	LD	HL,INFES
             061e fe 25                     700 	CP	'%'		;DELIMITER
             0620 ca f2 05                  701 	JP	Z,PR1
             0623 06 80                     702 	LD	B,80H
             0625 fe 5a                     703 	CP	'Z'		;TRAILING ZEROS?
             0627 ca 3f 06                  704 	JP	Z,PF1
             062a 06 01                     705 	LD	B,1
             062c fe 45                     706 	CP	'E'		;SCIENTIFIC NOTATION?
             062e ca 3f 06                  707 	JP	Z,PF1
             0631 cd 89 12                  708 	CALL	NMCHK
             0634 d2 97 01                  709 	JP	NC,E1
             0637 d6 30                     710 	SUB	'0'		;NUMBER OF DECIMAL PLACES
             0639 07                        711 	RLCA
             063a 47                        712 	LD	B,A
             063b 7e                        713 	LD	A,(HL)
             063c e6 c1                     714 	AND	301Q
             063e 77                        715 	LD	(HL),A
             063f 7e                        716 PF1:	LD	A,(HL)
             0640 b0                        717 	OR	B
             0641 77                        718 	LD	(HL),A
             0642 c3 18 06                  719 	JP	PFRM1
             0645 cd e7 0d                  720 PTAB:	CALL	GCI		;GOBBLE TAB RW
             0648 06 e0                     721 	LD	B,LPARRW
             064a cd d7 0d                  722 	CALL	EATC
             064d cd c4 06                  723 	CALL	EXPRB
             0650 06 29                     724 	LD	B,')'
             0652 cd d7 0d                  725 	CALL	EATC
             0655 cd 67 0e                  726 	CALL	PFIX
             0658 3a 1f 17                  727 PTAB1:	LD	A,(PHEAD)
             065b bb                        728 	CP	E
             065c d2 f2 05                  729 	JP	NC,PR1
             065f 06 20                     730 	LD	B,' '
             0661 cd 76 0f                  731 	CALL	CHOUT
             0664 c3 58 06                  732 	JP	PTAB1
                                            733 ; "INPUT"
             0667 cd df 0d                  734 INPUT:	CALL	GC
             066a fe 2c                     735 	CP	','
             066c ca b8 06                  736 	JP	Z,NCRLF
             066f cd b1 0f                  737 	CALL	CRLF
             0672 06 3f                     738 INP0:	LD	B,'?'
             0674 cd 76 0f                  739 	CALL	CHOUT
             0677 cd 32 0f                  740 LINP:	CALL	INLINE
             067a 11 62 18                  741 	LD	DE,IBUF
             067d d5                        742 IN1:	PUSH	DE		;SAVE FOR FPIN
             067e cd c7 0c                  743 	CALL	VAR
             0681 da 97 01                  744 	JP	C,E1
             0684 d1                        745 	POP	DE
             0685 06 00                     746 	LD	B,0
             0687 1a                        747 	LD	A,(DE)
             0688 fe 2b                     748 	CP	'+'		;LOOK FOR LEADING PLUS OR MINUS ON INPUT
             068a ca 94 06                  749 	JP	Z,IN2
             068d fe 2d                     750 	CP	'-'
             068f c2 95 06                  751 	JP	NZ,IN3
             0692 06 01                     752 	LD	B,1
             0694 13                        753 IN2:	INC	DE
             0695 c5                        754 IN3:	PUSH	BC
             0696 e5                        755 	PUSH	HL
             0697 cd e6 11                  756 	CALL	FPIN		;INPUT FP NUMBER
             069a da be 06                  757 	JP	C,INERR
             069d e1                        758 	POP	HL
             069e 2b                        759 	DEC	HL
             069f f1                        760 	POP	AF
             06a0 77                        761 	LD	(HL),A
             06a1 cd df 0d                  762 	CALL	GC
             06a4 fe 2c                     763 	CP	','
             06a6 c0                        764 	RET	NZ	;DONE IF NO MORE
             06a7 cd e7 0d                  765 	CALL	GCI		;EAT THE COMMA
             06aa 78                        766 	LD	A,B		;GET THE TERMINATOR TO A
             06ab fe 2c                     767 	CP	','
             06ad ca 7d 06                  768 	JP	Z,IN1		;GET THE NEXT INPUT VALUE FROM STRING
                                            769 ; GET NEW LINE FROM USER
             06b0 06 3f                     770 	LD	B,'?'
             06b2 cd 76 0f                  771 	CALL	CHOUT
             06b5 c3 72 06                  772 	JP	INP0
             06b8 cd e7 0d                  773 NCRLF:	CALL	GCI
             06bb c3 77 06                  774 	JP	LINP		;NOW GET LINE
             06be 01 4e 49                  775 INERR:	LD	BC,'IN'
             06c1 c3 b2 01                  776 	JP	ERROR
                                            777 ; 
                                            778 ; EVALUATE AN EXPRESSION FROM TEXT
                                            779 ; HL TAKE OP TABLE ADDR OF PREVIOUS OPERATOR (NOT CHANGED)
                                            780 ; RESULT VALUE LEFT ON TOP OF ARG STACK, ARGF LEFT TRUE
                                            781 ; 
             06c4 06 00                     782 EXPRB:	LD	B,0
             06c6 21 c4 09                  783 EXPB1:	LD	HL,OPBOL
             06c9 af                        784 	XOR	A
             06ca 32 20 17                  785 	LD	(RELTYP),A
                                            786 ; ZERO IN B MEANS PRINCIPAL OPERATOR MAY NOT BE RELATIONAL
             06cd c5                        787 EXPR:	PUSH	BC
             06ce e5                        788 	PUSH	HL		;PUSH OPTBA
             06cf af                        789 	XOR	A
             06d0 32 22 17                  790 	LD	(ARGF),A
             06d3 3a 22 17                  791 EXPR1:	LD	A,(ARGF)
             06d6 b7                        792 	OR	A
             06d7 c2 f4 06                  793 	JP	NZ,EXPR2
             06da cd c7 0c                  794 	CALL	VAR		;LOOK FOR VARIABLE PERHAPS SUBSCRIPTED
             06dd d4 84 0d                  795 	CALL	NC,PSHAS
             06e0 d2 f4 06                  796 	JP	NC,EXPR2
             06e3 cd 24 0e                  797 	CALL	CONST
             06e6 d2 f4 06                  798 	JP	NC,EXPR2
             06e9 cd df 0d                  799 	CALL	GC
             06ec fe e0                     800 	CP	LPARRW
             06ee 21 ac 09                  801 	LD	HL,OPLPAR
             06f1 ca 70 07                  802 	JP	Z,XLPAR
                                            803 ; ISN'T OR SHOULDN'T BE AN ARGUMENT
             06f4 cd df 0d                  804 EXPR2:	CALL	GC
             06f7 fe e0                     805 	CP	340Q		;CHECK FOR RESERVED WORD OPERATOR
             06f9 d2 12 07                  806 	JP	NC,XOP
             06fc fe c0                     807 	CP	300Q		;CHECK FOR BUILT IN FUNCTION
             06fe d2 61 07                  808 	JP	NC,XBILT
                                            809 ; ILLEGAL EXPRESSION CHARACTER
             0701 e1                        810 	POP	HL		;GET OPTBA
             0702 3a 22 17                  811 	LD	A,(ARGF)
             0705 b7                        812 	OR	A
             0706 ca 97 01                  813 	JP	Z,E1
             0709 f1                        814 XDON1:	POP	AF
             070a 21 20 17                  815 	LD	HL,RELTYP		;CHECK IF LEGAL PRINCIPAL OPERATOR
             070d be                        816 	CP	(HL)
             070e c8                        817 	RET	Z
             070f c3 97 01                  818 	JP	E1
             0712 e6 1f                     819 XOP:	AND	37Q		;CLEANS OFF RW BITS
             0714 2a 22 17                  820 	LD	HL,(ARGF)	;TEST FOR ARGF TRUE
             0717 2d                        821 	DEC	L
             0718 ca 2d 07                  822 	JP	Z,XOP1
                                            823 ; ARGF WAS FALSE, UNARY OPS ONLY POSSIBILITY
             071b fe 05                     824 	CP	'-'-OPBASE
             071d ca 2b 07                  825 	JP	Z,XOPM
             0720 fe 03                     826 	CP	'+'-OPBASE
             0722 c2 97 01                  827 	JP	NZ,E1
             0725 cd e7 0d                  828 	CALL	GCI		;EAT THE '+'
             0728 c3 d3 06                  829 	JP	EXPR1
             072b 3e 09                     830 XOPM:	LD	A,UMINUS-OPBASE
             072d cd 82 07                  831 XOP1:	CALL	OPADR
             0730 d1                        832 	POP	DE		;PREVIOUS OPTBA
             0731 1a                        833 	LD	A,(DE)
             0732 be                        834 	CP	(HL)
             0733 d2 09 07                  835 	JP	NC,XDON1		;NON-INCREASING PRECEDENCE
                                            836 ; INCREASING PRECEDENCE CASE
             0736 d5                        837 	PUSH	DE		;SAVE PREVIOUS OPTBA
             0737 e5                        838 	PUSH	HL		;SAVE CURRENT OPTBA
             0738 cd e7 0d                  839 	CALL	GCI		;TO GOBBLE OPERATOR
             073b e1                        840 	POP	HL
             073c e5                        841 	PUSH	HL
             073d 06 00                     842 	LD	B,0		;SPECIFY NON-RELATIONAL
             073f cd cd 06                  843 	CALL	EXPR
             0742 e1                        844 	POP	HL
                                            845 ; HL HAS OPTBA ADDRESS
                                            846 ; SET UP ARGS AND PERFORM OPERATION ACTION
             0743 e5                        847 XOP2:	PUSH	HL
             0744 7e                        848 	LD	A,(HL)
             0745 2a ab 18                  849 	LD	HL,(ASTKA)
             0748 44                        850 	LD	B,H
             0749 4d                        851 	LD	C,L
             074a e6 01                     852 	AND	1
             074c c2 58 07                  853 	JP	NZ,XOP21
                                            854 ; DECREMENT STACK POINTER BY ONE VALUE BINARY CASE
             074f 11 05 00                  855 	LD	DE,FPSIZ
             0752 19                        856 	ADD	HL,DE
             0753 22 ab 18                  857 	LD	(ASTKA),HL
             0756 54                        858 	LD	D,H
             0757 5d                        859 	LD	E,L
             0758 21 d3 06                  860 XOP21:	LD	HL,EXPR1
             075b e3                        861 	EX	(SP),HL	;CHANGE RETURN LINK
             075c 23                        862 	INC	HL		;SKIP OVER PRECEDENCE
             075d cd 1d 0e                  863 	CALL	LHLI		;LOAD ACTION ADDRESS
             0760 e9                        864 	JP	(HL)
                                            865 ; 
                                            866 ; ACTION ROUTINE CONVENTION
                                            867 ; DE LEFT ARG AND RESULT FOR BINARY
                                            868 ; BC RIGHT ARG FOR BINARY, ARG AND RESULT FOR UNARY
                                            869 ; 
                                            870 ;         INTRINSIC FUNCTION PROCESSING
                                            871 ; 
             0761 cd e7 0d                  872 XBILT:	CALL	GCI		;EAT TOKEN
             0764 e6 3f                     873 	AND	77Q		;CLEAN OFF RW BITS
             0766 2a 22 17                  874 	LD	HL,(ARGF)	;BUILT IN FUNCTION MUST COME AFTER OPERATOR
             0769 2d                        875 	DEC	L
             076a ca 97 01                  876 	JP	Z,E1
             076d cd 82 07                  877 	CALL	OPADR		;OPTBA TO HL
             0770 e5                        878 XLPAR:	PUSH	HL
             0771 06 e0                     879 	LD	B,LPARRW
             0773 cd d7 0d                  880 	CALL	EATC
             0776 cd c4 06                  881 	CALL	EXPRB
             0779 06 29                     882 	LD	B,')'
             077b cd d7 0d                  883 	CALL	EATC
             077e e1                        884 	POP	HL		;CODE FOR BUILT-IN FUNCTION
             077f c3 43 07                  885 	JP	XOP2
                                            886 ; COMPUTE OPTABLE ADDRESS FOR OPERATOR IN ACC
             0782 4f                        887 OPADR:	LD	C,A
             0783 06 00                     888 	LD	B,0
             0785 21 ac 09                  889 	LD	HL,OPTAB
             0788 09                        890 	ADD	HL,BC
             0789 09                        891 	ADD	HL,BC
             078a 09                        892 	ADD	HL,BC		;OPTAB ENTRY ADDR IS 3*OP+BASE
             078b c9                        893 	RET
                                            894 ; 
                                            895 ; PREPROCESSOR, UN-PREPROCESSOR
                                            896 ; PREPROCESS LINE IN IBUF BACK INTO IBUF
                                            897 ; SETS CARRY IF LINE HAS NO LINE NUMBER
                                            898 ; LEAVES CORRECT LENGTH OF LINE AFTER PREPROCESSING IN IBCN
                                            899 ; IF THERE IS A LINE NUMBER, IT IS LOCATED AT IBLN=IBUF-2
                                            900 ; TXA IS CLOBBERED
                                            901 ; 
             078c 21 62 18                  902 PP:	LD	HL,IBUF		;FIRST CHARACTER OF INPUT LINE
             078f 22 24 17                  903 	LD	(TXA),HL	;SO GCI WILL WORK
             0792 cd bd 0e                  904 	CALL	INTGER		;SETS CARRY IF NO LINE NUMBER
             0795 22 60 18                  905 	LD	(IBLN),HL	;STORE LINE NUMBER VALUE(EVEN IF NONE)
             0798 f5                        906 	PUSH	AF		;SAVE STATE OF CARRY BIT FOR RETURNING
             0799 2a 24 17                  907 	LD	HL,(TXA)	;ADDRESS OF NEXT CHARACTER IN IBUF
             079c 0e 04                     908 	LD	C,4		;SET UP INITIAL VALUE FOR COUNT
             079e 11 62 18                  909 	LD	DE,IBUF		;INITIALIZE WRITE POINTER
                                            910 ; COME HERE TO CONTINUE PREPROCESSING
             07a1 d5                        911 PPL:	PUSH	DE
             07a2 11 d8 08                  912 	LD	DE,RWT		;BASE OF RWT
             07a5 e5                        913 PPL1:	PUSH	HL		;SAVE TEXT ADDRESS
             07a6 1a                        914 	LD	A,(DE)		;RW VALUE FOR THIS ENTRY IN RWT
             07a7 47                        915 	LD	B,A		;SAVE IN B IN CASE OF MATCH
             07a8 13                        916 PPL2:	INC	DE		;ADVANCE ENTRY POINTER TO NEXT BYTE
             07a9 1a                        917 	LD	A,(DE)		;GET NEXT CHARACTER FROM ENTRY
             07aa be                        918 	CP	(HL)		;COMPARE WITH CHARACTER IN TEXT
             07ab c2 b2 07                  919 	JP	NZ,PPL3
             07ae 23                        920 	INC	HL		;ADVANCE TEXT POINTER
             07af c3 a8 07                  921 	JP	PPL2		;CONTINUE COMPARISON
                                            922 ; COME HERE WHEN COMPARISON OF BYTE FAILED
             07b2 b7                        923 PPL3:	OR	A
             07b3 fa e4 07                  924 	JP	M,PPL6		;JUMP IF FOUND MATCH
                                            925 ; SCAN TO BEGINNING ON NEXT ENTRY
             07b6 13                        926 PPL4:	INC	DE		;ADVANCE ENTRY POINTER
             07b7 1a                        927 	LD	A,(DE)		;NEXT BYTE IS EITHER CHARACTER OR RW BYTE
             07b8 b7                        928 	OR	A
             07b9 f2 b6 07                  929 	JP	P,PPL4		;KEEP SCANNING IF NOT RW BYTE
                                            930 ; NOW SEE IF AT END OF TABLE, AND FAIL OR RETURN CONDITION
             07bc e1                        931 	POP	HL		;RECOVER ORIGINAL TEXT POINTER
             07bd ee ff                     932 	XOR	-1		;CHECK FOR END OF TABLE BYTE
             07bf c2 a5 07                  933 	JP	NZ,PPL1		;CONTINUE SCAN OF TABLE
                                            934 ; DIDN'T FIND AN ENTRY AT THE GIVER TEXT ADR
             07c2 d1                        935 	POP	DE
             07c3 7e                        936 	LD	A,(HL)		;GET THE TEXT CHARACTER
             07c4 fe 0d                     937 	CP	CR		;CHECK FOR END OF LINE
             07c6 ca ed 07                  938 	JP	Z,PPL8		;GO CLEAN UP AND RETURN
             07c9 12                        939 	LD	(DE),A
             07ca 13                        940 	INC	DE
             07cb 0c                        941 	INC	C
             07cc 23                        942 	INC	HL		;ADVANCE TEXT POINTER
             07cd fe 22                     943 	CP	'"'		;CHECK FOR QUOTED STRING POSSIBILITY
             07cf c2 a1 07                  944 	JP	NZ,PPL		;RESTART RWT SEARCH AT NEXT CHARACTER POSITION
                                            945 ; HERE WE HAVE A QUOTED STRING, SO EAT TILL ENDQUOTE
             07d2 7e                        946 PPL5:	LD	A,(HL)		;NEXT CHARACTER
             07d3 fe 0d                     947 	CP	CR
             07d5 ca ed 07                  948 	JP	Z,PPL8		;NO STRING ENDQUOTE, LET INTERPRETER WORRY
             07d8 12                        949 	LD	(DE),A
             07d9 13                        950 	INC	DE
             07da 0c                        951 	INC	C
             07db 23                        952 	INC	HL		;ADVANCE TEXT POINTER
             07dc fe 22                     953 	CP	'"'
             07de ca a1 07                  954 	JP	Z,PPL		;BEGIN RWT SCAN FROM NEW CHARACTER POSITION
             07e1 c3 d2 07                  955 	JP	PPL5
                                            956 ; FOUND MATCH SO PUT RW VALUE IN TEXT
             07e4 f1                        957 PPL6:	POP	AF		;REMOVE UNNEEDED TEST POINTER FROM STACK
             07e5 d1                        958 	POP	DE
             07e6 78                        959 	LD	A,B
             07e7 12                        960 	LD	(DE),A
             07e8 13                        961 	INC	DE
             07e9 0c                        962 	INC	C
             07ea c3 a1 07                  963 	JP	PPL
                                            964 ; COME HERE WHEN DONE
             07ed 3e 0d                     965 PPL8:	LD	A,CR
             07ef 12                        966 	LD	(DE),A
             07f0 21 5f 18                  967 	LD	HL,IBCNT		;SET UP COUNT IN CASE LINE OF LINE NUMBER
             07f3 71                        968 	LD	(HL),C
             07f4 f1                        969 	POP	AF		;RESTORE CARRY CONDITION (LINE NUMBER FLAG)
             07f5 c9                        970 	RET
                                            971 ; 
                                            972 ; UN-PREPROCESS LINE ADDRESSES IN HL TO DE BUFFER
                                            973 ; RETURN SOURCE ADDRESS OF CR IN HL ON RETURN
                                            974 ; 
             07f6 23                        975 UPPL:	INC	HL		;SKIP OVER COUNT BYTE
             07f7 e5                        976 	PUSH	HL		;SAVE SOURCE TEXT POINTER
             07f8 cd 1d 0e                  977 	CALL	LHLI		;LOAD LINE NUMBER VALUE
             07fb cd d7 0e                  978 	CALL	CNS		;CONVERT LINE NUMBER
             07fe 3e 20                     979 	LD	A,' '
             0800 12                        980 	LD	(DE),A		;PUT BLANK AFTER LINE NUMBER
             0801 13                        981 	INC	DE		;INCREMENT DESTINATION POINTER
             0802 e1                        982 	POP	HL
             0803 23                        983 	INC	HL		;INCREMENT H PAST LINE NUMBER
             0804 23                        984 UPP0:	INC	HL
             0805 7e                        985 	LD	A,(HL)		;NEXT TOKEN IN SOURCE
             0806 b7                        986 	OR	A
             0807 fa 12 08                  987 	JP	M,UPP1		;JUMP IF TOKEN IS RW
             080a 12                        988 	LD	(DE),A		;PUT CHARACTER IN BUFFER
             080b fe 0d                     989 	CP	CR		;CHECK FOR DONE
             080d c8                        990 	RET	Z
             080e 13                        991 	INC	DE		;ADVANCE DESTINATION BUFFER ADDRESS
             080f c3 04 08                  992 	JP	UPP0
                                            993 ; COME HERE WHEN RW BYTE DETECTED IN SOURCE
             0812 e5                        994 UPP1:	PUSH	HL		;SAVE SOURCE POINTER
             0813 21 d8 08                  995 	LD	HL,RWT		;BASE OF RWT
             0816 be                        996 UPP2:	CP	(HL)		;SEE IF RW MATCHED RWT ENTRY
             0817 23                        997 	INC	HL		;ADVANCE RWT POINTER
             0818 c2 16 08                  998 	JP	NZ,UPP2		;CONTINUE LOOKING IF NOT FOUND
                                            999 ; FOUND MATCH, ENTRY POINTER LOCATES FIRST CHARACTER
             081b 7e                       1000 UPP3:	LD	A,(HL)		;CHARACTER OF RW
             081c b7                       1001 	OR	A		;CHECK FOR DONE
             081d fa 26 08                 1002 	JP	M,UPP4
             0820 12                       1003 	LD	(DE),A
             0821 13                       1004 	INC	DE
             0822 23                       1005 	INC	HL
             0823 c3 1b 08                 1006 	JP	UPP3
                                           1007 ; COME HERE IF DONE WITH RW TRANSFER
             0826 e1                       1008 UPP4:	POP	HL		;SOURCE POINTER
             0827 c3 04 08                 1009 	JP	UPP0
                                           1010 ; 
                                           1011 ; CONSTANTS AND TABLES
                                           1012 ; 
             082a 52 45 41 44 59 22        1013 RDYS:	DEFM	'READY"'
             0830 50 52 4f 47 52 41 4d 20  1014 PLS:	DEFM	'PROGRAM LOADED? "'
                  4c 4f 41 44 45 44 3f 20
                  22
             0841 20 45 52 52 4f 52 22     1015 ERS:	DEFM	' ERROR"'
             0848 20 49 4e 20 4c 49 4e 45  1016 INS:	DEFM	' IN LINE "'
                  20 22
             0852 53 54 4f 50 22           1017 STOPS:	DEFM	'STOP"'
                                           1018 ; 
             0857 ff                       1019 	DEFB	0FFH		;FLAGS END OF SINE COEFFICIENT LIST
             0858 00                       1020 	DEFB	0
             0859 10                       1021 	DEFB	1*16
             085a  0000                    1022 	DEFW	0
             085c 00                       1023 	DEFB	0
             085d 81                       1024 FPONE:	DEFB	129		;EXPONENT
                                           1025 ; SINE COEFFICIENT LIST
                                           1026 ; NOTE: THE FLOATING PNT 1 ABOVE IS A PART OF THIS TABLE
             085e 16                       1027 	DEFB	16H
             085f 66                       1028 	DEFB	66H
             0860 67                       1029 	DEFB	67H
             0861 01                       1030 	DEFB	1
             0862 80                       1031 	DEFB	128		;-.166667 E 0 (-1/3!)
             0863 83                       1032 	DEFB	83H
             0864 33                       1033 	DEFB	33H
             0865 33                       1034 	DEFB	33H
             0866 00                       1035 	DEFB	0
             0867 7e                       1036 	DEFB	128-2		;.833333 E-2 (1/5!)
             0868 19                       1037 	DEFB	19H
             0869 84                       1038 	DEFB	84H
             086a 13                       1039 	DEFB	13H
             086b 01                       1040 	DEFB	1	
             086c 7d                       1041 	DEFB	128-3		;-.198413 E-3 (-1/7!)
             086d 27                       1042 	DEFB	27H
             086e 55                       1043 	DEFB	55H
             086f 73                       1044 	DEFB	73H
             0870 00                       1045 	DEFB	0
             0871 7b                       1046 	DEFB	128-5		;.275573 E-5 (1/9!)
             0872 25                       1047 	DEFB	25H
             0873 05                       1048 	DEFB	5
             0874 21                       1049 	DEFB	21H
             0875 01                       1050 	DEFB	1
             0876 79                       1051 SINX:	DEFB	128-7		;-.250521 E-7 (-1/11!)
                                           1052 ; COSINE COEFFICIENT LIST
             0877 ff                       1053 	DEFB	0FFH		;MARKS END OF LIST
             0878 00                       1054 	DEFB	0
             0879 10                       1055 	DEFB	10H
             087a 00                       1056 	DEFB	0
             087b 00                       1057 	DEFB	0
             087c 00                       1058 	DEFB	0
             087d 81                       1059 	DEFB	128+1		;/100000 E 1 (1/1!)
             087e 50                       1060 	DEFB	50H
             087f 00                       1061 	DEFB	0
             0880 00                       1062 	DEFB	0
             0881 01                       1063 	DEFB	1
             0882 80                       1064 MATUB:	DEFB	128		;-.500000 E 0 (-1/2!)
             0883 41                       1065 	DEFB	41H
             0884 66                       1066 	DEFB	66H
             0885 67                       1067 	DEFB	67H
             0886 00                       1068 	DEFB	0
             0887 7f                       1069 RANDS:	DEFB	128-1		;.416667 E-1 (1/4!)
             0888 13                       1070 	DEFB	13H
             0889 88                       1071 	DEFB	88H
             088a 89                       1072 	DEFB	89H
             088b 01                       1073 	DEFB	1
             088c 7e                       1074 	DEFB	128-2		;-.138889 E-2 (-1/6!)
             088d 24                       1075 	DEFB	24H
             088e 80                       1076 	DEFB	80H
             088f 16                       1077 	DEFB	16H
             0890 00                       1078 	DEFB	0
             0891 7c                       1079 	DEFB	128-4		;.248016 E-4 (1/8!)
             0892 27                       1080 	DEFB	27H
             0893 55                       1081 	DEFB	55H
             0894 73                       1082 	DEFB	73H
             0895 01                       1083 	DEFB	1
             0896 7a                       1084 COSX:	DEFB	128-6		;-.275573 E-6 (-1/10!)
             0897 20                       1085 	DEFB	20H
             0898  0000                    1086 	DEFW	0
             089a 00                       1087 	DEFB	0
             089b 81                       1088 FPTWO:	DEFB	129
             089c 15                       1089 	DEFB	15H
             089d 70                       1090 	DEFB	70H
             089e 80                       1091 	DEFB	80H
             089f 00                       1092 	DEFB	0
             08a0 81                       1093 PIC2:	DEFB	128+1		;PI/2
             08a1 63                       1094 	DEFB	63H
             08a2 66                       1095 	DEFB	66H
             08a3 20                       1096 	DEFB	20H
             08a4 00                       1097 	DEFB	0
             08a5 80                       1098 PIC1:	DEFB	128		;2/PI
             08a6  1726                    1099 LCSTKA: DEFW	CSTKL
                                           1100 ; 
                                           1101 ; COMMAND TABLE
                                           1102 ; 
             08a8  0342                    1103 CMNDD:	DEFW	CRUN		; 0
             08aa  0302                    1104 	DEFW	CLIST		; 1
             08ac  02f5                    1105 	DEFW	CNULL		; 2
             08ae  02c4                    1106 	DEFW	CSCR		; 3
             08b0  0100                    1107 	DEFW	START		; 4 SET UP MEMORY BOUNDS
u            08b2  0000                    1108 	DEFW	TSAV		; 5 TAPE SAVE
u            08b4  0000                    1109 	DEFW	TLOAD		; 6 TAPE LOAD
                                           1110 ; STATEMENT TABLE
             08b6  0389                    1111 STATD:	DEFW	LET		; 0
             08b8  0408                    1112 	DEFW	NEXT		; 1
             08ba  046e                    1113 	DEFW	SIF		; 2
             08bc  048d                    1114 	DEFW	SGOTO		; 3
             08be  04a1                    1115 	DEFW	GOSUB		; 4
             08c0  04c7                    1116 	DEFW	RETRN		; 5
             08c2  054b                    1117 	DEFW	READ		; 6
             08c4  04f2                    1118 	DEFW	DATA		; 7
             08c6  039d                    1119 	DEFW	SFOR		; 10
             08c8  05b9                    1120 	DEFW	PRINT		; 11
             08ca  0667                    1121 	DEFW	INPUT		; 12
             08cc  0502                    1122 	DEFW	DIM		; 13
             08ce  053c                    1123 	DEFW	STOP		; 14
             08d0  0152                    1124 	DEFW	ENDX		; 15
             08d2  05af                    1125 	DEFW	RESTOR		; 16
             08d4  04f5                    1126 	DEFW	REM		; 17
             08d6  02cc                    1127 	DEFW	CCLEAR		; 20
                                           1128 ; 
                                           1129 ; R/W WORD TABLE FORMAT IS RESERVED WORD FOLLOWED BY CHR
                                           1130 ; OF RESERVED WORD.  LAST ENTRY IS FOLLOWED BY A 377Q
                                           1131 ; RW'S THAT ARE SUBSTRINGS OF OTHER RW'S (E.G. >) MUST
                                           1132 ; FOLLOW THE LARGER WORD. 
                                           1133 ; 
             08d8 80                       1134 RWT:	DEFB	200Q
             08d9 4c 45 54                 1135 	DEFM	'LET'
             08dc 81                       1136 	DEFB	201Q
             08dd 4e 45 58 54              1137 	DEFM	'NEXT'
             08e1 82                       1138 	DEFB	202Q
             08e2 49 46                    1139 	DEFM	'IF'
             08e4 83                       1140 	DEFB	203Q	
             08e5 47 4f 54 4f              1141 	DEFM	'GOTO'
             08e9 84                       1142 	DEFB	204Q	
             08ea 47 4f 53 55 42           1143 	DEFM	'GOSUB'
             08ef 85                       1144 	DEFB	205Q
             08f0 52 45 54 55 52 4e        1145 	DEFM	'RETURN'
             08f6 86                       1146 	DEFB	206Q
             08f7 52 45 41 44              1147 	DEFM	'READ'
             08fb 87                       1148 	DEFB	207Q
             08fc 44 41 54 41              1149 	DEFM	'DATA'
             0087                          1150 DATARW	EQU	207Q
             0900 88                       1151 	DEFB	210Q
             0901 46 4f 52                 1152 	DEFM	'FOR'
             0904 89                       1153 	DEFB	211Q
             0905 50 52 49 4e 54           1154 	DEFM	'PRINT'
             090a 89                       1155 	DEFB	211Q
             090b 3a                       1156 	DEFM	':'
             090c 8a                       1157 	DEFB	212Q	
             090d 49 4e 50 55 54           1158 	DEFM	'INPUT'
             0912 8b                       1159 	DEFB	213Q	
             0913 44 49 4d                 1160 	DEFM	'DIM'
             0916 8c                       1161 	DEFB	214Q
             0917 53 54 4f 50              1162 	DEFM	'STOP'
             091b 8d                       1163 	DEFB	215Q
             091c 45 4e 44                 1164 	DEFM	'END'
             091f 8e                       1165 	DEFB	216Q
             0920 52 45 53 54 4f 52 45     1166 	DEFM	'RESTORE'
             0927 8f                       1167 	DEFB	217Q
             0928 52 45 4d                 1168 	DEFM	'REM'
             092b 90                       1169 	DEFB	220Q
             092c 43 4c 45 41 52           1170 	DEFM	'CLEAR'
             0090                          1171 CLRRW	EQU	220Q
             0091                          1172 IRWLIM	EQU	221Q		;LAST INITIAL RESERVED WORD VALUE+1
             0931 9f                       1173 	DEFB	237Q
             0932 53 54 45 50              1174 	DEFM	'STEP'
             009f                          1175 STEPRW	EQU	237Q
             0936 9e                       1176 	DEFB	236Q
             0937 54 4f                    1177 	DEFM	'TO'
             009e                          1178 TORW	EQU	236Q
             0939 9d                       1179 	DEFB	235Q
             093a 54 48 45 4e              1180 	DEFM	'THEN'
             009d                          1181 THENRW	EQU	235Q
             093e 9c                       1182 	DEFB	234Q
             093f 54 41 42                 1183 	DEFM	'TAB'
             009c                          1184 TABRW	EQU	234Q
             0942 a0                       1185 	DEFB	240Q
             0943 52 55 4e                 1186 	DEFM	'RUN'
             00a0                          1187 RUNRW	EQU	240Q
             0946 a1                       1188 	DEFB	241Q
             0947 4c 49 53 54              1189 	DEFM	'LIST'
             00a1                          1190 LISTRW	EQU	241Q
             094b a2                       1191 	DEFB	242Q
             094c 4e 55 4c 4c              1192 	DEFM	'NULL'
             00a2                          1193 NULLRW	EQU	242Q
             0950 a3                       1194 	DEFB	243Q	
             0951 53 43 52                 1195 	DEFM	'SCR'
             00a3                          1196 SCRRW	EQU	243Q
             0954 a4                       1197 	DEFB	244Q
             0955 4d 45 4d                 1198 	DEFM	'MEM'
             00a5                          1199 MEMRW	EQU	245Q		;******* WRONG CODE?*******
             0958 a5                       1200 	DEFB	245Q
             0959 54 53 41 56              1201 	DEFM	'TSAV'
             095d a6                       1202 	DEFB	246Q
             095e 54 4c 4f 41 44           1203 	DEFM	'TLOAD'
             00e0                          1204 LPARRW	EQU	'('-OPBASE+340Q
             0963 e0                       1205 	DEFB	LPARRW
             0964 28                       1206 	DEFB	'('
             0965 e2                       1207 	DEFB	'*'-OPBASE+340Q
             0966 2a                       1208 	DEFB	'*'
             00e3                          1209 PLSRW	EQU	'+'-OPBASE+340Q
             0967 e3                       1210 	DEFB	PLSRW
             0968 2b                       1211 	DEFB	'+'
             00e5                          1212 MINRW	EQU	'-'-OPBASE+340Q
             0969 e5                       1213 	DEFB	MINRW
             096a 2d                       1214 	DEFB	'-'
             096b e7                       1215 	DEFB	'/'-OPBASE+340Q
             096c 2f                       1216 	DEFB	'/'
             096d ef                       1217 	DEFB	67Q-OPBASE+340Q
             096e 3e 3d                    1218 	DEFM	'>='
             0970 f0                       1219 	DEFB	70Q-OPBASE+340Q
             0971 3c 3d                    1220 	DEFM	'<='
             0973 f1                       1221 	DEFB	71Q-OPBASE+340Q
             0974 3c 3e                    1222 	DEFM	'<>'
             0976 ea                       1223 	DEFB	62Q-OPBASE+340Q
             0977 3d 3e                    1224 	DEFM	'=>'
             0979 eb                       1225 	DEFB	63Q-OPBASE+340Q
             097a 3d 3c                    1226 	DEFM	'=<'
             097c f4                       1227 	DEFB	'<'-OPBASE+340Q
             097d 3c                       1228 	DEFB	'<'
             00f5                          1229 EQRW	EQU	'='-OPBASE+340Q
             097e f5                       1230 	DEFB	EQRW
             097f 3d                       1231 	DEFB	'='
             0980 f6                       1232 	DEFB	'>'-OPBASE+340Q
             0981 3e                       1233 	DEFB	'>'
             0982 c1                       1234 	DEFB	301Q
             0983 41 42 53                 1235 	DEFM	'ABS'
             0986 c6                       1236 	DEFB	306Q
             0987 49 4e 54                 1237 	DEFM	'INT'
             098a cc                       1238 	DEFB	314Q
             098b 41 52 47                 1239 	DEFM	'ARG'
             098e cd                       1240 	DEFB	315Q
             098f 43 41 4c 4c              1241 	DEFM	'CALL'
             0993 ce                       1242 	DEFB	316Q
             0994 52 4e 44                 1243 	DEFM	'RND'
             0997 d2                       1244 	DEFB	322Q
             0998 53 47 4e                 1245 	DEFM	'SGN'
             099b d3                       1246 	DEFB	323Q
             099c 53 49 4e                 1247 	DEFM	'SIN'
             099f c4                       1248 	DEFB	304Q
             09a0 53 51 52                 1249 	DEFM	'SQR'
             09a3 d7                       1250 	DEFB	327Q
             09a4 54 41 4e                 1251 	DEFM	'TAN'
             09a7 d8                       1252 	DEFB	330Q
             09a8 43 4f 53                 1253 	DEFM	'COS'
             09ab ff                       1254 	DEFB	377Q
                                           1255 ; 
                                           1256 ; OPERATION TABLE
                                           1257 ; 
             09ac 0f                       1258 OPTAB:	DEFB	15
             09ac                          1259 OPLPAR	EQU	OPTAB
             09ad  0a92                    1260 	DEFW	ALPAR
             09af 0f                       1261 	DEFB	15
             09b0  0aa2                    1262 	DEFW	AABS
             09b2 0a                       1263 	DEFB	10
             09b3  0a73                    1264 	DEFW	AMUL
             09b5 06                       1265 	DEFB	6
             09b6  0a5f                    1266 	DEFW	AADD
             09b8 0f                       1267 	DEFB	15
             09b9  0b2d                    1268 	DEFW	ASQR
             09bb 06                       1269 	DEFB	6
             09bc  0a69                    1270 	DEFW	ASUB
             09be 0f                       1271 	DEFB	15
             09bf  0c80                    1272 	DEFW	AINT
             09c1 0a                       1273 	DEFB	10
             09c2  0a7d                    1274 	DEFW	ADIV
             09c4 01                       1275 OPBOL:	DEFB	1
             09c5  0000                    1276 	DEFW	0
             09c7 0d                       1277 	DEFB	13
             09c8  0a93                    1278 	DEFW	ANEG
             09ca 04                       1279 	DEFB	4
             09cb  0a22                    1280 	DEFW	AGE
             09cd 04                       1281 	DEFB	4
             09ce  0a2e                    1282 	DEFW	ALE
             09d0 0f                       1283 	DEFB	15
             09d1  0c4f                    1284 	DEFW	AARG	
             09d3 0f                       1285 	DEFB	15
             09d4  0c5c                    1286 	DEFW	ACALL
             09d6 0f                       1287 	DEFB	15
             09d7  0b83                    1288 	DEFW	ARND
             09d9 04                       1289 	DEFB	4
             09da  0a22                    1290 	DEFW	AGE
             09dc 04                       1291 	DEFB	4
             09dd  0a2e                    1292 	DEFW	ALE
             09df 04                       1293 	DEFB	4
             09e0  0a19                    1294 	DEFW	ANE
             09e2 0f                       1295 	DEFB	15
             09e3  0aa8                    1296 	DEFW	ASGN
             09e5 0f                       1297 	DEFB	15
             09e6  0ac3                    1298 	DEFW	ASIN
             09e8 04                       1299 	DEFB	4
             09e9  0a03                    1300 	DEFW	ALT
             09eb 04                       1301 	DEFB	4
             09ec  0a10                    1302 	DEFW	AEQ
             09ee 04                       1303 	DEFB	4
             09ef  09f7                    1304 	DEFW	AGT
             09f1 0f                       1305 	DEFB	15
             09f2  0b12                    1306 	DEFW	ATAN
             09f4 0f                       1307 	DEFB	15
             09f5  0b06                    1308 	DEFW	ACOS
                                           1309 ; 
                                           1310 ; ACTION ROUTINES FOR RELATIONAL OPERATORS
                                           1311 ; 
             09f7 cd 3a 0a                 1312 AGT:	CALL	RELOP
             09fa ca 00 0a                 1313 	JP	Z,RFALSE
             09fd fa 0c 0a                 1314 	JP	M,RTRUE
             0a00 af                       1315 RFALSE: XOR	A
             0a01 12                       1316 	LD	(DE),A
             0a02 c9                       1317 	RET
             0a03 cd 3a 0a                 1318 ALT:	CALL	RELOP
             0a06 ca 00 0a                 1319 	JP	Z,RFALSE
             0a09 fa 00 0a                 1320 	JP	M,RFALSE
             0a0c 3e ff                    1321 RTRUE:	LD	A,-1
             0a0e 12                       1322 	LD	(DE),A
             0a0f c9                       1323 	RET
             0a10 cd 3a 0a                 1324 AEQ:	CALL	RELOP
             0a13 ca 0c 0a                 1325 	JP	Z,RTRUE
             0a16 c3 00 0a                 1326 	JP	RFALSE
             0a19 cd 3a 0a                 1327 ANE:	CALL	RELOP
             0a1c ca 00 0a                 1328 	JP	Z,RFALSE
             0a1f c3 0c 0a                 1329 	JP	RTRUE
             0a22 cd 3a 0a                 1330 AGE:	CALL	RELOP
             0a25 ca 0c 0a                 1331 	JP	Z,RTRUE
             0a28 fa 0c 0a                 1332 	JP	M,RTRUE
             0a2b c3 00 0a                 1333 	JP	RFALSE
             0a2e cd 3a 0a                 1334 ALE:	CALL	RELOP
             0a31 ca 0c 0a                 1335 	JP	Z,RTRUE
             0a34 fa 00 0a                 1336 	JP	M,RFALSE
             0a37 c3 0c 0a                 1337 	JP	RTRUE
                                           1338 ; 
                                           1339 ; COMMON ROUTINE FOR RELATIONAL OPERATOR ACTION
                                           1340 ; LEFT ARG ADDR IN DE, SAVED
                                           1341 ; RIGHT ARG ADDR IN BC
                                           1342 ; ON RETURN SIGN SET=GT, ZERO SET =EQUAL
                                           1343 ; 
             0a3a d5                       1344 RELOP:	PUSH	DE
             0a3b 0b                       1345 	DEC	BC
             0a3c 1b                       1346 	DEC	DE
             0a3d 60                       1347 	LD	H,B
             0a3e 69                       1348 	LD	L,C
             0a3f 1a                       1349 	LD	A,(DE)
             0a40 96                       1350 	SUB	(HL)
             0a41 23                       1351 	INC	HL
             0a42 13                       1352 	INC	DE
             0a43 c2 58 0a                 1353 	JP	NZ,RLOP1		;TEST SIGNS OF ARGS IF DIFFERENT THEN RET
             0a46 01 4a 18                 1354 	LD	BC,FPSINK
             0a49 cd ae 13                 1355 	CALL	FSUB
             0a4c 3a 4a 18                 1356 	LD	A,(FPSINK)	;CHECK FOR ZERO RESULT
             0a4f b7                       1357 	OR	A
             0a50 ca 58 0a                 1358 	JP	Z,RLOP1
             0a53 3a 49 18                 1359 	LD	A,(FPSINK-1)	;SIGN OF FPSINK
             0a56 07                       1360 	RLCA
             0a57 3d                       1361 	DEC	A
             0a58 3e 01                    1362 RLOP1:	LD	A,1
             0a5a 32 20 17                 1363 	LD	(RELTYP),A	;SET RELTYP TRUE
             0a5d d1                       1364 	POP	DE
             0a5e c9                       1365 	RET
                                           1366 ; 
                                           1367 ; ACTION ROUTINES FOR ARITHMETIC OPERATORS
                                           1368 ;         (CODE WASTERS)
                                           1369 ; 
             0a5f 60                       1370 AADD:	LD	H,B
             0a60 69                       1371 	LD	L,C
             0a61 42                       1372 	LD	B,D
             0a62 4b                       1373 	LD	C,E
             0a63 cd 57 13                 1374 AADD1:	CALL	FADD
             0a66 c3 84 0a                 1375 	JP	FPETST
             0a69 60                       1376 ASUB:	LD	H,B
             0a6a 69                       1377 	LD	L,C
             0a6b 42                       1378 	LD	B,D
             0a6c 4b                       1379 	LD	C,E
             0a6d cd ae 13                 1380 ASUB1:	CALL	FSUB
             0a70 c3 84 0a                 1381 	JP	FPETST
             0a73 60                       1382 AMUL:	LD	H,B
             0a74 69                       1383 	LD	L,C
             0a75 42                       1384 	LD	B,D
             0a76 4b                       1385 	LD	C,E
             0a77 cd 27 14                 1386 AMUL1:	CALL	FMUL
             0a7a c3 84 0a                 1387 	JP	FPETST
             0a7d 60                       1388 ADIV:	LD	H,B
             0a7e 69                       1389 	LD	L,C
             0a7f 42                       1390 	LD	B,D
             0a80 4b                       1391 	LD	C,E
             0a81 cd 30 15                 1392 ADIV1:	CALL	FDIV
             0a84 af                       1393 FPETST: XOR	A
             0a85 32 20 17                 1394 	LD	(RELTYP),A
             0a88 3a b2 16                 1395 	LD	A,(ERRI)
             0a8b b7                       1396 	OR	A
             0a8c c8                       1397 	RET	Z
             0a8d 2a ab 18                 1398 	LD	HL,(ASTKA)	;ZERO RESULT ON UNDERFLOW
             0a90 36 00                    1399 FPET1:	LD	(HL),0	
             0a92 c9                       1400 ALPAR:	RET
                                           1401 ; 
                                           1402 ; UNARY AND BUILT IN FUNCTION ROUTINES
                                           1403 ; 
             0a93 0a                       1404 ANEG:	LD	A,(BC)
             0a94 b7                       1405 	OR	A
             0a95 ca 9d 0a                 1406 	JP	Z,ANEG1
             0a98 0b                       1407 	DEC	BC
             0a99 0a                       1408 	LD	A,(BC)
             0a9a ee 01                    1409 	XOR	1
             0a9c 02                       1410 	LD	(BC),A
             0a9d af                       1411 ANEG1:	XOR	A
             0a9e 32 20 17                 1412 	LD	(RELTYP),A
             0aa1 c9                       1413 	RET
             0aa2 0b                       1414 AABS:	DEC	BC
             0aa3 af                       1415 	XOR	A
             0aa4 02                       1416 	LD	(BC),A
             0aa5 c3 9d 0a                 1417 	JP	ANEG1
             0aa8 cd 9d 0a                 1418 ASGN:	CALL	ANEG1
             0aab 50                       1419 	LD	D,B
             0aac 59                       1420 	LD	E,C
             0aad 0a                       1421 	LD	A,(BC)		;GET EXPONENT
             0aae b7                       1422 	OR	A
             0aaf c2 b4 0a                 1423 	JP	NZ,ASGN1
             0ab2 12                       1424 	LD	(DE),A		;MAKE ARGUMENT ZERO
             0ab3 c9                       1425 	RET
             0ab4 0b                       1426 ASGN1:	DEC	BC
             0ab5 0a                       1427 	LD	A,(BC)
             0ab6 b7                       1428 	OR	A
             0ab7 21 5d 08                 1429 	LD	HL,FPONE
             0aba ca 79 0d                 1430 	JP	Z,VCOPY
             0abd 21 56 13                 1431 	LD	HL,FPNONE
             0ac0 c3 79 0d                 1432 	JP	VCOPY
                                           1433 ; 
                                           1434 ; COMPUTE SIN(X)  X=TOP OF ARGUMENT STACK
                                           1435 ; RETURN RESULT IN PLACE OF X
                                           1436 ; 
             0ac3 cd 07 0c                 1437 ASIN:	CALL	QUADC		;COMPUTE QUADRANT
             0ac6 2a ab 18                 1438 	LD	HL,(ASTKA)
             0ac9 54                       1439 	LD	D,H
             0aca 5d                       1440 	LD	E,L
             0acb 01 4f 18                 1441 	LD	BC,FTEMP
             0ace cd 77 0a                 1442 	CALL	AMUL1		;FTEMP=X*X
             0ad1 f1                       1443 	POP	AF
             0ad2 f5                       1444 	PUSH	AF		;A=QUADRANT
             0ad3 1f                       1445 	RRA
             0ad4 da fd 0a                 1446 	JP	C,SIN10		;QUAD. ODD, COMPUTE COSINE
                                           1447 ; COMPUTE X*P(X*X) -- SINE
             0ad7 11 54 18                 1448 	LD	DE,FTEM1
             0ada 2a ab 18                 1449 	LD	HL,(ASTKA)
             0add cd 79 0d                 1450 	CALL	VCOPY		;FTEM1=X*X
             0ae0 01 76 08                 1451 	LD	BC,SINX
             0ae3 cd d9 0b                 1452 	CALL	POLY		;P(X*X)
             0ae6 cd 00 0c                 1453 	CALL	PREPOP
             0ae9 21 54 18                 1454 	LD	HL,FTEM1
             0aec cd 77 0a                 1455 	CALL	AMUL1		;X*P(X*X)
                                           1456 ;   COMPUTE SIGN OF RESULT
                                           1457 ; POSITIVE FOR QUADRANTS 0,1.  NEGATIVE FOR 2,3
                                           1458 ; NEGATE ABOVE FOR NEGATIVE ARGUMENTS
                                           1459 ; 
             0aef f1                       1460 SIN5:	POP	AF		;QUADRANT
             0af0 47                       1461 	LD	B,A
             0af1 f1                       1462 	POP	AF		;SIGN
             0af2 07                       1463 	RLCA		;SIGN, 2 TO THE 1ST BIT
             0af3 a8                       1464 	XOR	B		;QUADRANT, MAYBE MODIFIED FOR NEG. ARGUMENT
             0af4 2a ab 18                 1465 	LD	HL,(ASTKA)
             0af7 2b                       1466 	DEC	HL		;PTR TO SIGN
             0af8 d6 02                    1467 	SUB	2
             0afa f8                       1468 	RET	M	;QUADRANT 0 OR 1
             0afb 34                       1469 	INC	(HL)		;ELSE SET RESULT NEGATIVE
             0afc c9                       1470 	RET
                                           1471 ; COMPUTE P(X*X)  -- COSINE
             0afd 01 96 08                 1472 SIN10:	LD	BC,COSX
             0b00 cd d9 0b                 1473 	CALL	POLY		;P(X*X)
             0b03 c3 ef 0a                 1474 	JP	SIN5
                                           1475 ; 
                                           1476 ; COMPUTE COS(X)  X=TOP OF ARGUMENT STACK
                                           1477 ; RETURN RESULT IN PLACE OF X
                                           1478 ; COS(X) = SIN(X+PI/2)
                                           1479 ; 
             0b06 cd 00 0c                 1480 ACOS:	CALL	PREPOP
             0b09 21 a0 08                 1481 	LD	HL,PIC2		;PI/2
             0b0c cd 63 0a                 1482 	CALL	AADD1		;TOS=TOS+PI/2
             0b0f c3 c3 0a                 1483 	JP	ASIN
                                           1484 ; 
                                           1485 ; COMPUTE TAN(X)  X=TOP OF ARGUMENT STACK
                                           1486 ; RETURN RESULT IN PLACE OF X
                                           1487 ; TAN(X)=SIN(X)/COS(X)
                                           1488 ; 
             0b12 2a ab 18                 1489 ATAN:	LD	HL,(ASTKA)
             0b15 cd 84 0d                 1490 	CALL	PSHAS		;PUSH COPY OF X ONTO ARG STACK
             0b18 cd 06 0b                 1491 	CALL	ACOS		;COS(X)
             0b1b 11 59 18                 1492 	LD	DE,FTEM2
             0b1e cd 9b 0d                 1493 	CALL	POPA1		;FTEM2=COS(X)
             0b21 cd c3 0a                 1494 	CALL	ASIN
             0b24 cd 00 0c                 1495 	CALL	PREPOP
             0b27 21 59 18                 1496 	LD	HL,FTEM2
             0b2a c3 81 0a                 1497 	JP	ADIV1		;SIN(X)/COS(X)
                                           1498 ; 
                                           1499 ; COMPUTE SQR(X)  X=TOP OF ARGUMENT STACK
                                           1500 ; RETURN RESULT IN PLACE OF X
                                           1501 ; 
             0b2d 2a ab 18                 1502 ASQR:	LD	HL,(ASTKA)
             0b30 11 4f 18                 1503 	LD	DE,FTEMP
             0b33 cd 79 0d                 1504 	CALL	VCOPY		;SAVE X IN FTEMP
                                           1505 ; COMPUTE EXPONENT OF FIRST GUESS AS EXPONENT OF X/2
             0b36 2a ab 18                 1506 	LD	HL,(ASTKA)
             0b39 7e                       1507 	LD	A,(HL)
             0b3a b7                       1508 	OR	A
             0b3b c8                       1509 	RET	Z	;X=0
             0b3c d6 80                    1510 	SUB	128	
             0b3e fa 47 0b                 1511 	JP	M,SQR5		;NEGATIVE EXPONENT
             0b41 0f                       1512 	RRCA
             0b42 e6 7f                    1513 	AND	127
             0b44 c3 4e 0b                 1514 	JP	SQR6
             0b47 2f                       1515 SQR5:	CPL
             0b48 3c                       1516 	INC	A
             0b49 0f                       1517 	RRCA
             0b4a e6 7f                    1518 	AND	127
             0b4c 2f                       1519 	CPL
             0b4d 3c                       1520 	INC	A
             0b4e c6 80                    1521 SQR6:	ADD	A,128
             0b50 77                       1522 	LD	(HL),A
                                           1523 ; TEST FOR NEGATIVE ARGUMENT
             0b51 2b                       1524 	DEC	HL
             0b52 7e                       1525 	LD	A,(HL)
             0b53 01 41 4e                 1526 	LD	BC,'NA'
             0b56 b7                       1527 	OR	A
             0b57 c2 b2 01                 1528 	JP	NZ,ERROR		;NEGATIVE ARGUMENT
                                           1529 ; 
                                           1530 ; DO NEWTON'S METHOD
                                           1531 ; NEWGUESS=(X/OLDGUESS + OLDGUESS)/2
             0b5a 3e 06                    1532 	LD	A,6		;DO 6 ITERATIONS
             0b5c f5                       1533 SQR20:	PUSH	AF		;SET NEW ITERATION COUNT
             0b5d 01 54 18                 1534 	LD	BC,FTEM1
             0b60 11 4f 18                 1535 	LD	DE,FTEMP		;FTEMP IS 'X'
             0b63 2a ab 18                 1536 	LD	HL,(ASTKA)	;GUESS
             0b66 cd 81 0a                 1537 	CALL	ADIV1		;FTEM1=X/GUESS
             0b69 11 54 18                 1538 	LD	DE,FTEM1
             0b6c 2a ab 18                 1539 	LD	HL,(ASTKA)
             0b6f 44                       1540 	LD	B,H
             0b70 4d                       1541 	LD	C,L
             0b71 cd 63 0a                 1542 	CALL	AADD1		;TOS=(X/GUESS)+GUESS
             0b74 cd 00 0c                 1543 	CALL	PREPOP
             0b77 21 9b 08                 1544 	LD	HL,FPTWO
             0b7a cd 81 0a                 1545 	CALL	ADIV1		;TOS=(X/GUESS+GUESS)/2
             0b7d f1                       1546 	POP	AF
             0b7e 3d                       1547 	DEC	A		;DECREMENT COUNT
             0b7f c2 5c 0b                 1548 	JP	NZ,SQR20		;DO ANOTHER ITERATION
             0b82 c9                       1549 	RET
                                           1550 ; 
                                           1551 ; COMPUTE RND(X)  X=TOP OF ARGUMENT STACK
                                           1552 ; FRAND IS UPDATED TO NEW RANDOM VALUE
                                           1553 ; A RANDOM NUMBER IN THE RANGE 0<RND<1 IS RETURNED IN PLACE
                                           1554 ; 
             0b83 cd 00 0c                 1555 ARND:	CALL	PREPOP
             0b86 11 5e 18                 1556 	LD	DE,FRAND
             0b89 21 5e 18                 1557 	LD	HL,FRAND
             0b8c cd 77 0a                 1558 	CALL	AMUL1		;TOS=FRAND*FRAND
                                           1559 ; SET EXPONENT = 0
             0b8f 2a ab 18                 1560 	LD	HL,(ASTKA)
             0b92 36 80                    1561 	LD	(HL),128		;EXPONENT = 128 (0 IN EXTERNAL FORM)
                                           1562 ; PERMUTE DIGITS OF X AS
                                           1563 ; 123456 INTO 345612
             0b94 01 fc ff                 1564 	LD	BC,-4
             0b97 09                       1565 	ADD	HL,BC
             0b98 46                       1566 	LD	B,(HL)		;SAVE 12
             0b99 23                       1567 	INC	HL	
             0b9a 23                       1568 	INC	HL
             0b9b cd d4 0b                 1569 	CALL	PERMU		;56=12
             0b9e cd d4 0b                 1570 	CALL	PERMU		;34=56
             0ba1 cd d4 0b                 1571 	CALL	PERMU		;12=34
                                           1572 ; NORMALIZE NUMBER
             0ba4 2a ab 18                 1573 RND5:	LD	HL,(ASTKA)	;TOS
             0ba7 01 fc ff                 1574 	LD	BC,-FPSIZ+1
             0baa 09                       1575 	ADD	HL,BC
             0bab 7e                       1576 	LD	A,(HL)		;FIRST DIGIT PAIR
             0bac e6 f0                    1577 	AND	15*16
             0bae c2 ca 0b                 1578 	JP	NZ,RND10		;NUMBER IS NORMALIZED
                                           1579 ; SHIFT LEFT ONE DIGIT
             0bb1 2a ab 18                 1580 	LD	HL,(ASTKA)
             0bb4 7e                       1581 	LD	A,(HL)		;EXPONENT
             0bb5 3d                       1582 	DEC	A
             0bb6 32 b8 16                 1583 	LD	(EXP),A
             0bb9 cd 13 16                 1584 	CALL	LOAD		;TOS INTO TEMP
             0bbc 06 04                    1585 	LD	B,4
             0bbe cd 5d 16                 1586 	CALL	LEFT		;SHIFT LEFT
             0bc1 cd 00 0c                 1587 	CALL	PREPOP
             0bc4 cd 29 16                 1588 	CALL	STORE
             0bc7 c3 a4 0b                 1589 	JP	RND5		;TEST IF NORMALIZED
                                           1590 ; SAVE NEW RANDOM NUMBER IN FRAND CELL
             0bca 11 5e 18                 1591 RND10:	LD	DE,FRAND
             0bcd 2a ab 18                 1592 	LD	HL,(ASTKA)
             0bd0 cd 79 0d                 1593 	CALL	VCOPY		;FRAND = TOS
             0bd3 c9                       1594 	RET		;*****************CALL, RET????!!!!******
                                           1595 ; PERMUTE DIGIT PAIRS
             0bd4 7e                       1596 PERMU:	LD	A,(HL)
             0bd5 70                       1597 	LD	(HL),B
             0bd6 47                       1598 	LD	B,A
             0bd7 2b                       1599 	DEC	HL
             0bd8 c9                       1600 	RET
                                           1601 ; 
                                           1602 ; EVALUATE P(X) USING HORNER'S METHOD (X IS IN FTEMP)
                                           1603 ; COEFFICIENT LIST POINTER IS IN BC
                                           1604 ; RESULT REPLACES NUMBER ON TOP OF ARGUMENT STACK (Y)
                                           1605 ; 
             0bd9 2a ab 18                 1606 POLY:	LD	HL,(ASTKA)
             0bdc eb                       1607 	EX	DE,HL	;DE=PTR TO Y
             0bdd 60                       1608 	LD	H,B
             0bde 69                       1609 	LD	L,C		;HL PTR TO COEFFICIENT LIST
             0bdf cd 79 0d                 1610 	CALL	VCOPY		;Y=FIRST COEFFICIENT
                                           1611 ; MULTIPLY BY X
             0be2 e5                       1612 POLY1:	PUSH	HL		;SAVE COEFF LIST POINTER
             0be3 cd 00 0c                 1613 	CALL	PREPOP
             0be6 21 4f 18                 1614 	LD	HL,FTEMP
             0be9 cd 77 0a                 1615 	CALL	AMUL1		;Y=Y*X
                                           1616 ; ADD NEXT COEFF
             0bec cd 00 0c                 1617 	CALL	PREPOP
             0bef e1                       1618 	POP	HL
             0bf0 e5                       1619 	PUSH	HL		;HL = COEFF LIST POINTER
             0bf1 cd 63 0a                 1620 	CALL	AADD1		;Y=Y+COEFF
                                           1621 ; BUMP POINTER TO NEXT COEFFICIENT
             0bf4 e1                       1622 	POP	HL		;COEFF POINTER
             0bf5 01 fa ff                 1623 	LD	BC,-FPSIZ-1
             0bf8 09                       1624 	ADD	HL,BC		;NEXT COEFF SIGN
             0bf9 7e                       1625 	LD	A,(HL)
             0bfa 23                       1626 	INC	HL		;PTR TO EXPONENT
             0bfb b7                       1627 	OR	A	
             0bfc f2 e2 0b                 1628 	JP	P,POLY1		;PROCESS NEXT COEFFICIENT
             0bff c9                       1629 	RET		;NEGATIVE SIGN (-1) ENDS LIST
                                           1630 ; 
                                           1631 ; PREPARE FOR OPERATION
                                           1632 ; 
             0c00 2a ab 18                 1633 PREPOP:	LD	HL,(ASTKA)
             0c03 eb                       1634 	EX	DE,HL	;DE=ASTKA
             0c04 42                       1635 	LD	B,D
             0c05 4b                       1636 	LD	C,E
             0c06 c9                       1637 	RET
                                           1638 ; 
                                           1639 ; QUADRANT COMPUTATION
                                           1640 ; POPS TOP OF ARGUMENT STACK
                                           1641 ; COMPUTE/GETS SIGN OF ARGUMENT, QUADRANT OF ARGUMENT
                                           1642 ; AND INDEX INTO QUADRANT
                                           1643 ; 
                                           1644 ;        EXITS WITH:
                                           1645 ; SP POINTING TO QUADRANT, MOD 4
                                           1646 ; SP+2 POINTING TO SIGN OF ARGUMENT
                                           1647 ; TOP OF ARGUMENT STACK HAS INDEX INTO QUADRANT
                                           1648 ; 
             0c07 2a ab 18                 1649 QUADC:	LD	HL,(ASTKA)
             0c0a 2b                       1650 	DEC	HL		;POINT TO SIGN
             0c0b 46                       1651 	LD	B,(HL)
             0c0c af                       1652 	XOR	A
             0c0d 77                       1653 	LD	(HL),A		;ARG. SIGN=0
             0c0e 60                       1654 	LD	H,B
             0c0f e3                       1655 	EX	(SP),HL	;PUT SIGN ON STACK, POP RETURN
             0c10 e5                       1656 	PUSH	HL		;PUSH RETURN
                                           1657 ; COMPUTE QUADRANT OF ABS(X)
             0c11 2a ab 18                 1658 	LD	HL,(ASTKA)
             0c14 cd 84 0d                 1659 	CALL	PSHAS		;PUT COPY OF ARG ONOT STACK
             0c17 cd 00 0c                 1660 	CALL	PREPOP
             0c1a 21 a5 08                 1661 	LD	HL,PIC1		;2/PI
             0c1d cd 77 0a                 1662 	CALL	AMUL1		;TOS=X*2/PI
             0c20 cd 00 0c                 1663 	CALL	PREPOP
             0c23 cd 80 0c                 1664 	CALL	AINT		;TOS=INT(X*2/PI)
             0c26 2a ab 18                 1665 	LD	HL,(ASTKA)
             0c29 cd 84 0d                 1666 	CALL	PSHAS		;ANOTHER COPY
             0c2c cd 67 0e                 1667 	CALL	PFIX		;POP TOS TO DE
             0c2f 7b                       1668 	LD	A,E
             0c30 f5                       1669 	PUSH	AF		;QUADRANT
             0c31 cd 00 0c                 1670 	CALL	PREPOP
             0c34 21 a0 08                 1671 	LD	HL,PIC2
             0c37 cd 77 0a                 1672 	CALL	AMUL1		;TOS=INT(X*2/PI)
             0c3a 11 4f 18                 1673 	LD	DE,FTEMP
             0c3d cd 9b 0d                 1674 	CALL	POPA1		;FTEMP=TOS
             0c40 cd 00 0c                 1675 	CALL	PREPOP
             0c43 21 4f 18                 1676 	LD	HL,FTEMP
             0c46 cd 6d 0a                 1677 	CALL	ASUB1		;TOS=TOS-FTEMP
             0c49 f1                       1678 	POP	AF		;A=QUADRANT, LOW ORDER BYTE
             0c4a e6 03                    1679 	AND	3		;MOD 4
             0c4c e1                       1680 	POP	HL		;POP RETURN OFF STACK
             0c4d f5                       1681 	PUSH	AF		;SAVE QUADRANT ON STACK
             0c4e e9                       1682 	JP	(HL)		;DO RETURN
                                           1683 ; SET UP ARG FOR USER CALL
             0c4f cd 67 0e                 1684 AARG:	CALL	PFIX
             0c52 eb                       1685 	EX	DE,HL
             0c53 22 d5 18                 1686 	LD	(CALLA),HL
             0c56 11 4a 18                 1687 	LD	DE,FPSINK
             0c59 c3 85 0d                 1688 	JP	PSHA1		;PUTS BACK THE ARG VALUE ON ARG STACK
                                           1689 ; USED TO CALL USER ROUTINE
             0c5c cd 67 0e                 1690 ACALL:	CALL	PFIX		;GET THE ADDRESS
             0c5f 2a d5 18                 1691 	LD	HL,(CALLA)	;GET THE USER ARGUMENT
             0c62 eb                       1692 	EX	DE,HL
             0c63 01 68 0c                 1693 	LD	BC,ACAL1		;RETURN LINK FOR USER ROUTINE
             0c66 c5                       1694 	PUSH	BC
             0c67 e9                       1695 	JP	(HL)
             0c68 11 cf 18                 1696 ACAL1:	LD	DE,CALST
             0c6b cd d7 0e                 1697 	CALL	CNS
             0c6e 3e 0d                    1698 	LD	A,CR
             0c70 12                       1699 	LD	(DE),A
             0c71 11 cf 18                 1700 	LD	DE,CALST
             0c74 21 4a 18                 1701 	LD	HL,FPSINK
             0c77 cd e6 11                 1702 	CALL	FPIN
             0c7a 11 4a 18                 1703 	LD	DE,FPSINK
             0c7d c3 85 0d                 1704 	JP	PSHA1		;PUT THE RETURNED USER VALUE ON ARG STACK
                                           1705 ; 
                                           1706 ; INT FUNCTION ACTION ROUTINE
                                           1707 ; 
             0c80 0a                       1708 AINT:	LD	A,(BC)
             0c81 d6 81                    1709 	SUB	129
             0c83 f2 90 0c                 1710 	JP	P,AINT1
                                           1711 ; ZERO IF VALUE LESS THAN 1
             0c86 af                       1712 	XOR	A
             0c87 16 05                    1713 	LD	D,5
             0c89                          1714 AINT3:
             0c89 02                       1715 	LD	(BC),A
             0c8a 0b                       1716 	DEC	BC
             0c8b 15                       1717 	DEC	D
             0c8c c2 89 0c                 1718 	JP	NZ,AINT3
             0c8f c9                       1719 	RET
                                           1720 ; EXP > 0
             0c90 d6 05                    1721 AINT1:	SUB	FPNIB-1
             0c92 d0                       1722 	RET	NC
             0c93 57                       1723 	LD	D,A		;COUNT
             0c94 0b                       1724 	DEC	BC
             0c95 0b                       1725 AINT2:	DEC	BC
             0c96 0a                       1726 	LD	A,(BC)
             0c97 e6 f0                    1727 	AND	360Q
             0c99 02                       1728 	LD	(BC),A
             0c9a 14                       1729 	INC	D
             0c9b c8                       1730 	RET	Z
             0c9c af                       1731 	XOR	A
             0c9d 02                       1732 	LD	(BC),A
             0c9e 14                       1733 	INC	D
             0c9f c2 95 0c                 1734 	JP	NZ,AINT2
             0ca2 c9                       1735 	RET
                                           1736 ; 
                                           1737 ;        DIMENSION MATRIX
                                           1738 ; SYMTAB ADDRESS IN HL, HL NOT CLOBBERED
                                           1739 ; DE CONTAINS SIZE IN NUMBER OF ELEMENTS
                                           1740 ; 
             0ca3 e5                       1741 DIMS:	PUSH	HL
             0ca4 13                       1742 	INC	DE
             0ca5 d5                       1743 	PUSH	DE
             0ca6 21 00 00                 1744 	LD	HL,0
             0ca9 0e 05                    1745 	LD	C,FPSIZ
             0cab cd f5 0d                 1746 	CALL	RADD		;MULTIPLY NELTS BY BYTES PER VALUE
             0cae eb                       1747 	EX	DE,HL
             0caf 2a ad 18                 1748 	LD	HL,(MATA)
             0cb2 e5                       1749 	PUSH	HL
             0cb3 19                       1750 	ADD	HL,DE
             0cb4 cd bf 0d                 1751 	CALL	STOV		;CHECK THAT STORAGE NOT EXHAUSTED
             0cb7 22 ad 18                 1752 	LD	(MATA),HL	;UPDATE MATRIX FREE POINTER
             0cba c1                       1753 	POP	BC		;BASE ADDR
             0cbb d1                       1754 	POP	DE		;NELTS (NUMBER OF ELEMENTS)
             0cbc e1                       1755 	POP	HL		;SYMTAB ADDR
             0cbd e5                       1756 	PUSH	HL
             0cbe 72                       1757 	LD	(HL),D
             0cbf 2b                       1758 	DEC	HL
             0cc0 73                       1759 	LD	(HL),E
             0cc1 2b                       1760 	DEC	HL
             0cc2 70                       1761 	LD	(HL),B
             0cc3 2b                       1762 	DEC	HL
             0cc4 71                       1763 	LD	(HL),C		;SYMTAB ENTRY NOW SET UP
             0cc5 e1                       1764 	POP	HL
             0cc6 c9                       1765 	RET
                                           1766 ; 
                                           1767 ;      FIND VARIABLE OPTIONALLY SUBSCRIPTED IN TEXT
                                           1768 ; SETS CARRY IF NOT FOUND
                                           1769 ; RETURNS ADDRESS OF VARIABLE IN HL
                                           1770 ; UPDATES TXA IF FOUND
                                           1771 ; 
             0cc7 cd 5d 0d                 1772 VAR:	CALL	ALPHA
             0cca d8                       1773 	RET	C
             0ccb cd 2a 0d                 1774 	CALL	NAME2
             0cce cd df 0d                 1775 	CALL	GC
             0cd1 fe e0                    1776 	CP	LPARRW
             0cd3 ca db 0c                 1777 	JP	Z,VAR1		;TEST IF SUBSCRIPTED
                                           1778 ; MUST BE SCALAR VARIABLE
             0cd6 cd 35 0d                 1779 	CALL	STLK		;RETURNS ENTRY ADDRESS IN HL
             0cd9 b7                       1780 	OR	A		;CLEAR CARRY
             0cda c9                       1781 	RET
                                           1782 ; MUST BE SUBSCRIPTED
             0cdb cd e7 0d                 1783 VAR1:	CALL	GCI		;GOBBLE LEFT PAREN
             0cde 3e 80                    1784 	LD	A,80H
             0ce0 b1                       1785 	OR	C
             0ce1 4f                       1786 	LD	C,A		;SET TYPE TO MATRIX
             0ce2 cd 35 0d                 1787 	CALL	STLK
             0ce5 e5                       1788 	PUSH	HL		;SYMBOL TABLE
             0ce6 11 0a 00                 1789 	LD	DE,10		;DEFAULT MATRIX SIZE
             0ce9 dc a3 0c                 1790 	CALL	C,DIMS		;DEFAULT DIMENSION MATRIX
             0cec cd c4 06                 1791 	CALL	EXPRB		;EVALUATE SUBSCRIPT EXPRESSION
             0cef cd 67 0e                 1792 	CALL	PFIX		;DE NOW HAS INTEGER
             0cf2 06 29                    1793 	LD	B,')'
             0cf4 cd d7 0d                 1794 	CALL	EATC		;GOBBLE RIGHT PAREN
             0cf7 e1                       1795 	POP	HL
             0cf8 2b                       1796 	DEC	HL
             0cf9 cd 12 0e                 1797 	CALL	DCMP		;BOUNDS CHECK INDEX
             0cfc d2 a9 01                 1798 	JP	NC,E5
             0cff 2b                       1799 	DEC	HL
             0d00 2b                       1800 	DEC	HL
             0d01 cd 1d 0e                 1801 	CALL	LHLI		;GET BASE ADDR
             0d04 0e 05                    1802 	LD	C,FPSIZ
             0d06 13                       1803 	INC	DE		;BECAUSE BASE ADDR IS TO ELEMENT - 1
             0d07 cd f5 0d                 1804 	CALL	RADD		;ADD INDEX, CLEAR CARRY
             0d0a c9                       1805 	RET		;******** CALL, RET????!!!!!**********
                                           1806 ; 
                                           1807 ;       JUNK ON END OF STATEMENT, TEST IF AT END OF FILE
                                           1808 ; DOES NOT CLOBBER DE
                                           1809 ; EATS CHARACTER AND LINE COUNT AFTER CR
                                           1810 ; LEAVES NEW TXA IN HL
                                           1811 ; SETS CARRY IF END OF FILE
                                           1812 ; 
             0d0b cd e7 0d                 1813 JOE:	CALL	GCI
             0d0e fe 3b                    1814 	CP	';'
             0d10 c8                       1815 	RET	Z
             0d11 fe 0d                    1816 	CP	CR
             0d13 c2 97 01                 1817 	JP	NZ,E1
             0d16 7e                       1818 	LD	A,(HL)
             0d17 3d                       1819 	DEC	A
             0d18 ca 22 0d                 1820 	JP	Z,JOE2
             0d1b 23                       1821 	INC	HL
             0d1c 23                       1822 	INC	HL
             0d1d 23                       1823 	INC	HL		;SKIP OVER COUNT AND LINE NUMBER
             0d1e 22 24 17                 1824 JOE1:	LD	(TXA),HL
             0d21 c9                       1825 	RET
             0d22 37                       1826 JOE2:	SCF
             0d23 c3 1e 0d                 1827 	JP	JOE1
                                           1828 ; 
                                           1829 ;       GET NAME FROM TEXT
                                           1830 ; SETS CARRY IF NAME NOT FOUND
                                           1831 ; IF SUCCEEDS RETURNS NAME IN BC, C=0 IF NO DIGIT IN NAME
                                           1832 ; 
             0d26 cd 5d 0d                 1833 NAME:	CALL	ALPHA
             0d29 d8                       1834 	RET	C
             0d2a 47                       1835 NAME2:	LD	B,A
             0d2b 0e 00                    1836 	LD	C,0
             0d2d cd 6a 0d                 1837 	CALL	DIG
             0d30 3f                       1838 	CCF
             0d31 d0                       1839 	RET	NC
             0d32 4f                       1840 	LD	C,A
             0d33 b7                       1841 	OR	A		;CLEAR CARRY
             0d34 c9                       1842 	RET
                                           1843 ; 
                                           1844 ;       SYMBOL TABLE LOOKUP
                                           1845 ; BC CONTAIN NAME AND CLASS
                                           1846 ; IF NOT FOUND THEN CREATE ZERO'ED ENTRY AND SET CARRY
                                           1847 ; HL HAS ADDRESS ON RET
                                           1848 ; 
             0d35 2a db 18                 1849 STLK:	LD	HL,(MEMTOP)
             0d38 11 f9 ff                 1850 	LD	DE,-STESIZ		;SET UP BASE AND INCREMENT FOR SEARCH LOOP
             0d3b 7e                       1851 STLK0:	LD	A,(HL)
             0d3c b7                       1852 	OR	A
             0d3d ca 4f 0d                 1853 	JP	Z,STLK2		;TEST IF END OF TABLE
             0d40 b8                       1854 	CP	B
             0d41 c2 4b 0d                 1855 	JP	NZ,STLK1		;TEST IF ALPHA COMPARES
             0d44 2b                       1856 	DEC	HL
             0d45 7e                       1857 	LD	A,(HL)		;LOOK FOR DIGIT
             0d46 b9                       1858 	CP	C
             0d47 2b                       1859 	DEC	HL
             0d48 c8                       1860 	RET	Z	;CARRY CLEAR TOO, RETURN
             0d49 23                       1861 	INC	HL
             0d4a 23                       1862 	INC	HL
             0d4b 19                       1863 STLK1:	ADD	HL,DE		;DIDN'T COMPARE, DECREMENT POINTER
             0d4c c3 3b 0d                 1864 	JP	STLK0
                                           1865 ; ADD ENTRY TO SYMTAB
             0d4f 70                       1866 STLK2:	LD	(HL),B
             0d50 2b                       1867 	DEC	HL
             0d51 71                       1868 	LD	(HL),C
             0d52 23                       1869 	INC	HL
             0d53 eb                       1870 	EX	DE,HL
             0d54 19                       1871 	ADD	HL,DE
             0d55 22 42 18                 1872 	LD	(STAA),HL	;STORE NEW END OF STMTAB POINTER
             0d58 1b                       1873 	DEC	DE
             0d59 1b                       1874 	DEC	DE
             0d5a eb                       1875 	EX	DE,HL
             0d5b 37                       1876 	SCF
             0d5c c9                       1877 	RET
                                           1878 ; 
                                           1879 ;      GOBBLES NEXT TEXT CHARACTER IF ALPHABETIC
                                           1880 ; SETS CARRY IF NOT
                                           1881 ; NEXT CHAR IN ACC ON FAILURE
                                           1882 ; 
             0d5d cd df 0d                 1883 ALPHA:	CALL	GC
             0d60 fe 41                    1884 	CP	'A'
             0d62 d8                       1885 	RET	C
             0d63 fe 5b                    1886 	CP	'Z'+1
             0d65 3f                       1887 	CCF
             0d66 d8                       1888 	RET	C
             0d67 c3 74 0d                 1889 	JP	DIGT1
                                           1890 ; 
                                           1891 ;      GOBBLES NEXT TEXT CHAR IF DIGIT
                                           1892 ; SETS CARRY IF NOT
                                           1893 ; NEXT CHAR IN ACC ON FAILURE
                                           1894 ; 
             0d6a cd df 0d                 1895 DIG:	CALL	GC
             0d6d fe 30                    1896 	CP	'0'
             0d6f d8                       1897 	RET	C
             0d70 fe 3a                    1898 	CP	'9'+1
             0d72 3f                       1899 	CCF
             0d73 d8                       1900 	RET	C
             0d74 23                       1901 DIGT1:	INC	HL
             0d75 22 24 17                 1902 	LD	(TXA),HL
             0d78 c9                       1903 	RET
                                           1904 ; 
                                           1905 ; COPYS FPSIZ BYTES AT ADDR HL TO ADDR DE
                                           1906 ; ON EXIT HL POINTS TO ADR-1 OF LAST BYTE COPIED
                                           1907 ; 
             0d79 0e 05                    1908 VCOPY:	LD	C,FPSIZ
             0d7b 7e                       1909 VCOP1:	LD	A,(HL)
             0d7c 12                       1910 	LD	(DE),A
             0d7d 2b                       1911 	DEC	HL
             0d7e 1b                       1912 	DEC	DE
             0d7f 0d                       1913 	DEC	C
             0d80 c2 7b 0d                 1914 	JP	NZ,VCOP1
             0d83 c9                       1915 	RET
                                           1916 ; 
                                           1917 ; PUSH VALUE ADDRESSED BY HL ONTO ARG STACK
                                           1918 ; SETS ARGF, CLEARS CARRY
                                           1919 ; 
             0d84 eb                       1920 PSHAS:	EX	DE,HL
             0d85 2a ab 18                 1921 PSHA1:	LD	HL,(ASTKA)
             0d88 01 fb ff                 1922 	LD	BC,-FPSIZ
             0d8b 09                       1923 	ADD	HL,BC
             0d8c 22 ab 18                 1924 	LD	(ASTKA),HL	;DECREMENT ARG STACK POINTER
             0d8f eb                       1925 	EX	DE,HL
             0d90 cd 79 0d                 1926 	CALL	VCOPY
             0d93 3e 01                    1927 	LD	A,1
             0d95 32 22 17                 1928 	LD	(ARGF),A	;CLEAR ARGF
             0d98 b7                       1929 	OR	A
             0d99 c9                       1930 	RET
                                           1931 ; 
                                           1932 ; POP ARG STACK
                                           1933 ; HL CONTAINS ADDRESS TO PUT POPPED VALUE INTO
                                           1934 ; 
             0d9a eb                       1935 POPAS:	EX	DE,HL
             0d9b 2a ab 18                 1936 POPA1:	LD	HL,(ASTKA)
             0d9e e5                       1937 	PUSH	HL
             0d9f 01 05 00                 1938 	LD	BC,FPSIZ
             0da2 09                       1939 	ADD	HL,BC
             0da3 22 ab 18                 1940 	LD	(ASTKA),HL	;INCREMENT STACK POINTER
             0da6 e1                       1941 	POP	HL
             0da7 c3 79 0d                 1942 	JP	VCOPY
                                           1943 ; 
                                           1944 ; PUSH FRAM ONTO CONTROL STACK
                                           1945 ; TAKES MINUS AMOUNT TO SUB FROM CSTKA IN DE
                                           1946 ; DOES OVERFLOW TEST AND RETURNS OLD CSTKA-1
                                           1947 ; 
             0daa 2a 44 18                 1948 PSHCS:	LD	HL,(CSTKA)
             0dad e5                       1949 	PUSH	HL
             0dae 19                       1950 	ADD	HL,DE
             0daf 22 44 18                 1951 	LD	(CSTKA),HL
             0db2 eb                       1952 	EX	DE,HL
             0db3 21 a6 08                 1953 	LD	HL,LCSTKA		;ADDR CONTAINS CSTKL
             0db6 cd 12 0e                 1954 	CALL	DCMP
             0db9 da a3 01                 1955 	JP	C,E4
             0dbc e1                       1956 	POP	HL
             0dbd 2b                       1957 	DEC	HL
             0dbe c9                       1958 	RET
                                           1959 ; 
                                           1960 ; STORAGE OVERFLOW TEST
                                           1961 ; TEST THAT VALUE IN HL IS BETWEEN MATA AND STA
                                           1962 ; DOES NOT CLOBBER HL
                                           1963 ; 
             0dbf eb                       1964 STOV:	EX	DE,HL
             0dc0 21 ad 18                 1965 	LD	HL,MATA
             0dc3 cd 12 0e                 1966 	CALL	DCMP
             0dc6 da d1 0d                 1967 	JP	C,E8
             0dc9 21 42 18                 1968 	LD	HL,STAA
             0dcc cd 12 0e                 1969 	CALL	DCMP
             0dcf eb                       1970 	EX	DE,HL
             0dd0 d8                       1971 	RET	C
             0dd1 01 4f 53                 1972 E8:	LD	BC,'SO'
             0dd4 c3 b2 01                 1973 	JP	ERROR
                                           1974 ; 
                                           1975 ; INCREMENT TXA IF NEXT NON-BLANK CHAR IS EQUAL TO B
                                           1976 ; ELSE SYNTAX ERROR
                                           1977 ; 
             0dd7 cd e7 0d                 1978 EATC:	CALL	GCI
             0dda b8                       1979 	CP	B
             0ddb c8                       1980 	RET	Z
             0ddc c3 97 01                 1981 	JP	E1
                                           1982 ; 
                                           1983 ; GET NEXT NON-BLANK CHAR INTO ACC
                                           1984 ; INCREMENT PAST BLANKS ONLY
                                           1985 ; 
             0ddf cd e7 0d                 1986 GC:	CALL	GCI
             0de2 2b                       1987 	DEC	HL
             0de3 22 24 17                 1988 	LD	(TXA),HL
             0de6 c9                       1989 	RET
                                           1990 ; 
                                           1991 ; GET NEXT NON-BLANK TEXT CHAR AND INCREMENT TXA
                                           1992 ; DOES NOT CLOBBER DE,BC
                                           1993 ; RETURN CHAR IN ACC
                                           1994 ; 
             0de7 2a 24 17                 1995 GCI:	LD	HL,(TXA)
             0dea 7e                       1996 GCI0:	LD	A,(HL)
             0deb 23                       1997 	INC	HL
             0dec fe 20                    1998 	CP	' '
             0dee ca ea 0d                 1999 	JP	Z,GCI0
             0df1 22 24 17                 2000 	LD	(TXA),HL
             0df4 c9                       2001 	RET
                                           2002 ; 
                                           2003 ; REPEAT ADD
                                           2004 ; ADDS DE TO HL C TIMES
                                           2005 ; 
             0df5 19                       2006 RADD:	ADD	HL,DE
             0df6 0d                       2007 	DEC	C
             0df7 c2 f5 0d                 2008 	JP	NZ,RADD
             0dfa c9                       2009 	RET
                                           2010 ; 
                                           2011 ; PRINT MESSAGE ADDRESSED BY HL
                                           2012 ; ENDS WITH CHARACTER PROVIDED IN C
                                           2013 ; RETURN IN HL ADDRESS OF TERMINATOR
                                           2014 ; 
             0dfb 0e 0d                    2015 PRNTCR: LD	C,CR
             0dfd c3 02 0e                 2016 	JP	PRN1
             0e00 0e 22                    2017 PRNT:	LD	C,'"'
             0e02 7e                       2018 PRN1:	LD	A,(HL)		;GET NEXT CHAR
             0e03 47                       2019 	LD	B,A		;FOR CHOUT
             0e04 b9                       2020 	CP	C		;END OF MESSAGE TEST
             0e05 c8                       2021 	RET	Z
             0e06 fe 0d                    2022 	CP	CR
             0e08 ca 97 01                 2023 	JP	Z,E1		;NEVER PRINT A CR IN THIS ROUTINE
             0e0b cd 76 0f                 2024 	CALL	CHOUT
             0e0e 23                       2025 	INC	HL
             0e0f c3 02 0e                 2026 	JP	PRN1
                                           2027 ; 
                                           2028 ; 16 BIT UNSIGNED COMPARE
                                           2029 ; COMPARE DE AGAINST VALUE ADDRESSED BY HL
                                           2030 ; CLOBBERS A ONLY
                                           2031 ; 
             0e12 7b                       2032 DCMP:	LD	A,E
             0e13 96                       2033 	SUB	(HL)
             0e14 23                       2034 	INC	HL
             0e15 7a                       2035 	LD	A,D
             0e16 9e                       2036 	SBC	A,(HL)
             0e17 2b                       2037 	DEC	HL
             0e18 c0                       2038 	RET	NZ
             0e19 7b                       2039 	LD	A,E
             0e1a 96                       2040 	SUB	(HL)
             0e1b b7                       2041 	OR	A		;CLEAR CARRY
             0e1c c9                       2042 	RET
                                           2043 ; 
                                           2044 ; INDIRECT LOAD HL THRU HL
                                           2045 ; 
             0e1d f5                       2046 LHLI:	PUSH	AF
             0e1e 7e                       2047 	LD	A,(HL)
             0e1f 23                       2048 	INC	HL
             0e20 66                       2049 	LD	H,(HL)
             0e21 6f                       2050 	LD	L,A
             0e22 f1                       2051 	POP	AF
             0e23 c9                       2052 	RET
                                           2053 ; 
                                           2054 ; GET FP CONSTANT FROM TEXT
                                           2055 ; PUSHES VALUE ON ARG STACK AND SETS ARGF FLAG
                                           2056 ; SETS CARRY IF NOT FOUND
                                           2057 ; 
             0e24 2a 24 17                 2058 CONST:	LD	HL,(TXA)	;PREPARE CALL FPIN
             0e27 eb                       2059 	EX	DE,HL
             0e28 21 4a 18                 2060 	LD	HL,FPSINK
             0e2b cd e6 11                 2061 	CALL	FPIN
             0e2e d8                       2062 	RET	C
             0e2f 1b                       2063 	DEC	DE
             0e30 eb                       2064 	EX	DE,HL
             0e31 22 24 17                 2065 	LD	(TXA),HL	;NOW POINTS TO TERMINATOR
             0e34 11 4a 18                 2066 	LD	DE,FPSINK
             0e37 cd 85 0d                 2067 	CALL	PSHA1
             0e3a af                       2068 	XOR	A
             0e3b 3c                       2069 	INC	A		;SET A TO 1 AND CLEAR CARRY
             0e3c 32 22 17                 2070 	LD	(ARGF),A
             0e3f c9                       2071 	RET
                                           2072 ; 
                                           2073 ; DIRECT STATEMENT CHECKING ROUTINE
                                           2074 ; 
             0e40 3a 23 17                 2075 DIRT:	LD	A,(DIRF)
             0e43 b7                       2076 	OR	A
             0e44 c8                       2077 	RET	Z
             0e45 01 49 44                 2078 	LD	BC,'DI'
             0e48 c3 b2 01                 2079 	JP	ERROR
                                           2080 ; 
                                           2081 ; FIND TEXT LINE WITH LINE NUMBER GIVEN IN DE
                                           2082 ; RETURNS TEXT ADDRESS COUNT BYTE IN HL
                                           2083 ; 
             0e4b 2a d9 18                 2084 FINDLN:	LD	HL,(BOFA)
             0e4e 06 00                    2085 	LD	B,0
             0e50 4e                       2086 FIND1:	LD	C,(HL)
             0e51 79                       2087 	LD	A,C
             0e52 fe 01                    2088 	CP	EOF
             0e54 ca 61 0e                 2089 	JP	Z,LERR
             0e57 23                       2090 	INC	HL
             0e58 cd 12 0e                 2091 	CALL	DCMP
             0e5b 2b                       2092 	DEC	HL
             0e5c c8                       2093 	RET	Z
             0e5d 09                       2094 	ADD	HL,BC
             0e5e c3 50 0e                 2095 	JP	FIND1
             0e61 01 4e 4c                 2096 LERR:	LD	BC,'LN'
             0e64 c3 b2 01                 2097 	JP	ERROR
                                           2098 ; 
                                           2099 ; FIX FLOATING TO POSITIVE INTEGER
                                           2100 ; RETURN INTEGER VALUE IN DE
                                           2101 ; FP VALUE FROM TOP OF ARG STACK, POP ARG STACK
                                           2102 ; 
             0e67 2a ab 18                 2103 PFIX:	LD	HL,(ASTKA)
             0e6a 44                       2104 	LD	B,H
             0e6b 4d                       2105 	LD	C,L
             0e6c e5                       2106 	PUSH	HL
             0e6d cd 80 0c                 2107 	CALL	AINT
             0e70 21 4a 18                 2108 	LD	HL,FPSINK
             0e73 cd 9a 0d                 2109 	CALL	POPAS
             0e76 e1                       2110 	POP	HL
             0e77 4e                       2111 	LD	C,(HL)		;EXPONENT
             0e78 2b                       2112 	DEC	HL
             0e79 7e                       2113 	LD	A,(HL)		;SIGN
             0e7a b7                       2114 	OR	A
             0e7b c2 a9 01                 2115 	JP	NZ,E5		;NEGATIVE NO GOOD
             0e7e 11 fc ff                 2116 	LD	DE,-FPSIZ+1
             0e81 19                       2117 	ADD	HL,DE
             0e82 11 00 00                 2118 	LD	DE,0
             0e85 79                       2119 	LD	A,C
             0e86 b7                       2120 	OR	A
             0e87 c8                       2121 	RET	Z
             0e88 0d                       2122 	DEC	C		;SET UP FOR LOOP CLOSE TEST
             0e89 23                       2123 PFIX1:	INC	HL
             0e8a 7e                       2124 	LD	A,(HL)
             0e8b 0f                       2125 	RRCA
             0e8c 0f                       2126 	RRCA
             0e8d 0f                       2127 	RRCA
             0e8e 0f                       2128 	RRCA
             0e8f cd a3 0e                 2129 	CALL	MUL10
             0e92 da a9 01                 2130 	JP	C,E5
             0e95 0d                       2131 	DEC	C
             0e96 f0                       2132 	RET	P
             0e97 7e                       2133 	LD	A,(HL)
             0e98 cd a3 0e                 2134 	CALL	MUL10
             0e9b da a9 01                 2135 	JP	C,E5
             0e9e 0d                       2136 	DEC	C
             0e9f fa 89 0e                 2137 	JP	M,PFIX1
             0ea2 c9                       2138 	RET
                                           2139 ; 
                                           2140 ; TAKE NEXT DIGIT IN A (MASK TO 17Q), ACCUMULATE TO DE
                                           2141 ; PRESERVES ALL BUT A, DE
                                           2142 ; 
             0ea3 e5                       2143 MUL10:	PUSH	HL
             0ea4 33                       2144 	INC	SP
             0ea5 33                       2145 	INC	SP
             0ea6 62                       2146 	LD	H,D		;GET ORIGINAL VALUE TO HL
             0ea7 6b                       2147 	LD	L,E
             0ea8 29                       2148 	ADD	HL,HL		;DOUBLE IT
             0ea9 d8                       2149 	RET	C
             0eaa 29                       2150 	ADD	HL,HL		;AGAIN
             0eab d8                       2151 	RET	C
             0eac 19                       2152 	ADD	HL,DE		;PLUS ORIGINAL MAKES 5 TIMES ORIG
             0ead d8                       2153 	RET	C
             0eae 29                       2154 	ADD	HL,HL		;TIMES TWO MAKES TEN
             0eaf d8                       2155 	RET	C
             0eb0 eb                       2156 	EX	DE,HL
             0eb1 3b                       2157 	DEC	SP
             0eb2 3b                       2158 	DEC	SP
             0eb3 e1                       2159 	POP	HL
             0eb4 e6 0f                    2160 	AND	17Q
             0eb6 83                       2161 	ADD	A,E
             0eb7 5f                       2162 	LD	E,A
             0eb8 7a                       2163 	LD	A,D
             0eb9 ce 00                    2164 	ADC	A,0		;PROPAGATE THE CARRY
             0ebb 57                       2165 	LD	D,A
             0ebc c9                       2166 	RET
                                           2167 ; 
                                           2168 ; GET INTEGER FROM TEXT
                                           2169 ; SET CARRY IF NOT FOUND
                                           2170 ; RETURN INTEGER VALUE IN HL
                                           2171 ; RETURN TERMINATOR IN ACC
                                           2172 ; 
             0ebd cd 6a 0d                 2173 INTGER: CALL	DIG
             0ec0 d8                       2174 	RET	C
             0ec1 11 00 00                 2175 	LD	DE,0
             0ec4 c3 ce 0e                 2176 	JP	INTG2
             0ec7 cd 6a 0d                 2177 INTG1:	CALL	DIG
             0eca 62                       2178 	LD	H,D
             0ecb 6b                       2179 	LD	L,E
             0ecc 3f                       2180 	CCF
             0ecd d0                       2181 	RET	NC
             0ece d6 30                    2182 INTG2:	SUB	'0'
             0ed0 cd a3 0e                 2183 	CALL	MUL10
             0ed3 d2 c7 0e                 2184 	JP	NC,INTG1
             0ed6 c9                       2185 	RET
                                           2186 ; 
                                           2187 ; CONVERT INTEGER TO STRING
                                           2188 ; DE CONTAINS ADDRESS OF STRING, RETURN UPDATED VALUE IN DE
                                           2189 ; HL CONTAINS VALUE TO CONVERT
                                           2190 ; 
             0ed7 af                       2191 CNS:	XOR	A		;SET FOR NO LEADING ZEROES
             0ed8 01 f0 d8                 2192 	LD	BC,-10000
             0edb cd fc 0e                 2193 	CALL	RSUB
             0ede 01 18 fc                 2194 	LD	BC,-1000
             0ee1 cd fc 0e                 2195 	CALL	RSUB
             0ee4 01 9c ff                 2196 	LD	BC,-100
             0ee7 cd fc 0e                 2197 	CALL	RSUB
             0eea 01 f6 ff                 2198 	LD	BC,-10
             0eed cd fc 0e                 2199 	CALL	RSUB
             0ef0 01 ff ff                 2200 	LD	BC,-1
             0ef3 cd fc 0e                 2201 	CALL	RSUB
             0ef6 c0                       2202 	RET	NZ
             0ef7 3e 30                    2203 	LD	A,'0'
             0ef9 12                       2204 	LD	(DE),A
             0efa 13                       2205 	INC	DE
             0efb c9                       2206 	RET
                                           2207 ; 
                                           2208 ; TAKE VALUE IN HL
                                           2209 ; SUB MINUS NUMBER IN BC THE MOST POSSIBLE TIMES
                                           2210 ; PUT VALUE ON STRING AT DE
                                           2211 ; IF A=0 THEN DON'T PUT ZERO ON STRING
                                           2212 ; RETURN NON-ZERO IN A IF PUT ON STRING
                                           2213 ; 
             0efc d5                       2214 RSUB:	PUSH	DE
             0efd 16 ff                    2215 	LD	D,-1
             0eff e5                       2216 RSUB1:	PUSH	HL
             0f00 33                       2217 	INC	SP
             0f01 33                       2218 	INC	SP
             0f02 14                       2219 	INC	D
             0f03 09                       2220 	ADD	HL,BC
             0f04 da ff 0e                 2221 	JP	C,RSUB1
             0f07 3b                       2222 	DEC	SP
             0f08 3b                       2223 	DEC	SP
             0f09 e1                       2224 	POP	HL
             0f0a 42                       2225 	LD	B,D
             0f0b d1                       2226 	POP	DE
             0f0c b0                       2227 	OR	B		;A GETS 0 IF A WAS 0 AND B IS 0
             0f0d c8                       2228 	RET	Z
             0f0e 3e 30                    2229 	LD	A,'0'
             0f10 80                       2230 	ADD	A,B
             0f11 12                       2231 	LD	(DE),A
             0f12 13                       2232 	INC	DE
             0f13 c9                       2233 	RET
                                           2234 ; 
                                           2235 ;	INPUT CHARACTER FROM TERMINAL
                                           2236 ;	FORCE TO UPPER CASE.
                                           2237 ; 
             0f14 c5                       2238 INCHAR:	PUSH	BC			;SAVE ALL THE REGISTERS
             0f15 d5                       2239 	PUSH	DE			;THAT MIGHT GET WALKED OVER
             0f16 e5                       2240 	PUSH	HL			;BY CP/M
             0f17 0e 01                    2241 	LD	C,CONIN			;LOAD UP FUNCTION CODE AND
             0f19 cd 05 00                 2242 	CALL	BDOS			;CALL THE SYSTEM.
             0f1c e6 7f                    2243 	AND	07FH			;MASK OFF PARITY BIT.
             0f1e fe 61                    2244 	CP	'a'			;CHECK IF LOWER CASE
             0f20 da 2a 0f                 2245 	JP	C,INCH1			;TOO LOW
             0f23 fe 7b                    2246 	CP	'z'+1			;CHECK IF LOWER CASE
             0f25 d2 2a 0f                 2247 	JP	NC,INCH1		;TOO HIGH
             0f28 d6 20                    2248 	SUB	20H			;FORCE TO UPPER CASE
             0f2a e1                       2249 INCH1:	POP	HL			;RESTORE THE REGISTERS
             0f2b d1                       2250 	POP	DE			;THAT GOT PUSHED
             0f2c c1                       2251 	POP	BC			;GOING IN.
             0f2d 47                       2252 	LD	B,A			;COPY CHARACTER TO B AND
             0f2e c9                       2253 	RET				;RETURN.
                                           2254 ; 
             0f2f cd b1 0f                 2255 INL0:	CALL	CRLF
             0f32 21 62 18                 2256 INLINE: LD	HL,IBUF
             0f35 0e 49                    2257 	LD	C,LINLEN
             0f37 cd 14 0f                 2258 INL1:	CALL	INCHAR
             0f3a fe 7f                    2259 	CP	7FH			;DELETE ?
             0f3c ca 57 0f                 2260 	JP	Z,INL2
             0f3f fe 15                    2261 	CP	15H			;CONTROL U ?
             0f41 ca 2f 0f                 2262 	JP	Z,INL0
             0f44 77                       2263 	LD	(HL),A
             0f45 06 0a                    2264 	LD	B,LF			;IN CASE ALL DONE.
             0f47 fe 0d                    2265 	CP	CR
             0f49 ca 76 0f                 2266 	JP	Z,CHOUT			;ECHO LF AND RETURN.
             0f4c 23                       2267 	INC	HL
             0f4d 0d                       2268 	DEC	C
             0f4e c2 37 0f                 2269 	JP	NZ,INL1
             0f51 01 4c 4c                 2270 	LD	BC,'LL'
             0f54 c3 b2 01                 2271 	JP	ERROR
             0f57 79                       2272 INL2:	LD	A,C
             0f58 06 07                    2273 	LD	B,BELL
             0f5a fe 49                    2274 	CP	LINLEN
             0f5c ca 62 0f                 2275 	JP	Z,INL3
             0f5f 2b                       2276 	DEC	HL
             0f60 46                       2277 	LD	B,(HL)			;ECHO DELETED CHARACTER.
             0f61 0c                       2278 	INC	C
             0f62 cd 76 0f                 2279 INL3:	CALL	CHOUT
             0f65 c3 37 0f                 2280 	JP	INL1
                                           2281 ; 
                                           2282 ;	TEST CONSOLE STATUS
                                           2283 ;
             0f68 c5                       2284 STATUS:	PUSH	BC			;SAVE ALL THE
             0f69 d5                       2285 	PUSH	DE			;REGISTERS USED BY
             0f6a e5                       2286 	PUSH	HL			;CP/M.
             0f6b 0e 0b                    2287 	LD	C,CONSTS		;FIRE OFF THE
             0f6d cd 05 00                 2288 	CALL	BDOS			;CONSOLE STATUS CALL.
             0f70 e1                       2289 	POP	HL			;RESTORE
             0f71 d1                       2290 	POP	DE			;ALL
             0f72 c1                       2291 	POP	BC			;REGISTERS.
             0f73 e6 01                    2292 	AND	01H			;SET FLAGS ON THE STATUS.
             0f75 c9                       2293 	RET				;RETURN
                                           2294 ; 
                                           2295 ;       OUTPUT ROUTINES
                                           2296 ; 
             0f76 c5                       2297 CHOUT:	PUSH	BC			;PUSH THE REGISTERS
             0f77 d5                       2298 	PUSH	DE			;THAT GET WALKED OVER BY
             0f78 e5                       2299 	PUSH	HL			;OUR PAL CP/M.
             0f79 0e 02                    2300 	LD	C,CONOUT		;LOAD UP THE SYSTEM FUNCTION
             0f7b 58                       2301 	LD	E,B			;CODE, THEN CALL
             0f7c cd 05 00                 2302 	CALL	BDOS			;THE SYSTEM TO WRITE IT.
             0f7f e1                       2303 	POP	HL			;RESTORE
             0f80 d1                       2304 	POP	DE			;ALL THE REGISTERS
             0f81 c1                       2305 	POP	BC			;WE SAVED.
             0f82 78                       2306 	LD	A,B			;GET A COPY OF THE CHARACTER.
                                           2307 ;
             0f83 fe 0d                    2308 CHCHK:	CP	CR
             0f85 c2 8c 0f                 2309 	JP	NZ,CHLF		;NOT CR, IS IT LF?
             0f88 af                       2310 	XOR	A
             0f89 c3 98 0f                 2311 	JP	PSTOR		;RETURN PHEAD TO ZERO
                                           2312 ; 
             0f8c fe 0a                    2313 CHLF:	CP	LF	
             0f8e ca 9c 0f                 2314 	JP	Z,NULCH		;IF LINE FEED PROCESS THE NULLS
             0f91 fe 20                    2315 	CP	40Q		;NO PHEAD INCREMENT IF CONTROL CHAR
             0f93 d8                       2316 	RET	C
             0f94 3a 1f 17                 2317 	LD	A,(PHEAD)
             0f97 3c                       2318 	INC	A
             0f98 32 1f 17                 2319 PSTOR:	LD	(PHEAD),A
             0f9b c9                       2320 	RET
                                           2321 ; 
             0f9c 3a 21 17                 2322 NULCH:	LD	A,(NULLCT)	;OUTPUT NULL CHARS
             0f9f b7                       2323 	OR	A
             0fa0 c8                       2324 	RET	Z
             0fa1 c5                       2325 	PUSH	BC
             0fa2 4f                       2326 	LD	C,A
             0fa3 06 00                    2327 	LD	B,NULL
             0fa5 cd 76 0f                 2328 CH2:	CALL	CHOUT		;OUTPUT COUNT "C" NULLS
             0fa8 0d                       2329 	DEC	C
             0fa9 c2 a5 0f                 2330 	JP	NZ,CH2
             0fac c1                       2331 	POP	BC
             0fad c9                       2332 	RET
                                           2333 ; 
             0fae cd b1 0f                 2334 CRLF2:	CALL	CRLF
             0fb1 06 0d                    2335 CRLF:	LD	B,CR
             0fb3 cd 76 0f                 2336 	CALL	CHOUT
             0fb6 06 0a                    2337 	LD	B,LF
             0fb8 c3 76 0f                 2338 	JP	CHOUT
                                           2339 ; 
                                           2340 ; CHECK IF PANIC CHARACTER HAS BEEN HIT
                                           2341 ; 
                                           2342 ;PCHECK:LD	A,(BRKCHR)
                                           2343 ;	OR	A
                                           2344 ;	CALL	Z,STATUS
                                           2345 ;	RET	Z
             0fbb cd 68 0f                 2346 PCHECK:	CALL	STATUS			;ANYTHING TYPED
             0fbe c8                       2347 	RET	Z			;RET IF NO.
             0fbf cd 14 0f                 2348 	CALL	INCHAR			;READ THE CHARACTER IN.
             0fc2 fe 03                    2349 	CP	ESC
             0fc4 ca 3f 05                 2350 	JP	Z,STOP1
                                           2351 ;	LD	(BRKCHR),A
             0fc7 c9                       2352 	RET
                                           2353 ; 
                                           2354 ; GET INTEGER FROM TERMINAL
                                           2355 ; DE CONTAINS STRING TO PRINT FIRST
                                           2356 ; HL HAS 1 LESS THAN ACCEPTABLE LOWER BOUND
                                           2357 ; THIS ROUTINE GOES TO START IF BAD NUMBER
                                           2358 ; INTEGER VALUE RETURNED IN HL
                                           2359 ; 
             0fc8 e5                       2360 GINT:	PUSH	HL
             0fc9 eb                       2361 	EX	DE,HL
             0fca 3a 1f 17                 2362 	LD	A,(PHEAD)
             0fcd b7                       2363 	OR	A
             0fce c4 b1 0f                 2364 	CALL	NZ,CRLF
             0fd1 cd 00 0e                 2365 	CALL	PRNT
             0fd4 cd 32 0f                 2366 	CALL	INLINE
             0fd7 21 62 18                 2367 	LD	HL,IBUF
             0fda 22 24 17                 2368 	LD	(TXA),HL
             0fdd cd bd 0e                 2369 	CALL	INTGER
             0fe0 da 00 01                 2370 	JP	C,START
             0fe3 fe 0d                    2371 	CP	CR
             0fe5 c2 00 01                 2372 	JP	NZ,START
             0fe8 d1                       2373 	POP	DE
             0fe9 22 62 18                 2374 	LD	(IBUF),HL	;USE IBUF AS A TEMP
             0fec 21 62 18                 2375 	LD	HL,IBUF
             0fef cd 12 0e                 2376 	CALL	DCMP
             0ff2 d2 00 01                 2377 	JP	NC,START
             0ff5 2a 62 18                 2378 	LD	HL,(IBUF)	;GET THE VALUE BACK TO HL
             0ff8 7e                       2379 	LD	A,(HL)
             0ff9 2f                       2380 	CPL
             0ffa 77                       2381 	LD	(HL),A		;TRY TO STORE THERE
             0ffb be                       2382 	CP	(HL)
             0ffc c2 00 01                 2383 	JP	NZ,START		;BAD OR MISSING MEMORY
             0fff 2f                       2384 	CPL
             1000 77                       2385 	LD	(HL),A		;PUT IT BACK LIKE IT WAS
             1001 c9                       2386 	RET
                                           2387 ; 
                                           2388 ; OUTPUT FP NUMBER ADDRESSED BY HL
                                           2389 ; 
             1002 01 fc ff                 2390 FPOUT:	LD	BC,-DIGIT-1
             1005 09                       2391 	ADD	HL,BC
             1006 44                       2392 	LD	B,H
             1007 4d                       2393 	LD	C,L
             1008 21 be 18                 2394 	LD	HL,ABUF		;OUTPUT BUFFER
             100b 3a c9 18                 2395 	LD	A,(INFES)	;OUTPUT FORMAT
             100e 32 c8 18                 2396 	LD	(FES),A	;STORE IT
             1011 1e 03                    2397 	LD	E,DIGIT
             1013 36 00                    2398 	LD	(HL),0		;CLEAR ROUND-OFF OVERFLOW BUFFER
             1015 23                       2399 	INC	HL		;ABUF+1
                                           2400 ; 
             1016 0a                       2401 NXT:	LD	A,(BC)		;GET DIGIT AND UNPACK
             1017 57                       2402 	LD	D,A
             1018 1f                       2403 	RRA	
             1019 1f                       2404 	RRA
             101a 1f                       2405 	RRA
             101b 1f                       2406 	RRA
             101c e6 0f                    2407 	AND	17Q		;REMOVE BOTTOM DIGIT
             101e 77                       2408 	LD	(HL),A		;STORE TOP DIGIT IN OUTPUT BUFFER (ABUF)
             101f 23                       2409 	INC	HL
             1020 7a                       2410 	LD	A,D		;NOW GET BOTTOM DIGIT
             1021 e6 0f                    2411 	AND	17Q
             1023 77                       2412 	LD	(HL),A		;STORE IT
             1024 23                       2413 	INC	HL
             1025 03                       2414 	INC	BC
             1026 1d                       2415 	DEC	E
             1027 c2 16 10                 2416 	JP	NZ,NXT
             102a 0a                       2417 	LD	A,(BC)
             102b 32 b8 18                 2418 	LD	(FSIGN),A	;STORE SIGN OF NUMBER
             102e af                       2419 	XOR	A
             102f 77                       2420 	LD	(HL),A		;CLEAR ROUND-OFF BUFFER (ABUF+13) 12 DIGIT NO ROUND
             1030 21 c6 18                 2421 	LD	HL,XSIGN		;EXPONENT SIGN STORE
             1033 77                       2422 	LD	(HL),A		;CLEAR XSIGN
                                           2423 ; 
             1034 03                       2424 FIX:	INC	BC		;GET EXPONENT
             1035 0a                       2425 	LD	A,(BC)
             1036 b7                       2426 	OR	A		;EXPONENT ZERO?
             1037 ca d7 11                 2427 	JP	Z,ZERO
             103a d6 80                    2428 	SUB	128		;REMOVE EXPONENT BIAS
             103c c2 40 10                 2429 	JP	NZ,FIX2
             103f 34                       2430 	INC	(HL)		;INCREMENT XSIGN TO NEGATIVE FLAG(1) LATER ZERO
             1040 f2 46 10                 2431 FIX2:	JP	P,CHK13
             1043 2f                       2432 	CPL		;IT'S A NEGATIVE EXPONENT
             1044 34                       2433 	INC	(HL)		;INCREMENT XSIGN TO NEGATIVE (1)
             1045 3c                       2434 ZRO:	INC	A
             1046 21 c7 18                 2435 CHK13:	LD	HL,EXPO		;EXPONENT TEMP STORE
             1049 77                       2436 	LD	(HL),A
             104a 5f                       2437 	LD	E,A
             104b fe 06                    2438 	CP	DIGIT*2
             104d 21 c8 18                 2439 	LD	HL,FES		;FORMAT TEMP BYTE
             1050 da 57 10                 2440 	JP	C,CHKXO
             1053 3e 01                    2441 CHK40:	LD	A,1		;FORCE EXPONENTIAL PRINTOUT
             1055 b6                       2442 	OR	(HL)		;SET FORMAT FOR XOUT
             1056 77                       2443 	LD	(HL),A
                                           2444 ; 
             1057 7e                       2445 CHKXO:	LD	A,(HL)		;CHECK IF EXPONENTIAL FORMAT
             1058 1f                       2446 	RRA
             1059 d2 6a 10                 2447 	JP	NC,CHKX3
             105c e6 0f                    2448 	AND	17Q
             105e fe 06                    2449 	CP	DIGIT*2
             1060 da 65 10                 2450 	JP	C,CHKX2
             1063 3e 05                    2451 	LD	A,DIGIT*2-1		;MAX DIGITS
             1065 57                       2452 CHKX2:	LD	D,A
             1066 3c                       2453 	INC	A
             1067 c3 b0 10                 2454 	JP	ROUND
                                           2455 ; 
             106a e6 0f                    2456 CHKX3:	AND	17Q		;ADD EXPONENT AND DECIMAL PLACES
             106c 57                       2457 	LD	D,A
             106d 83                       2458 	ADD	A,E
             106e fe 07                    2459 	CP	DIGIT*2+1
             1070 47                       2460 	LD	B,A
             1071 da 7a 10                 2461 	JP	C,CHKXN
             1074 7e                       2462 	LD	A,(HL)
             1075 e6 40                    2463 	AND	100Q
             1077 c2 53 10                 2464 	JP	NZ,CHK40
                                           2465 ; 
             107a 3a c6 18                 2466 CHKXN:	LD	A,(XSIGN)	;CHECK EXPONENT SIGN
             107d b7                       2467 	OR	A
             107e c2 85 10                 2468 	JP	NZ,XNEG		;IT'S NEGATIVE
             1081 78                       2469 	LD	A,B
             1082 c3 b0 10                 2470 	JP	ROUND
                                           2471 ; 
             1085 7a                       2472 XNEG:	LD	A,D		;SUBTRACT EXPONENT AND DECIMAL PLACE COUNT
             1086 93                       2473 	SUB	E
             1087 d2 a1 10                 2474 	JP	NC,XN2
             108a 3a c9 18                 2475 XN1:	LD	A,(INFES)
             108d b7                       2476 	OR	A
             108e f2 d7 11                 2477 	JP	P,ZERO
             1091 e6 0e                    2478 	AND	16Q
             1093 ca d7 11                 2479 	JP	Z,ZERO
             1096 0f                       2480 	RRCA
             1097 5f                       2481 	LD	E,A
             1098 1d                       2482 	DEC	E
             1099 0e 01                    2483 	LD	C,1
             109b 21 bd 18                 2484 	LD	HL,ABUF-1
             109e c3 12 11                 2485 	JP	NRND
             10a1 ca 8a 10                 2486 XN2:	JP	Z,XN1
             10a4 c3 b0 10                 2487 	JP	ROUND
                                           2488 ; 
             10a7 06 1f                    2489 CLEAN:	LD	B,37Q		;CLEAR FLAGS
             10a9 a0                       2490 	AND	B
             10aa fe 07                    2491 	CP	DIGIT*2+1
             10ac d8                       2492 	RET	C
             10ad 3e 07                    2493 	LD	A,DIGIT*2+1		;MAX DIGITS OUT
             10af c9                       2494 	RET
                                           2495 ; 
                                           2496 ; THIS ROUTINE IS USED TO ROUND DATA TO THE 
                                           2497 ; SPECIFIED DECIMAL PLACE
                                           2498 ; 
             10b0 cd a7 10                 2499 ROUND:	CALL	CLEAN
             10b3 4f                       2500 	LD	C,A
             10b4 06 00                    2501 	LD	B,0
             10b6 21 bf 18                 2502 	LD	HL,ABUF+1
             10b9 09                       2503 	ADD	HL,BC		;GET ROUND-OFF ADDRESS
             10ba 22 b1 18                 2504 	LD	(ADDT),HL
             10bd 7e                       2505 	LD	A,(HL)
             10be fe 05                    2506 	CP	5		;ROUND IF >=5
             10c0 da d7 10                 2507 	JP	C,TRL2-1
                                           2508 ; 
             10c3 2b                       2509 LESS1:	DEC	HL
             10c4 34                       2510 	INC	(HL)		;ROUND UP
             10c5 7e                       2511 	LD	A,(HL)
             10c6 b7                       2512 	OR	A
             10c7 ca d8 10                 2513 	JP	Z,TRL2
             10ca fe 0a                    2514 	CP	10		;CHECK IF ROUNDED NUMBER >9
             10cc c2 d4 10                 2515 	JP	NZ,TRAIL
             10cf 36 00                    2516 	LD	(HL),0
             10d1 c3 c3 10                 2517 	JP	LESS1
                                           2518 ; 
                                           2519 ; THIS ROUTINE IS USED TO ELIMINATE TRAILING ZEROES
                                           2520 ; 
             10d4 2a b1 18                 2521 TRAIL:	LD	HL,(ADDT)
             10d7 2b                       2522 	DEC	HL
             10d8 3a c8 18                 2523 TRL2:	LD	A,(FES)	;CHECK IF TRAILING ZEROES ARE WANTED
             10db 17                       2524 	RLA
             10dc da ec 10                 2525 	JP	C,FPRNT		;YES- GO PRINT DATA
             10df 7e                       2526 TRL3:	LD	A,(HL)	
             10e0 b7                       2527 	OR	A		;IS IT A ZERO?
             10e1 c2 ec 10                 2528 	JP	NZ,FPRNT		;NO - GO PRINT
             10e4 2b                       2529 	DEC	HL
             10e5 0d                       2530 	DEC	C		;YES - FIX OUTPUT DIGIT COUNT
             10e6 fa d7 11                 2531 	JP	M,ZERO
             10e9 c3 df 10                 2532 	JP	TRL3
                                           2533 ; 
                                           2534 ; HERE START THE PRINT FORMAT ROUTINES
                                           2535 ; 
             10ec 21 be 18                 2536 FPRNT:	LD	HL,ABUF
             10ef 7e                       2537 	LD	A,(HL)		;CHECK IF ROUNDED UP TO 1
             10f0 b7                       2538 	OR	A
             10f1 ca 12 11                 2539 	JP	Z,NRND		;JUMP IF NOT
             10f4 06 01                    2540 	LD	B,1
             10f6 3a c6 18                 2541 	LD	A,(XSIGN)	;IS EXPONENT NEGATIVE?
             10f9 b7                       2542 	OR	A
             10fa ca ff 10                 2543 	JP	Z,POSR
             10fd 06 ff                    2544 	LD	B,-1
                                           2545 ; 
             10ff 3a c7 18                 2546 POSR:	LD	A,(EXPO)	;GET EXPONENT
             1102 b7                       2547 	OR	A
             1103 c2 0b 11                 2548 	JP	NZ,PO2		;IS IT ZERO (E + 0)
             1106 32 c6 18                 2549 	LD	(XSIGN),A
             1109 06 01                    2550 	LD	B,1
             110b 80                       2551 PO2:	ADD	A,B		;FIX EXPONENT COUNT
             110c 32 c7 18                 2552 	LD	(EXPO),A
             110f 1c                       2553 	INC	E
             1110 0c                       2554 	INC	C
             1111 2b                       2555 	DEC	HL
                                           2556 ; 
             1112 23                       2557 NRND:	INC	HL
             1113 79                       2558 	LD	A,C
             1114 fe 07                    2559 	CP	DIGIT*2+1		;CHECK FOR MAXIMUL DIGITS OUT
             1116 c2 1a 11                 2560 	JP	NZ,NRND1
             1119 0d                       2561 	DEC	C
             111a 3a b8 18                 2562 NRND1:	LD	A,(FSIGN)	;CHECK IN NEGATIVE NUMBER
             111d 1f                       2563 	RRA
             111e d2 27 11                 2564 	JP	NC,PRI22		;GO OUTPUT RADIX AND NUMBER
             1121 cd d2 11                 2565 	CALL	NEG		;OUTPUT (-)
             1124 c3 2a 11                 2566 	JP	PRI21
                                           2567 ; 
             1127 cd dc 11                 2568 PRI22:	CALL	SPACE		;OUTPUT A SPACE
             112a 3a c8 18                 2569 PRI21:	LD	A,(FES)	;GET OUTPUT FORMAT
             112d 1f                       2570 	RRA		;CHECK IF EXPONENTIAL FORMAT
             112e da 65 11                 2571 	JP	C,XPRIN
             1131 3a c6 18                 2572 	LD	A,(XSIGN)	;GET EXPONENT SIGN
             1134 b7                       2573 	OR	A		;CHECK IF NEGATIVE EXPONENT
             1135 ca 57 11                 2574 	JP	Z,POSIT
             1138 79                       2575 	LD	A,C
             1139 b7                       2576 	OR	A
             113a c2 41 11                 2577 	JP	NZ,PRIN4		;OUTPUT RADIX AND NUMBER
             113d cd d7 11                 2578 	CALL	ZERO		;NO DIGITS AFTER RADIX, OUTPUT ZERO AND DONE
             1140 c9                       2579 	RET		;****** CALL, RET????!!!********
                                           2580 ; 
             1141 cd e1 11                 2581 PRIN4:	CALL	RADIX		;PRINT DECIMAL POINT
             1144 af                       2582 	XOR	A
             1145 b3                       2583 	OR	E
             1146 ca 50 11                 2584 	JP	Z,PRIN5		;JUMP IF NO ZEROES TO PRINT
             1149 cd d7 11                 2585 	CALL	ZERO		;FORCE PRINT A ZERO
             114c 1d                       2586 	DEC	E
             114d c2 44 11                 2587 	JP	NZ,PRIN4+3
                                           2588 ; 
             1150 cd c8 11                 2589 PRIN5:	CALL	NOUT		;PRINT ASCII DIGIT
             1153 c2 50 11                 2590 	JP	NZ,PRIN5
             1156 c9                       2591 	RET
                                           2592 ; 
             1157 cd c8 11                 2593 POSIT:	CALL	NOUT
             115a 1d                       2594 	DEC	E		;BUMP EXPONENT COUNT
             115b c2 57 11                 2595 	JP	NZ,POSIT
             115e 79                       2596 	LD	A,C		;CHECK IF MORE DIGITS TO OUTPUT
             115f b7                       2597 	OR	A
             1160 c8                       2598 	RET	Z	;NO, DONE
             1161 f8                       2599 	RET	M
             1162 c3 41 11                 2600 	JP	PRIN4		;NOW PRINT DECIMAL POINT
                                           2601 ; 
                                           2602 ; GET HERE FOR EXPONENTIAL OUTPUT FORMAT
                                           2603 ; 
             1165 cd c8 11                 2604 XPRIN:	CALL	NOUT
             1168 ca 74 11                 2605 	JP	Z,NDEC		;INTEGER?
             116b cd e1 11                 2606 	CALL	RADIX		;NO....PRINT DECIMAL POINT
             116e cd c8 11                 2607 XPRI2:	CALL	NOUT
             1171 c2 6e 11                 2608 	JP	NZ,XPRI2
                                           2609 ; 
             1174 06 45                    2610 NDEC:	LD	B,'E'		;OUTPUT 'E'
             1176 cd 76 0f                 2611 	CALL	CHOUT
             1179 3a c6 18                 2612 	LD	A,(XSIGN)
             117c b7                       2613 	OR	A
             117d ca 8a 11                 2614 	JP	Z,XPRI3
             1180 cd d2 11                 2615 	CALL	NEG		;PRINT EXPONENT SIGN (-)
             1183 3a c7 18                 2616 	LD	A,(EXPO)
             1186 3c                       2617 	INC	A
             1187 c3 93 11                 2618 	JP	XOUT2
             118a 06 2b                    2619 XPRI3:	LD	B,'+'		;EXPONENT (+)
             118c cd 76 0f                 2620 	CALL	CHOUT
                                           2621 ; 
                                           2622 ; THIS ROUTINE IS USED TO CONVERT THE EXPONENT
                                           2623 ; FROM BINARY TO ASCII AND PRINT THE RESULT
                                           2624 ; 
             118f 3a c7 18                 2625 XOUT:	LD	A,(EXPO)
             1192 3d                       2626 	DEC	A
             1193 0e 64                    2627 XOUT2:	LD	C,100
             1195 16 00                    2628 	LD	D,0
             1197 cd bd 11                 2629 	CALL	CONV
             119a fe 30                    2630 	CP	'0'		;SKIP LEADING ZEROES
             119c ca a3 11                 2631 	JP	Z,XO21
             119f 14                       2632 	INC	D
             11a0 cd 76 0f                 2633 	CALL	CHOUT
             11a3 7b                       2634 XO21:	LD	A,E
             11a4 0e 0a                    2635 	LD	C,10
             11a6 cd bd 11                 2636 	CALL	CONV
             11a9 fe 30                    2637 	CP	'0'
             11ab c2 b2 11                 2638 	JP	NZ,XO3
             11ae 15                       2639 	DEC	D
             11af c2 b5 11                 2640 	JP	NZ,XO4
             11b2 cd 76 0f                 2641 XO3:	CALL	CHOUT
             11b5 7b                       2642 XO4:	LD	A,E
             11b6 c6 30                    2643 	ADD	A,'0'		;ADD ASCII BIAS
             11b8 47                       2644 	LD	B,A
             11b9 cd 76 0f                 2645 	CALL	CHOUT
             11bc c9                       2646 	RET		;****** CALL, RET?????!!!!!*****
             11bd 06 2f                    2647 CONV:	LD	B,'0'-1
             11bf 04                       2648 	INC	B
             11c0 91                       2649 	SUB	C
             11c1 d2 bf 11                 2650 	JP	NC,CONV+2
             11c4 81                       2651 	ADD	A,C
             11c5 5f                       2652 	LD	E,A
             11c6 78                       2653 	LD	A,B
             11c7 c9                       2654 	RET
                                           2655 ; 
                                           2656 ; THIS ROUTINE ADD ASCII BIAS TO A BCD DIGIT
                                           2657 ; AND CALLS THE OUTPUT ROUTINE
                                           2658 ; 
             11c8 7e                       2659 NOUT:	LD	A,(HL)
             11c9 c6 30                    2660 	ADD	A,'0'
             11cb 47                       2661 	LD	B,A
             11cc cd 76 0f                 2662 	CALL	CHOUT
             11cf 23                       2663 	INC	HL
             11d0 0d                       2664 	DEC	C		;DECREMENT TOTAL DIGITS OUT COUNT
             11d1 c9                       2665 	RET
                                           2666 ; 
                                           2667 ; COMMON SYMBOL LOADING ROUTINES
                                           2668 ; 
             11d2 06 2d                    2669 NEG:	LD	B,'-'
             11d4 c3 76 0f                 2670 	JP	CHOUT
             11d7 06 30                    2671 ZERO:	LD	B,'0'
             11d9 c3 76 0f                 2672 	JP	CHOUT
             11dc 06 20                    2673 SPACE:	LD	B,' '
             11de c3 76 0f                 2674 	JP	CHOUT
             11e1 06 2e                    2675 RADIX:	LD	B,'.'
             11e3 c3 76 0f                 2676 	JP	CHOUT
                                           2677 ; 
                                           2678 ; CONVERTS FP STRING AT DE, UPDATE DE PAST TERMINATOR
                                           2679 ; PUTS TERMINATOR IN B, PUTS FP NUMBER AT ADDRESS IN HL
                                           2680 ; SETS CARRY IF NOT FOUND
                                           2681 ; 
             11e6 e5                       2682 FPIN:	PUSH	HL
             11e7 d5                       2683 	PUSH	DE
             11e8 eb                       2684 	EX	DE,HL
             11e9 2b                       2685 	DEC	HL
             11ea 22 af 18                 2686 	LD	(ADDS),HL
             11ed 21 b5 18                 2687 	LD	HL,OPST		;CLEAR TEMPORARY STORAGE AREAS AND BC BUFFER
             11f0 0e 09                    2688 	LD	C,DIGIT+6
             11f2 cd aa 12                 2689 	CALL	CLEAR
                                           2690 ; 
             11f5 11 00 00                 2691 SCANC:	LD	DE,0
             11f8 21 b9 18                 2692 	LD	HL,BCX		;BC=PACK BUFFER
             11fb 22 b3 18                 2693 SCAN0:	LD	(BCADD),HL	;PACK BUFFER POINTER
             11fe 21 fe 11                 2694 SCANP:	LD	HL,SCANP
             1201 e5                       2695 	PUSH	HL		;USED FOR RETURN FROM OTHER ROUTINES
             1202 af                       2696 	XOR	A
             1203 32 c6 18                 2697 	LD	(XSIGN),A	;CLEAR EXPONENT SIGN BYTE
                                           2698 ; 
             1206 cd 7c 12                 2699 SCANG:	CALL	IBSCN
             1209 da 33 12                 2700 	JP	C,SCANX		;FOUND A NUMBER, GO PACK IT
             120c fe 2e                    2701 	CP	'.'		;RADIX?
             120e ca 24 12                 2702 	JP	Z,SCAN5		;PROCESS RADIX POINTERS
             1211 fe 45                    2703 	CP	'E'		;EXPONENT?
             1213 ca b2 12                 2704 	JP	Z,EXCON		;FOUND 'E', GO PROCESS EXPONENT
                                           2705 ; NOT A CHARACTER LEGAL IN NUMBER
             1216 47                       2706 	LD	B,A		;MOVE TERMINATOR TO B
             1217 3a b5 18                 2707 	LD	A,(OPST)	;CHECK IF ANY DIGITS YET
             121a e6 10                    2708 	AND	20Q
             121c c2 90 12                 2709 	JP	NZ,ENTR2
                                           2710 ; GET HERE IF LEGAL FP NUMBER NOT FOUND
             121f e1                       2711 FPIN1:	POP	HL		;SCANP LINK
             1220 d1                       2712 	POP	DE		;TEXT POINTER
             1221 e1                       2713 	POP	HL		;FP # ADDR
             1222 37                       2714 	SCF
             1223 c9                       2715 	RET
                                           2716 ; FOUND DECIMAL POINT
             1224 af                       2717 SCAN5:	XOR	A		;FOUND RADIX PROCESS RADIX POINTERS FOR EXP
             1225 b2                       2718 	OR	D		;ANY DIGITS YET?
             1226 c2 2e 12                 2719 	JP	NZ,SCAN6
             1229 c6 c0                    2720 	ADD	A,300Q		;SET ECNT - STOP COUNTING DIGITS
             122b b3                       2721 	OR	E		;NO INT DIGITS, BIT 7 IS COUNT/DON'T COUNT FLAG
             122c 5f                       2722 	LD	E,A		;BIT 6 IS NEGATIVE EXPONENT FLAG
             122d c9                       2723 	RET
             122e 3e 80                    2724 SCAN6:	LD	A,200Q		;SET ECNT TO COUNT DIGITS
             1230 b3                       2725 	OR	E
             1231 5f                       2726 	LD	E,A
             1232 c9                       2727 	RET
                                           2728 ; 
             1233 e6 0f                    2729 SCANX:	AND	17Q		;FOUND NUMBER-REMOVE ASCII BIAS
             1235 47                       2730 	LD	B,A
             1236 21 b5 18                 2731 	LD	HL,OPST		;SET FIRST CHARACTER FLAG
             1239 3e 30                    2732 	LD	A,60Q
             123b b6                       2733 	OR	(HL)
             123c 77                       2734 	LD	(HL),A
             123d af                       2735 	XOR	A
             123e b0                       2736 	OR	B		;IS CHARACTER ZERO?
             123f c2 4b 12                 2737 	JP	NZ,PACK
             1242 b2                       2738 	OR	D		;LEADING ZERO? IE. ANY INT DIGITS?
             1243 c2 4b 12                 2739 	JP	NZ,PACK
             1246 b3                       2740 	OR	E
             1247 5f                       2741 	LD	E,A
             1248 c8                       2742 	RET	Z	;IF COUNTING YET
             1249 1c                       2743 	INC	E		;ECNT+1-COUNT ZEROS FOR EXPONENT COUNT
             124a c9                       2744 	RET
                                           2745 ; 
                                           2746 ; THIS SUBROUTINE BCD PACKS DIGITS INTO REG BC
                                           2747 ; 
             124b 7b                       2748 PACK:	LD	A,E
             124c 17                       2749 	RLA
             124d da 51 12                 2750 	JP	C,PACK1
             1250 1c                       2751 	INC	E
             1251 7b                       2752 PACK1:	LD	A,E
             1252 32 b7 18                 2753 	LD	(ECNT),A	;DIGIT COUNT FOR EXPONENT COUNT
             1255 14                       2754 	INC	D		;TOTAL DIGIT COUNT (D ALSO HAS TOP/BOTM FLAG BIT 7)
             1256 7a                       2755 	LD	A,D
             1257 e6 7f                    2756 	AND	177Q		;REMOVE TOP/BOTM FLAG
             1259 fe 07                    2757 	CP	DIGIT*2+1		;LIMIT INPUT DIGITS
             125b d0                       2758 	RET	NC
             125c af                       2759 	XOR	A
             125d b2                       2760 	OR	D
             125e fa 6e 12                 2761 	JP	M,BOTM
                                           2762 ; 
             1261 f6 80                    2763 TOP:	OR	200Q		;SET MSB FOR TOP FLAG
             1263 57                       2764 	LD	D,A
             1264 78                       2765 	LD	A,B
             1265 2a b3 18                 2766 	LD	HL,(BCADD)	;GET BC ADDRESS
             1268 07                       2767 	RLCA
             1269 07                       2768 	RLCA
             126a 07                       2769 	RLCA
             126b 07                       2770 	RLCA
             126c 77                       2771 	LD	(HL),A		;SAVE CHAR IN BC
             126d c9                       2772 	RET
                                           2773 ; 
             126e e6 7f                    2774 BOTM:	AND	177Q		;STRIP MSB (BOTTOM FLAG)
             1270 57                       2775 	LD	D,A
             1271 78                       2776 	LD	A,B
             1272 2a b3 18                 2777 	LD	HL,(BCADD)
             1275 b6                       2778 	OR	(HL)		;OR IN TOP NUMBER
             1276 77                       2779 	LD	(HL),A		;PUT NUMBER BACK IN BC
             1277 23                       2780 	INC	HL
             1278 c1                       2781 	POP	BC
             1279 c3 fb 11                 2782 	JP	SCAN0
             127c 2a af 18                 2783 IBSCN:	LD	HL,(ADDS)	;INPUT BUFFER POINTER
             127f 23                       2784 	INC	HL		;GET NEXT BYTE
             1280 7e                       2785 	LD	A,(HL)
             1281 fe 20                    2786 	CP	' '
             1283 ca 7f 12                 2787 	JP	Z,IBSCN+3
             1286 22 af 18                 2788 	LD	(ADDS),HL	;NOTE: THIS ROUTINE FALLS THROUGH
                                           2789 ; THIS ROUTINE CHECKS FOR ASCII NUMBERS
             1289 fe 3a                    2790 NMCHK:	CP	'9'+1
             128b d0                       2791 	RET	NC
             128c fe 30                    2792 	CP	'0'
             128e 3f                       2793 	CCF
             128f c9                       2794 	RET
                                           2795 ; 
                                           2796 ; THIS ROUTINE IS USED TO ADJUST A NUMBER IN BC BUFFER
                                           2797 ; AND RETURNS VALUE
                                           2798 ; 
             1290 11 00 00                 2799 ENTR2:	LD	DE,0
             1293 c5                       2800 ENT1:	PUSH	BC		;TERMINATOR
             1294 cd 0d 13                 2801 	CALL	FIXE		;NORMALIZE FLOATING POINT NUMBER
             1297 c1                       2802 	POP	BC		;TERMINATOR
             1298 d1                       2803 	POP	DE		;SCANP LINK
             1299 d1                       2804 	POP	DE		;OLD TEXT ADDR
             129a d1                       2805 	POP	DE		;RETURN ADDR
             129b 0e 05                    2806 	LD	C,DIGIT+2
             129d 21 bd 18                 2807 	LD	HL,BCX+DIGIT+1
             12a0 cd 79 0d                 2808 	CALL	VCOPY
             12a3 2a af 18                 2809 	LD	HL,(ADDS)
             12a6 eb                       2810 	EX	DE,HL
             12a7 13                       2811 	INC	DE
             12a8 b7                       2812 	OR	A
             12a9 c9                       2813 	RET
                                           2814 ; 
                                           2815 ; THIS ROUTINE IS USED TO CLEAR STORAGE AREAS
                                           2816 ; THE STARTING ADDRESS IS IN HL AND THE COUNT
                                           2817 ; IS IN C
                                           2818 ; 
             12aa af                       2819 CLEAR:	XOR	A
             12ab 77                       2820 	LD	(HL),A
             12ac 23                       2821 	INC	HL
             12ad 0d                       2822 	DEC	C
             12ae c2 ab 12                 2823 	JP	NZ,CLEAR+1
             12b1 c9                       2824 	RET
                                           2825 ; 
                                           2826 ; THIS ROUTINE CONVERTS THE ASCII EXPONENT OF
                                           2827 ; THE NUMBER IN THE INPUT BUFFER TO BINARY, AND
                                           2828 ; NORMALIZES THE EXPONENT ACCORDING TO THE INPUT
                                           2829 ; FORMAT OF THE NUMBER
                                           2830 ; 
             12b2 cd 7c 12                 2831 EXCON:	CALL	IBSCN		;GET CHARACTER
             12b5 da d7 12                 2832 	JP	C,EXC3
             12b8 fe e3                    2833 	CP	PLSRW		;CHECK FOR UNARY SIGNS
             12ba ca d1 12                 2834 	JP	Z,EXC4
             12bd fe 2b                    2835 	CP	'+'
             12bf ca d1 12                 2836 	JP	Z,EXC4
             12c2 fe 2d                    2837 	CP	'-'
             12c4 ca cc 12                 2838 	JP	Z,EXC2
             12c7 fe e5                    2839 	CP	MINRW
             12c9 c2 09 13                 2840 	JP	NZ,FPERR		;NO SIGN OR NUMBER?
             12cc 3e 01                    2841 EXC2:	LD	A,1
             12ce 32 c6 18                 2842 	LD	(XSIGN),A	;SAVE SIGN
             12d1 cd 7c 12                 2843 EXC4:	CALL	IBSCN
             12d4 d2 09 13                 2844 	JP	NC,FPERR		;NO NUMBER?
             12d7 cd dd 12                 2845 EXC3:	CALL	ASCDC		;CONVERT ASCII TO BINARY
             12da c3 93 12                 2846 	JP	ENT1		;NORMALIZE NUMBER AND RETURN
                                           2847 ; 
                                           2848 ; THIS ROUTINE CONVERTS ASCII TO BINARY
                                           2849 ; THREE CONSECUTIVE NUMBERS < 128 MAY BE CONVERTED
                                           2850 ; 
             12dd eb                       2851 ASCDC:	EX	DE,HL
             12de 21 00 00                 2852 	LD	HL,0
             12e1 1a                       2853 ASC1:	LD	A,(DE)		;GET CHR FROM INPUT BUFFER-NO SPACES ALLOWED
             12e2 cd 89 12                 2854 	CALL	NMCHK		;CHECK IF NUMBER
             12e5 d2 f8 12                 2855 	JP	NC,ASC2
             12e8 d6 30                    2856 	SUB	'0'		;REMOVE ASCII BIAS
             12ea 44                       2857 	LD	B,H
             12eb 4d                       2858 	LD	C,L
             12ec 29                       2859 	ADD	HL,HL
             12ed 29                       2860 	ADD	HL,HL
             12ee 09                       2861 	ADD	HL,BC
             12ef 29                       2862 	ADD	HL,HL
             12f0 4f                       2863 	LD	C,A
             12f1 06 00                    2864 	LD	B,0
             12f3 09                       2865 	ADD	HL,BC
             12f4 13                       2866 	INC	DE
             12f5 c3 e1 12                 2867 	JP	ASC1
             12f8 eb                       2868 ASC2:	EX	DE,HL
             12f9 47                       2869 	LD	B,A		;SAVE TERMINATOR
             12fa 22 af 18                 2870 	LD	(ADDS),HL	;SAVE IBUF ADDRESS
             12fd 7a                       2871 	LD	A,D
             12fe b7                       2872 	OR	A
             12ff c2 09 13                 2873 	JP	NZ,FPERR		;TOO BIG >255
             1302 7b                       2874 	LD	A,E
             1303 17                       2875 	RLA
             1304 da 09 13                 2876 	JP	C,FPERR		;TOO BIG >127
             1307 1f                       2877 	RRA
             1308 c9                       2878 	RET
             1309 c1                       2879 FPERR:	POP	BC		;ASCDC RET LINK
             130a c3 1f 12                 2880 	JP	FPIN1
                                           2881 ; 
                                           2882 ; THIS ROUTINE NORMALIZES THE INPUT NUMBER
                                           2883 ; 
             130d eb                       2884 FIXE:	EX	DE,HL
             130e 3a b9 18                 2885 	LD	A,(BCX)
             1311 b7                       2886 	OR	A		;IS IT ZERO?
             1312 ca 1a 13                 2887 	JP	Z,ZZ2
             1315 cd 1e 13                 2888 	CALL	CHKPN		;SET EXPONENT POSITIVE/NEGATIVE
             1318 c6 80                    2889 	ADD	A,200Q		;ADD EXPONENT BIAS
             131a 32 bd 18                 2890 ZZ2:	LD	(BCX+DIGIT+1),A	;STORE NORMALIZED EXPONENT IN BC
             131d c9                       2891 	RET
                                           2892 ; 
             131e 3a b7 18                 2893 CHKPN:	LD	A,(ECNT)	;GET EXPONENT COUNT-SET IN 'SCAN' ROUTINE
             1321 5f                       2894 	LD	E,A
             1322 e6 3f                    2895 	AND	77Q		;STRIP BITS 7&8
             1324 47                       2896 	LD	B,A
             1325 3a c6 18                 2897 	LD	A,(XSIGN)
             1328 b7                       2898 	OR	A
             1329 ca 40 13                 2899 	JP	Z,LPOS		;EXPONENT IS POSITIVE
             132c 24                       2900 	INC	H		;SET SIGN IN H ** THIS SHOULD BE INR H NOT INX H
             132d 3e 40                    2901 	LD	A,100Q		;L IS NEGATIVE
             132f a3                       2902 	AND	E		;CHECK IF E IS NEGATIVE
             1330 ca 3b 13                 2903 	JP	Z,EPOS
             1333 7d                       2904 	LD	A,L		;BOTH E & L NEGATIVE
             1334 68                       2905 	LD	L,B
             1335 cd 4c 13                 2906 	CALL	BPOS+1
             1338 2f                       2907 	CPL
             1339 3c                       2908 	INC	A
             133a c9                       2909 	RET		;BACK TO FIXE
                                           2910 ; 
             133b 7d                       2911 EPOS:	LD	A,L		;E&L NEGATIVE
             133c 2f                       2912 	CPL
             133d 3c                       2913 	INC	A		;TWO'S COMP A
             133e 80                       2914 	ADD	A,B
             133f c9                       2915 	RET		;TO FIXE
                                           2916 ; 
             1340 3e 40                    2917 LPOS:	LD	A,100Q		;EXPONENT POSITIVE
             1342 a3                       2918 	AND	E		;IS E NEGATIVE?
             1343 ca 4b 13                 2919 	JP	Z,BPOS
             1346 78                       2920 	LD	A,B
             1347 45                       2921 	LD	B,L
             1348 c3 3c 13                 2922 	JP	EPOS+1
                                           2923 ; 
             134b 78                       2924 BPOS:	LD	A,B		;E&L POSITIVE
             134c 85                       2925 	ADD	A,L
             134d f0                       2926 	RET	P
                                           2927 ; 
             134e e1                       2928 	POP	HL
             134f c3 09 13                 2929 	JP	FPERR
             1352 10                       2930 	DEFB	10H
             1353  0000                    2931 	DEFW	0
             1355 01                       2932 	DEFB	1
             1356 81                       2933 FPNONE: DEFB	129
                                           2934 ; 
                                           2935 ; FLOATING POINT MATH PACKAGE
                                           2936 ; 
                                           2937 ; EACH FUNCTION OPERATES AS FOLLOWS:  (BC) = (DE) # (HL)
                                           2938 ;     WHERE  BC IS ADDRESS OF RESULT
                                           2939 ;            DE IS ADDRESS OF 1ST ARGUMENT
                                           2940 ;            HL IS ADDRESS OF 2ND ARGUMENT
                                           2941 ;     AND # IS ONE OF THE OPERATORS  +,-,*,/
                                           2942 ; 
                                           2943 ; ON ENTRY ALL ADDRESS POINT TO THE EXPONENT PART OF THE
                                           2944 ;     FLOATING POINT ARGUMENT
                                           2945 ; 
                                           2946 ; THE NUMBER ZERO IS REPRESENTED BY A ZERO EXPONENT
                                           2947 ; 
                                           2948 ; ALL NUMBERS ARE ASSUMED TO BE NORMALIZED
                                           2949 ; 
             1357 c5                       2950 FADD:	PUSH	BC
             1358 cd d1 15                 2951 	CALL	EXPCK		;FETCH ARGUMENTS
             135b 0e 00                    2952 	LD	C,0
             135d 1b                       2953 ADSUM:	DEC	DE
             135e eb                       2954 	EX	DE,HL
             135f 3a b7 16                 2955 	LD	A,(SIGN)
             1362 ae                       2956 	XOR	(HL)		;FORM SIGN OF RESULT
             1363 47                       2957 	LD	B,A
             1364 eb                       2958 	EX	DE,HL
             1365 1a                       2959 	LD	A,(DE)
             1366 1b                       2960 	DEC	DE
             1367 a9                       2961 	XOR	C
             1368 32 b7 16                 2962 	LD	(SIGN),A
             136b 21 b9 16                 2963 	LD	HL,RCTRL		;ROUNDING CONTOL FLAG
             136e 7e                       2964 	LD	A,(HL)
             136f b7                       2965 	OR	A
             1370 23                       2966 	INC	HL
             1371 7e                       2967 	LD	A,(HL)		;GET ROUNDING DIGIT
             1372 ca 79 13                 2968 	JP	Z,ADS8
             1375 07                       2969 	RLCA
             1376 07                       2970 	RLCA
             1377 07                       2971 	RLCA
             1378 07                       2972 	RLCA
             1379 c6 b0                    2973 ADS8:	ADD	A,0B0H		;FORCE CARRY IF DIGIT > 5
             137b 78                       2974 	LD	A,B
             137c 1f                       2975 	RRA	
             137d da bd 13                 2976 	JP	C,ADS1		;HAVE SUBTRACTION
             1380 17                       2977 	RLA		;RESTORE CARRY
             1381 cd 9c 13                 2978 	CALL	ADDX		;PERFORM ADDITION
             1384 d2 93 13                 2979 	JP	NC,ADS2
             1387 06 04                    2980 	LD	B,4
             1389 cd 37 16                 2981 	CALL	RIGHT
             138c 21 b8 16                 2982 	LD	HL,EXP
             138f 34                       2983 	INC	(HL)		;INCREMENT EXPONENT
             1390 ca 83 16                 2984 	JP	Z,OVER
             1393 c1                       2985 ADS2:	POP	BC		;GET RESULTS ADDRESS
             1394 cd 29 16                 2986 	CALL	STORE		;SAVE RESULTS
             1397 c9                       2987 	RET		;******* CALL, RET????!!!!********
             1398 e1                       2988 ZEREX:	POP	HL
             1399 c3 93 13                 2989 	JP	ADS2
             139c 21 b6 16                 2990 ADDX:	LD	HL,BUF+DIGIT-1
             139f 06 03                    2991 	LD	B,DIGIT
             13a1 1a                       2992 ADD1:	LD	A,(DE)
             13a2 8e                       2993 	ADC	A,(HL)
             13a3 27                       2994 	DAA
             13a4 77                       2995 	LD	(HL),A
             13a5 2b                       2996 	DEC	HL
             13a6 1b                       2997 	DEC	DE
             13a7 05                       2998 	DEC	B
             13a8 c2 a1 13                 2999 	JP	NZ,ADD1
             13ab d0                       3000 	RET	NC
             13ac 34                       3001 	INC	(HL)
             13ad c9                       3002 	RET
                                           3003 ; 
                                           3004 ; FLOATING POINT SUBTRACTION
                                           3005 ; 
             13ae c5                       3006 FSUB:	PUSH	BC
             13af cd d1 15                 3007 	CALL	EXPCK		;GET ARGUMENTS 
             13b2 3a b7 16                 3008 	LD	A,(SIGN)
             13b5 ee 01                    3009 	XOR	1		;COMPLEMENT SIGN
             13b7 32 b7 16                 3010 	LD	(SIGN),A
             13ba c3 5d 13                 3011 	JP	ADSUM
             13bd 17                       3012 ADS1:	RLA		;RESTORE CARRY
             13be 3f                       3013 	CCF		;COMPLEMENT FOR ROUNDING
             13bf cd 11 14                 3014 	CALL	SUBX		;SUBTRACT ARGUMENTS
             13c2 21 b7 16                 3015 	LD	HL,SIGN
             13c5 da dc 13                 3016 	JP	C,ADS4
             13c8 7e                       3017 	LD	A,(HL)		;GET SIGN
             13c9 ee 01                    3018 	XOR	1		;COMPLEMENT
             13cb 77                       3019 	LD	(HL),A
             13cc 2b                       3020 ADS7:	DEC	HL
             13cd 06 03                    3021 	LD	B,DIGIT
             13cf 3e 9a                    3022 ADS3:	LD	A,9AH
             13d1 9e                       3023 	SBC	A,(HL)		;COMPLEMENT RESULT
             13d2 c6 00                    3024 	ADD	A,0
             13d4 27                       3025 	DAA
             13d5 77                       3026 	LD	(HL),A
             13d6 2b                       3027 	DEC	HL
             13d7 05                       3028 	DEC	B
             13d8 3f                       3029 	CCF
             13d9 c2 cf 13                 3030 	JP	NZ,ADS3
             13dc 21 b4 16                 3031 ADS4:	LD	HL,BUF
             13df 01 03 00                 3032 	LD	BC,DIGIT
             13e2 7e                       3033 ADS5:	LD	A,(HL)
             13e3 b7                       3034 	OR	A
             13e4 c2 f5 13                 3035 	JP	NZ,ADS6
             13e7 23                       3036 	INC	HL
             13e8 04                       3037 	INC	B
             13e9 04                       3038 	INC	B
             13ea 0d                       3039 	DEC	C
             13eb c2 e2 13                 3040 	JP	NZ,ADS5
             13ee af                       3041 	XOR	A		;********* NOT NEEDED
             13ef 32 b8 16                 3042 	LD	(EXP),A
             13f2 c3 93 13                 3043 	JP	ADS2
             13f5 fe 10                    3044 ADS6:	CP	10H
             13f7 d2 fb 13                 3045 	JP	NC,ADS9
             13fa 04                       3046 	INC	B
             13fb 21 b8 16                 3047 ADS9:	LD	HL,EXP
             13fe 7e                       3048 	LD	A,(HL)
             13ff 90                       3049 	SUB	B
             1400 ca 89 16                 3050 	JP	Z,UNDER
             1403 da 89 16                 3051 	JP	C,UNDER
             1406 77                       3052 	LD	(HL),A
             1407 78                       3053 	LD	A,B
             1408 07                       3054 	RLCA
             1409 07                       3055 	RLCA
             140a 47                       3056 	LD	B,A
             140b cd 5d 16                 3057 	CALL	LEFT
             140e c3 93 13                 3058 	JP	ADS2
             1411 21 b6 16                 3059 SUBX:	LD	HL,BUF+DIGIT-1
             1414 06 03                    3060 	LD	B,DIGIT
             1416 3e 99                    3061 SUB1:	LD	A,99H
             1418 ce 00                    3062 	ADC	A,0
             141a 96                       3063 	SUB	(HL)
             141b eb                       3064 	EX	DE,HL
             141c 86                       3065 	ADD	A,(HL)
             141d 27                       3066 	DAA
             141e eb                       3067 	EX	DE,HL
             141f 77                       3068 	LD	(HL),A
             1420 2b                       3069 	DEC	HL
             1421 1b                       3070 	DEC	DE
             1422 05                       3071 	DEC	B
             1423 c2 16 14                 3072 	JP	NZ,SUB1
             1426 c9                       3073 	RET
                                           3074 ; 
                                           3075 ; FLOATING POINT MULTIPLY
                                           3076 ; 
             1427 c5                       3077 FMUL:	PUSH	BC
             1428 7e                       3078 	LD	A,(HL)
             1429 b7                       3079 	OR	A		;ARGUMENT = 0?
             142a ca 41 14                 3080 	JP	Z,FMUL1+2
             142d 1a                       3081 	LD	A,(DE)	
             142e b7                       3082 	OR	A		;ARGUMENT =0?
             142f ca 41 14                 3083 	JP	Z,FMUL1+2
             1432 86                       3084 	ADD	A,(HL)		;FORM RESULT EXPONENT
             1433 da 3c 14                 3085 	JP	C,FMOVR
             1436 f2 89 16                 3086 	JP	P,UNDER
             1439 c3 3f 14                 3087 	JP	FMUL1
             143c fa 83 16                 3088 FMOVR:	JP	M,OVER
             143f d6 80                    3089 FMUL1:	SUB	128		;REMOVE EXCESS BIAS
             1441 32 b8 16                 3090 	LD	(EXP),A	;SAVE EXPONENT
             1444 1b                       3091 	DEC	DE
             1445 2b                       3092 	DEC	HL
             1446 1a                       3093 	LD	A,(DE)
             1447 ae                       3094 	XOR	(HL)		;FORM RESULT SIGN
             1448 2b                       3095 	DEC	HL
             1449 1b                       3096 	DEC	DE
             144a e5                       3097 	PUSH	HL
             144b 21 b7 16                 3098 	LD	HL,SIGN		;GET SIGN ADDRESS
             144e 77                       3099 	LD	(HL),A		;SAVE SIGN
             144f 2b                       3100 	DEC	HL
             1450 af                       3101 	XOR	A
             1451 06 05                    3102 	LD	B,DIGIT+2
             1453 77                       3103 FMUL2:	LD	(HL),A		;ZERO WORKING BUFFER
             1454 2b                       3104 	DEC	HL
             1455 05                       3105 	DEC	B
             1456 c2 53 14                 3106 	JP	NZ,FMUL2
             1459 3a b8 16                 3107 	LD	A,(EXP)
             145c b7                       3108 	OR	A
             145d ca 98 13                 3109 	JP	Z,ZEREX
             1460 0e 03                    3110 	LD	C,DIGIT
             1462 21 94 16                 3111 	LD	HL,HOLD1+DIGIT
                                           3112 ; GET MULTIPLIER INTO HOLDING REGISTER
             1465 1a                       3113 FMUL3:	LD	A,(DE)
             1466 77                       3114 	LD	(HL),A		;PUT IN REGISTER
             1467 2b                       3115 	DEC	HL
             1468 1b                       3116 	DEC	DE
             1469 0d                       3117 	DEC	C
             146a c2 65 14                 3118 	JP	NZ,FMUL3
             146d 71                       3119 	LD	(HL),C
             146e 2b                       3120 	DEC	HL
             146f 06 fa                    3121 	LD	B,250		;SET LOOP COUNT
             1471 11 04 00                 3122 FMUL4:	LD	DE,DIGIT+1
             1474 4b                       3123 	LD	C,E
             1475 19                       3124 	ADD	HL,DE
             1476 eb                       3125 	EX	DE,HL
             1477 19                       3126 	ADD	HL,DE		;H,L=NEXT HOLDING REGISTER
             1478 04                       3127 	INC	B
             1479 f2 ad 14                 3128 	JP	P,FMUL8		;FINISHED
             147c 1a                       3129 FMUL5:	LD	A,(DE)		;GET DIGITS
             147d 8f                       3130 	ADC	A,A		;TIMES 2
             147e 27                       3131 	DAA
             147f 77                       3132 	LD	(HL),A		;PUT IN HOLDING REGISTER
             1480 1b                       3133 	DEC	DE
             1481 2b                       3134 	DEC	HL
             1482 0d                       3135 	DEC	C
             1483 c2 7c 14                 3136 	JP	NZ,FMUL5
             1486 04                       3137 	INC	B		;INCREMENT LOOP COUNT
             1487 c2 71 14                 3138 	JP	NZ,FMUL4
                                           3139 ; 
                                           3140 ; FORM 10X BY ADDING 8X AND 2X
                                           3141 ; FIRST GET 8X
             148a 23                       3142 	INC	HL
             148b 11 a1 16                 3143 	LD	DE,HOLD5		;NEXT HOLDING REGISTER
             148e 0e 04                    3144 	LD	C,DIGIT+1
             1490 41                       3145 	LD	B,C
             1491 7e                       3146 FMUL6:	LD	A,(HL)
             1492 12                       3147 	LD	(DE),A
             1493 23                       3148 	INC	HL
             1494 13                       3149 	INC	DE
             1495 0d                       3150 	DEC	C
             1496 c2 91 14                 3151 	JP	NZ,FMUL6
             1499 21 98 16                 3152 	LD	HL,HOLD2+DIGIT		;GET 2X
             149c 1b                       3153 	DEC	DE
             149d 1a                       3154 FMUL7:	LD	A,(DE)
             149e 8e                       3155 	ADC	A,(HL)		;FORM 10X
             149f 27                       3156 	DAA
             14a0 12                       3157 	LD	(DE),A
             14a1 1b                       3158 	DEC	DE
             14a2 2b                       3159 	DEC	HL
             14a3 05                       3160 	DEC	B
             14a4 c2 9d 14                 3161 	JP	NZ,FMUL7
             14a7 06 f9                    3162 	LD	B,249
             14a9 eb                       3163 	EX	DE,HL
             14aa c3 71 14                 3164 	JP	FMUL4
             14ad eb                       3165 FMUL8:	EX	DE,HL
             14ae 23                       3166 	INC	HL
             14af 36 04                    3167 	LD	(HL),DIGIT+1		;SET NEXT LOOP COUNT
                                           3168 ; PERFORM ACCUMULATION OF PRODUCT
             14b1 c1                       3169 FMUL9:	POP	BC		;GET MULTIPLIER
             14b2 21 b1 16                 3170 	LD	HL,HOLD8+DIGIT+1	
             14b5 35                       3171 	DEC	(HL)		;DECREMENT LOOP COUNT
             14b6 ca e3 14                 3172 	JP	Z,FMU14		;FINISHED
             14b9 0a                       3173 	LD	A,(BC)
             14ba 0b                       3174 	DEC	BC
             14bb c5                       3175 	PUSH	BC
             14bc 2b                       3176 	DEC	HL
             14bd eb                       3177 	EX	DE,HL
             14be 87                       3178 FMU10:	ADD	A,A		;CHECK FOR BIT IN CARRY
             14bf da cd 14                 3179 	JP	C,FMU11		;FOUND A BIT
             14c2 ca db 14                 3180 	JP	Z,FMU12		;ZERO - FINISHED THIS DIGIT
             14c5 21 fc ff                 3181 	LD	HL,-DIGIT-1
             14c8 19                       3182 	ADD	HL,DE		;POINT TO NEXT HOLDING REGISTER
             14c9 eb                       3183 	EX	DE,HL
             14ca c3 be 14                 3184 	JP	FMU10
             14cd 4f                       3185 FMU11:	LD	C,A
             14ce b7                       3186 	OR	A		;CLEAR CARRY
             14cf cd 9c 13                 3187 	CALL	ADDX		;ACCUMULATE PRODUCT
             14d2 1a                       3188 	LD	A,(DE)
             14d3 86                       3189 	ADD	A,(HL)
             14d4 27                       3190 	DAA
             14d5 77                       3191 	LD	(HL),A
             14d6 79                       3192 	LD	A,C
             14d7 1b                       3193 	DEC	DE
             14d8 c3 be 14                 3194 	JP	FMU10
                                           3195 ; ROTATE RIGHT 1 BYTE
             14db 06 08                    3196 FMU12:	LD	B,8
             14dd cd 37 16                 3197 	CALL	RIGHT
             14e0 c3 b1 14                 3198 	JP	FMUL9
             14e3 3a b4 16                 3199 FMU14:	LD	A,(BUF)
             14e6 e6 f0                    3200 	AND	0F0H		;CHECK IF NORMALIZING
             14e8 ca f4 14                 3201 	JP	Z,FMU17
             14eb 7a                       3202 	LD	A,D
             14ec e6 f0                    3203 	AND	0F0H
             14ee 21 b6 16                 3204 	LD	HL,SIGN-1
             14f1 c3 05 15                 3205 	JP	FMU18
             14f4 06 04                    3206 FMU17:	LD	B,4
             14f6 21 b8 16                 3207 	LD	HL,EXP
             14f9 35                       3208 	DEC	(HL)
             14fa ca 89 16                 3209 	JP	Z,UNDER
             14fd cd 5d 16                 3210 	CALL	LEFT		;NORMALIZE
             1500 7a                       3211 	LD	A,D		;GET DIGIT SHIFTED OFF
                                           3212 ; PERFORM ROUNDING
             1501 0f                       3213 	RRCA
             1502 0f                       3214 	RRCA
             1503 0f                       3215 	RRCA
             1504 0f                       3216 	RRCA
             1505 fe 50                    3217 FMU18:	CP	50H
             1507 da 29 15                 3218 	JP	C,FMU16
             150a 3c                       3219 	INC	A
             150b e6 0f                    3220 	AND	0FH
             150d 0e 03                    3221 	LD	C,DIGIT
             150f 8e                       3222 FMU15:	ADC	A,(HL)
             1510 27                       3223 	DAA
             1511 77                       3224 	LD	(HL),A
             1512 3e 00                    3225 	LD	A,0
             1514 2b                       3226 	DEC	HL
             1515 0d                       3227 	DEC	C
             1516 c2 0f 15                 3228 	JP	NZ,FMU15
                                           3229 ; CHECK FOR ROUNDING OVERFLOW
             1519 d2 93 13                 3230 	JP	NC,ADS2		;NO OVERFLOW
             151c 23                       3231 	INC	HL
             151d 36 10                    3232 	LD	(HL),10H
             151f 21 b8 16                 3233 	LD	HL,EXP
             1522 34                       3234 	INC	(HL)
             1523 c2 93 13                 3235 	JP	NZ,ADS2
             1526 c3 83 16                 3236 	JP	OVER
                                           3237 ; ROUNDING NOT NEEDED
             1529 e6 0f                    3238 FMU16:	AND	0FH
             152b 86                       3239 	ADD	A,(HL)
             152c 77                       3240 	LD	(HL),A
             152d c3 93 13                 3241 	JP	ADS2
                                           3242 ; 
                                           3243 ; FLOATING POINT DIVISION
                                           3244 ; 
             1530 c5                       3245 FDIV:	PUSH	BC
             1531 7e                       3246 	LD	A,(HL)		;FETCH DIVISOR EXP
             1532 b7                       3247 	OR	A		;DIVIDE BY ZERO?
             1533 ca 83 16                 3248 	JP	Z,DIVZ
             1536 1a                       3249 	LD	A,(DE)
             1537 b7                       3250 	OR	A		;DIVIDEND 0?
             1538 ca 8e 16                 3251 	JP	Z,INSP
             153b 96                       3252 	SUB	(HL)
             153c da 45 15                 3253 	JP	C,DIVUN
             153f fa 83 16                 3254 	JP	M,OVER
             1542 c3 48 15                 3255 	JP	FDI1
             1545 f2 89 16                 3256 DIVUN:	JP	P,UNDER
             1548 c6 81                    3257 FDI1:	ADD	A,129		;FORM QUOTIENT EXP
             154a 32 95 16                 3258 	LD	(EXPD),A
             154d eb                       3259 	EX	DE,HL
             154e d5                       3260 	PUSH	DE
             154f cd 13 16                 3261 	CALL	LOAD		;FETCH DIVIDEND
             1552 d1                       3262 	POP	DE
             1553 eb                       3263 	EX	DE,HL
             1554 3a b7 16                 3264 	LD	A,(SIGN)
             1557 2b                       3265 	DEC	HL
             1558 ae                       3266 	XOR	(HL)		;FORM QUOTIENT SIGN
             1559 32 94 16                 3267 	LD	(SIGND),A
             155c eb                       3268 	EX	DE,HL
             155d 1b                       3269 	DEC	DE
             155e 01 91 16                 3270 	LD	BC,HOLD1
             1561 2e 06                    3271 DIV0:	LD	L,DIGIT+DIGIT
             1563 c5                       3272 DIV1:	PUSH	BC
             1564 e5                       3273 	PUSH	HL
             1565 0e 00                    3274 	LD	C,0		;QUOTIENT DIGIT = 0
             1567 37                       3275 DIV3:	SCF		;SET CARRY
             1568 21 b6 16                 3276 	LD	HL,BUF+DIGIT-1
             156b 06 03                    3277 	LD	B,DIGIT
             156d 3e 99                    3278 DIV4:	LD	A,99H
             156f ce 00                    3279 	ADC	A,0
             1571 eb                       3280 	EX	DE,HL
             1572 96                       3281 	SUB	(HL)
             1573 eb                       3282 	EX	DE,HL
             1574 86                       3283 	ADD	A,(HL)
             1575 27                       3284 	DAA
             1576 77                       3285 	LD	(HL),A
             1577 2b                       3286 	DEC	HL
             1578 1b                       3287 	DEC	DE
             1579 05                       3288 	DEC	B
             157a c2 6d 15                 3289 	JP	NZ,DIV4
             157d 7e                       3290 	LD	A,(HL)
             157e 3f                       3291 	CCF
             157f de 00                    3292 	SBC	A,0
             1581 77                       3293 	LD	(HL),A
             1582 1f                       3294 	RRA	
             1583 21 03 00                 3295 	LD	HL,DIGIT
             1586 19                       3296 	ADD	HL,DE
             1587 eb                       3297 	EX	DE,HL
             1588 0c                       3298 	INC	C		;INCREMENT QUOTIENT
             1589 17                       3299 	RLA
             158a d2 67 15                 3300 	JP	NC,DIV3
             158d b7                       3301 	OR	A		;CLEAR CARRY
             158e cd 9c 13                 3302 	CALL	ADDX		;RESTORE DIVIDEND
             1591 21 03 00                 3303 	LD	HL,DIGIT
             1594 19                       3304 	ADD	HL,DE
             1595 eb                       3305 	EX	DE,HL
             1596 c5                       3306 	PUSH	BC
             1597 06 04                    3307 	LD	B,4
             1599 cd 5d 16                 3308 	CALL	LEFT		;SHIFT DIVIDEND
             159c c1                       3309 	POP	BC
             159d 0d                       3310 	DEC	C
             159e e1                       3311 	POP	HL
             159f 61                       3312 	LD	H,C
             15a0 c1                       3313 	POP	BC
             15a1 7d                       3314 	LD	A,L
             15a2 c2 b4 15                 3315 	JP	NZ,DIV5
             15a5 fe 06                    3316 	CP	DIGIT+DIGIT
             15a7 c2 b4 15                 3317 	JP	NZ,DIV5
             15aa 21 95 16                 3318 	LD	HL,EXPD
             15ad 35                       3319 	DEC	(HL)
             15ae cc 89 16                 3320 	CALL	Z,UNDER
             15b1 c3 61 15                 3321 	JP	DIV0
             15b4 1f                       3322 DIV5:	RRA
             15b5 7c                       3323 	LD	A,H
             15b6 d2 c4 15                 3324 	JP	NC,DIV6
             15b9 0a                       3325 	LD	A,(BC)
             15ba 07                       3326 	RLCA
             15bb 07                       3327 	RLCA
             15bc 07                       3328 	RLCA
             15bd 07                       3329 	RLCA
             15be 84                       3330 	ADD	A,H
             15bf 02                       3331 	LD	(BC),A		;STORE QUOTIENT
             15c0 03                       3332 	INC	BC
             15c1 c3 c5 15                 3333 	JP	DIV7
             15c4 02                       3334 DIV6:	LD	(BC),A		;STORE QUOTIENT
             15c5 2d                       3335 DIV7:	DEC	L		;DECREMENT DIGIT COUNT
             15c6 c2 63 15                 3336 	JP	NZ,DIV1
             15c9 21 95 16                 3337 	LD	HL,EXPD
             15cc c1                       3338 	POP	BC
             15cd cd 2c 16                 3339 	CALL	STORO
             15d0 c9                       3340 	RET		;***** CALL, RET????!!!!!*******
                                           3341 ; 
                                           3342 ; FETCH AND ALIGN ARGUMENTS FOR
                                           3343 ; ADDITION AND SUBTRACTION
                                           3344 ; 
             15d1 1a                       3345 EXPCK:	LD	A,(DE)
             15d2 96                       3346 	SUB	(HL)		;DIFFERENCE OF EXPONENTS
             15d3 0e 00                    3347 	LD	C,0
             15d5 d2 dc 15                 3348 	JP	NC,EXPC1
             15d8 0c                       3349 	INC	C
             15d9 eb                       3350 	EX	DE,HL
             15da 2f                       3351 	CPL
             15db 3c                       3352 	INC	A
             15dc 47                       3353 EXPC1:	LD	B,A
             15dd 1a                       3354 	LD	A,(DE)
             15de 32 b8 16                 3355 	LD	(EXP),A
             15e1 78                       3356 	LD	A,B
             15e2 fe 06                    3357 	CP	DIGIT+DIGIT
             15e4 da e9 15                 3358 	JP	C,EXPC2
             15e7 3e 06                    3359 	LD	A,DIGIT+DIGIT
             15e9 07                       3360 EXPC2:	RLCA
             15ea 07                       3361 	RLCA
             15eb 47                       3362 	LD	B,A
             15ec e6 04                    3363 	AND	4
             15ee 32 b9 16                 3364 	LD	(RCTRL),A	;SET ROUNDING CONTROL
             15f1 c5                       3365 	PUSH	BC
             15f2 d5                       3366 	PUSH	DE
             15f3 cd 13 16                 3367 	CALL	LOAD		;LOAD SMALLER VALUE
             15f6 3e 28                    3368 	LD	A,8*DIGIT+16
             15f8 90                       3369 	SUB	B
             15f9 fe 28                    3370 	CP	8*DIGIT+16
             15fb ca 0d 16                 3371 	JP	Z,EXPC3
             15fe e6 f8                    3372 	AND	0F8H
             1600 1f                       3373 	RRA
             1601 1f                       3374 	RRA
             1602 1f                       3375 	RRA
             1603 83                       3376 	ADD	A,E
             1604 5f                       3377 	LD	E,A
             1605 7a                       3378 	LD	A,D
             1606 ce 00                    3379 	ADC	A,0
             1608 57                       3380 	LD	D,A
             1609 1a                       3381 	LD	A,(DE)		;GET ROUNDING DIGIT
             160a 32 ba 16                 3382 	LD	(RDIGI),A	;SAVE
             160d cd 37 16                 3383 EXPC3:	CALL	RIGHT		;ALIGN VALUES
             1610 d1                       3384 	POP	DE
             1611 c1                       3385 	POP	BC
             1612 c9                       3386 	RET
                                           3387 ; LOAD ARGUMENT INTO BUFFER
             1613 11 b7 16                 3388 LOAD:	LD	DE,SIGN
             1616 0e 04                    3389 	LD	C,DIGIT+1
             1618 2b                       3390 	DEC	HL
             1619 7e                       3391 LOAD1:	LD	A,(HL)
             161a 12                       3392 	LD	(DE),A
             161b 2b                       3393 	DEC	HL	
             161c 1b                       3394 	DEC	DE
             161d 0d                       3395 	DEC	C
             161e c2 19 16                 3396 	JP	NZ,LOAD1
             1621 af                       3397 	XOR	A
             1622 12                       3398 	LD	(DE),A
             1623 1b                       3399 	DEC	DE
             1624 12                       3400 	LD	(DE),A
             1625 32 ba 16                 3401 	LD	(RDIGI),A	;ZERO ROUNDING DIGIT
             1628 c9                       3402 	RET
                                           3403 ; STORE RESULTS IN MEMORY
             1629 21 b8 16                 3404 STORE:	LD	HL,EXP
             162c 1e 05                    3405 STORO:	LD	E,DIGIT+2
             162e 7e                       3406 STOR1:	LD	A,(HL)
             162f 02                       3407 	LD	(BC),A
             1630 0b                       3408 	DEC	BC
             1631 2b                       3409 	DEC	HL
             1632 1d                       3410 	DEC	E
             1633 c2 2e 16                 3411 	JP	NZ,STOR1
             1636 c9                       3412 	RET
                                           3413 ; SHIFT RIGHT NUMBER OF DIGITS
                                           3414 ; IN B/4
             1637 0e 04                    3415 RIGHT:	LD	C,DIGIT+1
             1639 21 b3 16                 3416 RIGH1:	LD	HL,BUF-1
             163c 78                       3417 	LD	A,B
             163d d6 08                    3418 	SUB	8		;CHECK IF BYTE CAN BE SHIFTED
             163f d2 50 16                 3419 	JP	NC,RIGH3
             1642 05                       3420 	DEC	B
             1643 f8                       3421 	RET	M
             1644 b7                       3422 	OR	A
             1645 7e                       3423 RIGH2:	LD	A,(HL)
             1646 1f                       3424 	RRA
             1647 77                       3425 	LD	(HL),A
             1648 23                       3426 	INC	HL
             1649 0d                       3427 	DEC	C
             164a c2 45 16                 3428 	JP	NZ,RIGH2
             164d c3 37 16                 3429 	JP	RIGHT
                                           3430 ; SHIFT RIGHT ONE BYTE
             1650 47                       3431 RIGH3:	LD	B,A
             1651 af                       3432 	XOR	A
             1652 56                       3433 RIGH4:	LD	D,(HL)
             1653 77                       3434 	LD	(HL),A
             1654 7a                       3435 	LD	A,D
             1655 23                       3436 	INC	HL
             1656 0d                       3437 	DEC	C
             1657 c2 52 16                 3438 	JP	NZ,RIGH4
             165a c3 37 16                 3439 	JP	RIGHT
                                           3440 ; SHIFT LEFT NUMBER OF DIGITS
                                           3441 ; IN B/4
             165d 0e 04                    3442 LEFT:	LD	C,DIGIT+1
             165f 21 b6 16                 3443 	LD	HL,SIGN-1
             1662 78                       3444 LEF1:	LD	A,B
             1663 d6 08                    3445 	SUB	8
             1665 d2 76 16                 3446 	JP	NC,LEF3
             1668 05                       3447 	DEC	B
             1669 f8                       3448 	RET	M
             166a b7                       3449 	OR	A
             166b 7e                       3450 LEF2:	LD	A,(HL)
             166c 17                       3451 	RLA
             166d 77                       3452 	LD	(HL),A
             166e 2b                       3453 	DEC	HL
             166f 0d                       3454 	DEC	C
             1670 c2 6b 16                 3455 	JP	NZ,LEF2
             1673 c3 5d 16                 3456 	JP	LEFT
                                           3457 ; SHIFT LEFT ONE BYTE
             1676 47                       3458 LEF3:	LD	B,A
             1677 af                       3459 	XOR	A
             1678 56                       3460 LEF4:	LD	D,(HL)
             1679 77                       3461 	LD	(HL),A
             167a 7a                       3462 	LD	A,D
             167b 2b                       3463 	DEC	HL
             167c 0d                       3464 	DEC	C
             167d c2 78 16                 3465 	JP	NZ,LEF4
             1680 c3 5d 16                 3466 	JP	LEFT
                                           3467 ; SET FLAGS FOR OVERFLOW, UNDERFLOW,
                                           3468 ; AND DIVIDE BY ZERO
             1683                          3469 DIVZ:
             1683 01 50 46                 3470 OVER:	LD	BC,'FP'
             1686 c3 b2 01                 3471 	JP	ERROR
             1689 3e ff                    3472 UNDER:	LD	A,-1
             168b 32 b2 16                 3473 	LD	(ERRI),A
             168e 33                       3474 INSP:	INC	SP
             168f 33                       3475 	INC	SP
             1690 c9                       3476 	RET
                                           3477 ; 
                                           3478 ; FLOATING POINT RAM
                                           3479 ; 
             1691                          3480 HOLD1:	DEFS	DIGIT+1
             1695                          3481 HOLD2:	DEFS	DIGIT+1
             1699                          3482 HOLD3:	DEFS	DIGIT+1
             169d                          3483 HOLD4:	DEFS	DIGIT+1
             16a1                          3484 HOLD5:	DEFS	DIGIT+1
             16a5                          3485 HOLD6:	DEFS	DIGIT+1
             16a9                          3486 HOLD7:	DEFS	DIGIT+1
             16ad                          3487 HOLD8:	DEFS	DIGIT+1
             16b1                          3488 	DEFS	1
             16b2                          3489 ERRI:	DEFS	1		;ERROR FLAG
             16b3                          3490 	DEFS	1
             16b4                          3491 BUF:	DEFS	DIGIT		;WORKING BUFFER
             16b7                          3492 SIGN:	DEFS	1		;SIGN BIT
             16b8                          3493 EXP:	DEFS	1		;EXPONENT
             16b9                          3494 RCTRL:	DEFS	1		;ROUNDING CONTROL FLAG 1=MSD
             16ba                          3495 RDIGI:	DEFS	1		;ROUNDING DIGIT
             1694                          3496 SIGND	EQU	HOLD1+DIGIT
             1695                          3497 EXPD	EQU	HOLD1+DIGIT+1
                                           3498 ; 
                                           3499 ; SYSTEM RAM
                                           3500 ; 
             16bb                          3501 EROM:	DEFS	100
             171f                          3502 CMNDSP: 
             171f                          3503 PHEAD:	DEFS	1
             1720                          3504 RELTYP: DEFS	1
             1721                          3505 NULLCT: DEFS	1
             1722                          3506 ARGF:	DEFS	1
             1723                          3507 DIRF:	DEFS	1
             1724                          3508 TXA:	DEFS	2
             0064                          3509 CSTKSZ	EQU	100
             1726                          3510 CSTKL:	DEFS	100
             00b6                          3511 ASTKSZ	EQU	FPSIZ*LINLEN/2
             178a                          3512 ASTKL:	DEFS	FPSIZ*LINLEN/2
             1840                          3513 RTXA:	DEFS	2
             1842                          3514 STAA:	DEFS	2
             1844                          3515 CSTKA:	DEFS	2
             1846                          3516 SINK:	DEFS	FPSIZ-1
             184a                          3517 FPSINK: DEFS	FPSIZ
             184f                          3518 FTEMP:	DEFS	FPSIZ
             1854                          3519 FTEM1:	DEFS	FPSIZ
             1859                          3520 FTEM2:	DEFS	FPSIZ
             185e                          3521 FRAND:	DEFS	1
             185f                          3522 IBCNT:	DEFS	1
             1860                          3523 IBLN:	DEFS	2
             1862                          3524 IBUF:	DEFS	LINLEN
             18ab                          3525 ASTKA:	DEFS	2
             18ad                          3526 MATA:	DEFS	2
             18af                          3527 ADDS:	DEFS	2
             18b1                          3528 ADDT:	DEFS	2
             18b3                          3529 BCADD:	DEFS	2
             18b5                          3530 OPST:	DEFS	1
             18b6                          3531 OPSTR:	DEFS	1
             18b7                          3532 ECNT:	DEFS	1
             18b8                          3533 FSIGN:	DEFS	1
             18b9                          3534 BCX:	DEFS	DIGIT+2
             18be                          3535 ABUF:	DEFS	DIGIT*2+2
             18c6                          3536 XSIGN:	DEFS	1
             18c7                          3537 EXPO:	DEFS	1
             18c8                          3538 FES:	DEFS	1
             18c9                          3539 INFES:	DEFS	1
             18ca                          3540 MAXL:	DEFS	2
             18cc                          3541 INSA:	DEFS	2
                                           3542 ; 
                                           3543 ; SPECIAL INTERFACE GLOBAL
                                           3544 ; 
             18ce                          3545 BRKCHR: DEFS	1
             18cf                          3546 CALST:	DEFS	6
             18d5                          3547 CALLA:	DEFS	2
             18d7                          3548 EOFA:	DEFS	2		;END OF FILE ADDRESS
             18d9                          3549 BOFA:	DEFS	2		;START OF FILE ADDRESS
             18db                          3550 MEMTOP: DEFS	2		;STORAGE FOR LAST ASSIGNED MEMORY LOCATION
             18dd                          3551 BASEND:					;END OF BASIC/START OF USER
